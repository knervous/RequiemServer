// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.4
// source: EQMessage.proto

package main

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ItemPacketType int32

const (
	ItemPacketType_ItemPacketViewLink       ItemPacketType = 0
	ItemPacketType_ItemPacketTradeView      ItemPacketType = 101
	ItemPacketType_ItemPacketLoot           ItemPacketType = 102
	ItemPacketType_ItemPacketTrade          ItemPacketType = 103
	ItemPacketType_ItemPacketCharInventory  ItemPacketType = 105
	ItemPacketType_ItemPacketSummonItem     ItemPacketType = 106
	ItemPacketType_ItemPacketTributeItem    ItemPacketType = 108
	ItemPacketType_ItemPacketMerchant       ItemPacketType = 100
	ItemPacketType_ItemPacketWorldContainer ItemPacketType = 6
)

// Enum value maps for ItemPacketType.
var (
	ItemPacketType_name = map[int32]string{
		0:   "ItemPacketViewLink",
		101: "ItemPacketTradeView",
		102: "ItemPacketLoot",
		103: "ItemPacketTrade",
		105: "ItemPacketCharInventory",
		106: "ItemPacketSummonItem",
		108: "ItemPacketTributeItem",
		100: "ItemPacketMerchant",
		6:   "ItemPacketWorldContainer",
	}
	ItemPacketType_value = map[string]int32{
		"ItemPacketViewLink":       0,
		"ItemPacketTradeView":      101,
		"ItemPacketLoot":           102,
		"ItemPacketTrade":          103,
		"ItemPacketCharInventory":  105,
		"ItemPacketSummonItem":     106,
		"ItemPacketTributeItem":    108,
		"ItemPacketMerchant":       100,
		"ItemPacketWorldContainer": 6,
	}
)

func (x ItemPacketType) Enum() *ItemPacketType {
	p := new(ItemPacketType)
	*p = x
	return p
}

func (x ItemPacketType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ItemPacketType) Descriptor() protoreflect.EnumDescriptor {
	return file_EQMessage_proto_enumTypes[0].Descriptor()
}

func (ItemPacketType) Type() protoreflect.EnumType {
	return &file_EQMessage_proto_enumTypes[0]
}

func (x ItemPacketType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ItemPacketType.Descriptor instead.
func (ItemPacketType) EnumDescriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{0}
}

type OpCodes int32

const (
	OpCodes_OP_Unknown OpCodes = 0
	// Login
	OpCodes_OP_LoginWeb              OpCodes = 304
	OpCodes_OP_LoginAccepted         OpCodes = 305
	OpCodes_OP_PlayEverquestRequest  OpCodes = 385
	OpCodes_OP_PlayEverquestResponse OpCodes = 386
	OpCodes_OP_ServerListRequest     OpCodes = 458
	OpCodes_OP_ServerListResponse    OpCodes = 459
	// World
	OpCodes_OP_ApproveName           OpCodes = 40
	OpCodes_OP_CharacterCreate       OpCodes = 77
	OpCodes_OP_DeleteCharacter       OpCodes = 119
	OpCodes_OP_ApproveName_Server    OpCodes = 5040
	OpCodes_OP_EnterWorld            OpCodes = 160
	OpCodes_OP_ExpansionInfo         OpCodes = 162
	OpCodes_OP_GuildsList            OpCodes = 245
	OpCodes_OP_PostEnterWorld        OpCodes = 391
	OpCodes_OP_SendCharInfo          OpCodes = 444
	OpCodes_OP_SendLoginInfo         OpCodes = 448
	OpCodes_OP_SendMaxCharacters     OpCodes = 449
	OpCodes_OP_SendMembership        OpCodes = 450
	OpCodes_OP_SendMembershipDetails OpCodes = 451
	OpCodes_OP_ZoneServerInfo        OpCodes = 585
	OpCodes_OP_WebInitiateConnection OpCodes = 591
	// Zone
	OpCodes_OP_ZoneEntry                 OpCodes = 581
	OpCodes_OP_SetServerFilter           OpCodes = 468
	OpCodes_OP_SendAATable               OpCodes = 443
	OpCodes_OP_SendTributes              OpCodes = 454
	OpCodes_OP_SendGuildTributes         OpCodes = 447
	OpCodes_OP_SendAAStats               OpCodes = 442
	OpCodes_OP_ReqClientSpawn            OpCodes = 423
	OpCodes_OP_ReqNewZone                OpCodes = 424
	OpCodes_OP_SendExpZonein             OpCodes = 445
	OpCodes_OP_ClientReady               OpCodes = 92
	OpCodes_OP_ClientError               OpCodes = 91
	OpCodes_OP_ApproveZone               OpCodes = 42
	OpCodes_OP_TGB                       OpCodes = 524
	OpCodes_OP_AckPacket                 OpCodes = 7
	OpCodes_OP_ClientUpdate              OpCodes = 94
	OpCodes_OP_AutoAttack                OpCodes = 47
	OpCodes_OP_AutoAttack2               OpCodes = 48
	OpCodes_OP_Consent                   OpCodes = 102
	OpCodes_OP_ConsentDeny               OpCodes = 103
	OpCodes_OP_TargetMouse               OpCodes = 513
	OpCodes_OP_TargetCommand             OpCodes = 511
	OpCodes_OP_Shielding                 OpCodes = 485
	OpCodes_OP_Jump                      OpCodes = 274
	OpCodes_OP_AdventureInfoRequest      OpCodes = 15
	OpCodes_OP_AdventureRequest          OpCodes = 23
	OpCodes_OP_LDoNButton                OpCodes = 278
	OpCodes_OP_LeaveAdventure            OpCodes = 286
	OpCodes_OP_Consume                   OpCodes = 107
	OpCodes_OP_AdventureMerchantRequest  OpCodes = 19
	OpCodes_OP_AdventureMerchantPurchase OpCodes = 18
	OpCodes_OP_ConsiderCorpse            OpCodes = 106
	OpCodes_OP_Consider                  OpCodes = 105
	OpCodes_OP_Begging                   OpCodes = 58
	OpCodes_OP_TestBuff                  OpCodes = 523
	OpCodes_OP_Surname                   OpCodes = 508
	OpCodes_OP_YellForHelp               OpCodes = 578
	OpCodes_OP_Assist                    OpCodes = 43
	OpCodes_OP_GMTraining                OpCodes = 201
	OpCodes_OP_GMEndTraining             OpCodes = 188
	OpCodes_OP_GMTrainSkill              OpCodes = 202
	OpCodes_OP_RequestDuel               OpCodes = 426
	OpCodes_OP_DuelDecline               OpCodes = 132
	OpCodes_OP_DuelAccept                OpCodes = 133
	OpCodes_OP_SpawnAppearance           OpCodes = 500
	OpCodes_OP_BazaarInspect             OpCodes = 54
	OpCodes_OP_Death                     OpCodes = 117
	OpCodes_OP_MoveCoin                  OpCodes = 346
	OpCodes_OP_ItemLinkClick             OpCodes = 264
	OpCodes_OP_MoveItem                  OpCodes = 348
	OpCodes_OP_Camp                      OpCodes = 69
	OpCodes_OP_Logout                    OpCodes = 310
	OpCodes_OP_SenseHeading              OpCodes = 456
	OpCodes_OP_FeignDeath                OpCodes = 166
	OpCodes_OP_Sneak                     OpCodes = 495
	OpCodes_OP_Hide                      OpCodes = 251
	OpCodes_OP_ChannelMessage            OpCodes = 76
	OpCodes_OP_WearChange                OpCodes = 560
	OpCodes_OP_DeleteSpawn               OpCodes = 123
	OpCodes_OP_SaveOnZoneReq             OpCodes = 440
	OpCodes_OP_Save                      OpCodes = 439
	OpCodes_OP_WhoAllRequest             OpCodes = 563
	OpCodes_OP_GMZoneRequest             OpCodes = 204
	OpCodes_OP_GMZoneRequest2            OpCodes = 205
	OpCodes_OP_EndLootRequest            OpCodes = 157
	OpCodes_OP_LootRequest               OpCodes = 315
	OpCodes_OP_Dye                       OpCodes = 135
	OpCodes_OP_ConfirmDelete             OpCodes = 101
	OpCodes_OP_LootItem                  OpCodes = 314
	OpCodes_OP_GuildDelete               OpCodes = 228
	OpCodes_OP_GuildPublicNote           OpCodes = 243
	OpCodes_OP_GetGuildsList             OpCodes = 182
	OpCodes_OP_SetGuildMOTD              OpCodes = 465
	OpCodes_OP_SetRunMode                OpCodes = 467
	OpCodes_OP_GuildPeace                OpCodes = 241
	OpCodes_OP_GuildWar                  OpCodes = 249
	OpCodes_OP_GuildLeader               OpCodes = 232
	OpCodes_OP_GuildDemote               OpCodes = 229
	OpCodes_OP_GuildInvite               OpCodes = 230
	OpCodes_OP_GuildRemove               OpCodes = 244
	OpCodes_OP_GuildInviteAccept         OpCodes = 231
	OpCodes_OP_ManaChange                OpCodes = 316
	OpCodes_OP_MemorizeSpell             OpCodes = 321
	OpCodes_OP_SwapSpell                 OpCodes = 509
	OpCodes_OP_CastSpell                 OpCodes = 74
	OpCodes_OP_DeleteItem                OpCodes = 121
	OpCodes_OP_CombatAbility             OpCodes = 98
	OpCodes_OP_Taunt                     OpCodes = 522
	OpCodes_OP_InstillDoubt              OpCodes = 262
	OpCodes_OP_RezzAnswer                OpCodes = 433
	OpCodes_OP_GMSummon                  OpCodes = 199
	OpCodes_OP_TradeBusy                 OpCodes = 530
	OpCodes_OP_TradeRequest              OpCodes = 536
	OpCodes_OP_TradeRequestAck           OpCodes = 537
	OpCodes_OP_CancelTrade               OpCodes = 72
	OpCodes_OP_TradeAcceptClick          OpCodes = 529
	OpCodes_OP_BoardBoat                 OpCodes = 62
	OpCodes_OP_LeaveBoat                 OpCodes = 287
	OpCodes_OP_RandomReq                 OpCodes = 409
	OpCodes_OP_Buff                      OpCodes = 64
	OpCodes_OP_GMHideMe                  OpCodes = 192
	OpCodes_OP_GMNameChange              OpCodes = 196
	OpCodes_OP_GMKill                    OpCodes = 194
	OpCodes_OP_GMLastName                OpCodes = 195
	OpCodes_OP_GMToggle                  OpCodes = 200
	OpCodes_OP_LFGCommand                OpCodes = 291
	OpCodes_OP_GMGoto                    OpCodes = 191
	OpCodes_OP_TraderShop                OpCodes = 539
	OpCodes_OP_ShopRequest               OpCodes = 492
	OpCodes_OP_Bazaar                    OpCodes = 53
	OpCodes_OP_ShopPlayerBuy             OpCodes = 490
	OpCodes_OP_ShopPlayerSell            OpCodes = 491
	OpCodes_OP_ShopEnd                   OpCodes = 487
	OpCodes_OP_CloseContainer            OpCodes = 95
	OpCodes_OP_ClickObjectAction         OpCodes = 90
	OpCodes_OP_ClickObject               OpCodes = 89
	OpCodes_OP_RecipesFavorite           OpCodes = 414
	OpCodes_OP_RecipesSearch             OpCodes = 415
	OpCodes_OP_RecipeDetails             OpCodes = 412
	OpCodes_OP_RecipeAutoCombine         OpCodes = 411
	OpCodes_OP_TradeSkillCombine         OpCodes = 540
	OpCodes_OP_ItemName                  OpCodes = 267
	OpCodes_OP_AugmentItem               OpCodes = 46
	OpCodes_OP_ClickDoor                 OpCodes = 88
	OpCodes_OP_FaceChange                OpCodes = 164
	OpCodes_OP_GroupInvite               OpCodes = 215
	OpCodes_OP_GroupInvite2              OpCodes = 216
	OpCodes_OP_GroupFollow               OpCodes = 213
	OpCodes_OP_GroupFollow2              OpCodes = 214
	OpCodes_OP_GroupAcknowledge          OpCodes = 207
	OpCodes_OP_GroupCancelInvite         OpCodes = 208
	OpCodes_OP_GroupDisband              OpCodes = 210
	OpCodes_OP_GroupDelete               OpCodes = 209
	OpCodes_OP_GMEmoteZone               OpCodes = 187
	OpCodes_OP_InspectRequest            OpCodes = 261
	OpCodes_OP_InspectAnswer             OpCodes = 258
	OpCodes_OP_DeleteSpell               OpCodes = 124
	OpCodes_OP_PetitionBug               OpCodes = 368
	OpCodes_OP_Bug                       OpCodes = 67
	OpCodes_OP_Petition                  OpCodes = 367
	OpCodes_OP_PetitionCheckIn           OpCodes = 369
	OpCodes_OP_PetitionResolve           OpCodes = 375
	OpCodes_OP_PetitionDelete            OpCodes = 372
	OpCodes_OP_PetitionUnCheckout        OpCodes = 379
	OpCodes_OP_PetitionQue               OpCodes = 373
	OpCodes_OP_PDeletePetition           OpCodes = 362
	OpCodes_OP_PetitionCheckout          OpCodes = 370
	OpCodes_OP_PetitionRefresh           OpCodes = 374
	OpCodes_OP_PetCommands               OpCodes = 364
	OpCodes_OP_ReadBook                  OpCodes = 410
	OpCodes_OP_Emote                     OpCodes = 156
	OpCodes_OP_GMDelCorpse               OpCodes = 186
	OpCodes_OP_GMKick                    OpCodes = 193
	OpCodes_OP_GMServers                 OpCodes = 198
	OpCodes_OP_Illusion                  OpCodes = 254
	OpCodes_OP_GMBecomeNPC               OpCodes = 185
	OpCodes_OP_Fishing                   OpCodes = 173
	OpCodes_OP_Forage                    OpCodes = 176
	OpCodes_OP_Mend                      OpCodes = 322
	OpCodes_OP_EnvDamage                 OpCodes = 161
	OpCodes_OP_Damage                    OpCodes = 116
	OpCodes_OP_AAAction                  OpCodes = 4
	OpCodes_OP_TraderBuy                 OpCodes = 534
	OpCodes_OP_Trader                    OpCodes = 533
	OpCodes_OP_GMFind                    OpCodes = 190
	OpCodes_OP_PickPocket                OpCodes = 381
	OpCodes_OP_Bind_Wound                OpCodes = 60
	OpCodes_OP_TrackTarget               OpCodes = 527
	OpCodes_OP_Track                     OpCodes = 526
	OpCodes_OP_TrackUnknown              OpCodes = 528
	OpCodes_OP_ReloadUI                  OpCodes = 417
	OpCodes_OP_Split                     OpCodes = 505
	OpCodes_OP_SenseTraps                OpCodes = 457
	OpCodes_OP_DisarmTraps               OpCodes = 127
	OpCodes_OP_OpenTributeMaster         OpCodes = 361
	OpCodes_OP_OpenGuildTributeMaster    OpCodes = 359
	OpCodes_OP_TributeItem               OpCodes = 543
	OpCodes_OP_TributeMoney              OpCodes = 544
	OpCodes_OP_SelectTribute             OpCodes = 441
	OpCodes_OP_TributeUpdate             OpCodes = 549
	OpCodes_OP_TributeToggle             OpCodes = 548
	OpCodes_OP_TributeNPC                OpCodes = 545
	OpCodes_OP_CrashDump                 OpCodes = 111
	OpCodes_OP_ControlBoat               OpCodes = 108
	OpCodes_OP_DumpName                  OpCodes = 134
	OpCodes_OP_SafeFallSuccess           OpCodes = 437
	OpCodes_OP_Heartbeat                 OpCodes = 250
	OpCodes_OP_SafePoint                 OpCodes = 438
	OpCodes_OP_FindPersonRequest         OpCodes = 169
	OpCodes_OP_LeadershipExpToggle       OpCodes = 284
	OpCodes_OP_PurchaseLeadershipAA      OpCodes = 394
	OpCodes_OP_BankerChange              OpCodes = 51
	OpCodes_OP_SetTitle                  OpCodes = 470
	OpCodes_OP_RequestTitles             OpCodes = 428
	OpCodes_OP_ItemVerifyRequest         OpCodes = 272
	OpCodes_OP_ClearObject               OpCodes = 86
	OpCodes_OP_FinishTrade               OpCodes = 170
	OpCodes_OP_GMEndTrainingResponse     OpCodes = 189
	OpCodes_OP_LootComplete              OpCodes = 313
	OpCodes_OP_WorldObjectsSent          OpCodes = 571
	OpCodes_OP_FinishWindow              OpCodes = 171
	OpCodes_OP_FinishWindow2             OpCodes = 172
	OpCodes_OP_ItemPacket                OpCodes = 268
	OpCodes_OP_ColoredText               OpCodes = 97
	OpCodes_OP_ItemRecastDelay           OpCodes = 270
	OpCodes_OP_FormattedMessage          OpCodes = 178
	OpCodes_OP_GuildMemberList           OpCodes = 238
	OpCodes_OP_InterruptCast             OpCodes = 263
	OpCodes_OP_ItemLinkResponse          OpCodes = 265
	OpCodes_OP_ZoneSpawns                OpCodes = 587
	OpCodes_OP_CompletedTasks            OpCodes = 100
	OpCodes_OP_CharInventory             OpCodes = 79
	OpCodes_OP_CustomTitles              OpCodes = 115
	OpCodes_OP_SpawnDoor                 OpCodes = 501
	OpCodes_OP_SendZonepoints            OpCodes = 455
	OpCodes_OP_TributeInfo               OpCodes = 542
	OpCodes_OP_GuildTributeInfo          OpCodes = 247
	OpCodes_OP_SendTitleList             OpCodes = 453
	OpCodes_OP_AAExpUpdate               OpCodes = 5
	OpCodes_OP_Action                    OpCodes = 8
	OpCodes_OP_AdventureData             OpCodes = 11
	OpCodes_OP_AdventureFinish           OpCodes = 13
	OpCodes_OP_AdventurePointsUpdate     OpCodes = 22
	OpCodes_OP_Animation                 OpCodes = 37
	OpCodes_OP_AnnoyingZoneUnknown       OpCodes = 38
	OpCodes_OP_BecomeTrader              OpCodes = 57
	OpCodes_OP_BeginCast                 OpCodes = 59
	OpCodes_OP_Charm                     OpCodes = 80
	OpCodes_OP_CameraEffect              OpCodes = 68
	OpCodes_OP_ConsentResponse           OpCodes = 104
	OpCodes_OP_EnduranceUpdate           OpCodes = 158
	OpCodes_OP_ExpUpdate                 OpCodes = 163
	OpCodes_OP_GroundSpawn               OpCodes = 206
	OpCodes_OP_GroupUpdate               OpCodes = 222
	OpCodes_OP_GuildMOTD                 OpCodes = 240
	OpCodes_OP_GuildManageAdd            OpCodes = 233
	OpCodes_OP_GuildManageRemove         OpCodes = 235
	OpCodes_OP_GuildManageStatus         OpCodes = 236
	OpCodes_OP_GuildMemberUpdate         OpCodes = 239
	OpCodes_OP_HPUpdate                  OpCodes = 253
	OpCodes_OP_IncreaseStats             OpCodes = 255
	OpCodes_OP_ItemVerifyReply           OpCodes = 271
	OpCodes_OP_LFGAppearance             OpCodes = 290
	OpCodes_OP_LeadershipExpUpdate       OpCodes = 285
	OpCodes_OP_LevelAppearance           OpCodes = 288
	OpCodes_OP_LevelUpdate               OpCodes = 289
	OpCodes_OP_ManaUpdate                OpCodes = 317
	OpCodes_OP_MobEnduranceUpdate        OpCodes = 338
	OpCodes_OP_MobHealth                 OpCodes = 339
	OpCodes_OP_MobManaUpdate             OpCodes = 340
	OpCodes_OP_MobRename                 OpCodes = 341
	OpCodes_OP_MoneyOnCorpse             OpCodes = 343
	OpCodes_OP_MoneyUpdate               OpCodes = 344
	OpCodes_OP_MoveDoor                  OpCodes = 347
	OpCodes_OP_NewSpawn                  OpCodes = 353
	OpCodes_OP_NewZone                   OpCodes = 355
	OpCodes_OP_PetitionUpdate            OpCodes = 380
	OpCodes_OP_PlayerProfile             OpCodes = 382
	OpCodes_OP_RaidUpdate                OpCodes = 406
	OpCodes_OP_RandomReply               OpCodes = 408
	OpCodes_OP_RecipeReply               OpCodes = 413
	OpCodes_OP_RequestClientZoneChange   OpCodes = 425
	OpCodes_OP_RespondAA                 OpCodes = 430
	OpCodes_OP_RezzRequest               OpCodes = 435
	OpCodes_OP_SetTitleReply             OpCodes = 471
	OpCodes_OP_ShopDelItem               OpCodes = 486
	OpCodes_OP_SimpleMessage             OpCodes = 493
	OpCodes_OP_SkillUpdate               OpCodes = 494
	OpCodes_OP_SomeItemPacketMaybe       OpCodes = 498
	OpCodes_OP_SpellEffect               OpCodes = 504
	OpCodes_OP_Stamina                   OpCodes = 506
	OpCodes_OP_Stun                      OpCodes = 507
	OpCodes_OP_TargetReject              OpCodes = 514
	OpCodes_OP_TimeOfDay                 OpCodes = 525
	OpCodes_OP_TradeCoins                OpCodes = 531
	OpCodes_OP_TradeMoneyUpdate          OpCodes = 532
	OpCodes_OP_TraderDelItem             OpCodes = 535
	OpCodes_OP_TraderItemUpdate          OpCodes = 538
	OpCodes_OP_TributeTimer              OpCodes = 547
	OpCodes_OP_UpdateLeadershipAA        OpCodes = 553
	OpCodes_OP_Weather                   OpCodes = 561
	OpCodes_OP_ZoneChange                OpCodes = 579
	OpCodes_OP_ZoneInUnknown             OpCodes = 583
	OpCodes_OP_AcceptNewTask             OpCodes = 6
	OpCodes_OP_AdventureInfo             OpCodes = 14
	OpCodes_OP_ApplyPoison               OpCodes = 39
	OpCodes_OP_ApproveWorld              OpCodes = 41
	OpCodes_OP_Bandolier                 OpCodes = 50
	OpCodes_OP_BazaarSearch              OpCodes = 55
	OpCodes_OP_BecomeCorpse              OpCodes = 56
	OpCodes_OP_CancelTask                OpCodes = 71
	OpCodes_OP_Command                   OpCodes = 99
	OpCodes_OP_DynamicWall               OpCodes = 136
	OpCodes_OP_LFGuild                   OpCodes = 295
	OpCodes_OP_LoadSpellSet              OpCodes = 300
	OpCodes_OP_LogServer                 OpCodes = 312
	OpCodes_OP_MOTD                      OpCodes = 345
	OpCodes_OP_OnLevelMessage            OpCodes = 356
	OpCodes_OP_PlayMP3                   OpCodes = 387
	OpCodes_OP_PotionBelt                OpCodes = 392
	OpCodes_OP_PVPStats                  OpCodes = 399
	OpCodes_OP_Report                    OpCodes = 422
	OpCodes_OP_SpecialMesg               OpCodes = 503
	OpCodes_OP_TaskActivity              OpCodes = 515
	OpCodes_OP_TaskDescription           OpCodes = 517
	OpCodes_OP_ZoneUnavail               OpCodes = 588
	// World
	OpCodes_Nested_WorldServer          OpCodes = 1000
	OpCodes_Nested_CharacterSelectEntry OpCodes = 1001
	OpCodes_Nested_CharSelectEquip      OpCodes = 1002
	OpCodes_Nested_Tint                 OpCodes = 1003
	OpCodes_Nested_StringList           OpCodes = 1004
	// EQEmu OP Codes Unhandled
	OpCodes_OP_ExploreUnknown               OpCodes = 1
	OpCodes_OP_0x0193                       OpCodes = 2
	OpCodes_OP_0x0347                       OpCodes = 3
	OpCodes_OP_Action2                      OpCodes = 9
	OpCodes_OP_AddNimbusEffect              OpCodes = 10
	OpCodes_OP_AdventureDetails             OpCodes = 12
	OpCodes_OP_AdventureLeaderboardReply    OpCodes = 16
	OpCodes_OP_AdventureLeaderboardRequest  OpCodes = 17
	OpCodes_OP_AdventureMerchantResponse    OpCodes = 20
	OpCodes_OP_AdventureMerchantSell        OpCodes = 21
	OpCodes_OP_AdventureStatsReply          OpCodes = 24
	OpCodes_OP_AdventureStatsRequest        OpCodes = 25
	OpCodes_OP_AdventureUpdate              OpCodes = 26
	OpCodes_OP_AggroMeterLockTarget         OpCodes = 27
	OpCodes_OP_AggroMeterTargetInfo         OpCodes = 28
	OpCodes_OP_AggroMeterUpdate             OpCodes = 29
	OpCodes_OP_AltCurrency                  OpCodes = 30
	OpCodes_OP_AltCurrencyMerchantReply     OpCodes = 31
	OpCodes_OP_AltCurrencyMerchantRequest   OpCodes = 32
	OpCodes_OP_AltCurrencyPurchase          OpCodes = 33
	OpCodes_OP_AltCurrencyReclaim           OpCodes = 34
	OpCodes_OP_AltCurrencySell              OpCodes = 35
	OpCodes_OP_AltCurrencySellSelection     OpCodes = 36
	OpCodes_OP_AssistGroup                  OpCodes = 44
	OpCodes_OP_AugmentInfo                  OpCodes = 45
	OpCodes_OP_AutoFire                     OpCodes = 49
	OpCodes_OP_Barter                       OpCodes = 52
	OpCodes_OP_BlockedBuffs                 OpCodes = 61
	OpCodes_OP_BookButton                   OpCodes = 63
	OpCodes_OP_BuffCreate                   OpCodes = 65
	OpCodes_OP_BuffRemoveRequest            OpCodes = 66
	OpCodes_OP_CancelSneakHide              OpCodes = 70
	OpCodes_OP_CashReward                   OpCodes = 73
	OpCodes_OP_ChangeSize                   OpCodes = 75
	OpCodes_OP_CharacterCreateRequest       OpCodes = 78
	OpCodes_OP_ChatMessage                  OpCodes = 81
	OpCodes_OP_ClearAA                      OpCodes = 82
	OpCodes_OP_ClearBlockedBuffs            OpCodes = 83
	OpCodes_OP_ClearLeadershipAbilities     OpCodes = 84
	OpCodes_OP_ClearNPCMarks                OpCodes = 85
	OpCodes_OP_ClearSurname                 OpCodes = 87
	OpCodes_OP_ClientTimeStamp              OpCodes = 93
	OpCodes_OP_CloseTributeMaster           OpCodes = 96
	OpCodes_OP_CorpseDrag                   OpCodes = 109
	OpCodes_OP_CorpseDrop                   OpCodes = 110
	OpCodes_OP_CrystalCountUpdate           OpCodes = 112
	OpCodes_OP_CrystalCreate                OpCodes = 113
	OpCodes_OP_CrystalReclaim               OpCodes = 114
	OpCodes_OP_DelegateAbility              OpCodes = 118
	OpCodes_OP_DeleteCharge                 OpCodes = 120
	OpCodes_OP_DeletePetition               OpCodes = 122
	OpCodes_OP_DenyResponse                 OpCodes = 125
	OpCodes_OP_Disarm                       OpCodes = 126
	OpCodes_OP_DisciplineTimer              OpCodes = 128
	OpCodes_OP_DisciplineUpdate             OpCodes = 129
	OpCodes_OP_DiscordMerchantInventory     OpCodes = 130
	OpCodes_OP_DoGroupLeadershipAbility     OpCodes = 131
	OpCodes_OP_DzAddPlayer                  OpCodes = 137
	OpCodes_OP_DzChooseZone                 OpCodes = 138
	OpCodes_OP_DzChooseZoneReply            OpCodes = 139
	OpCodes_OP_DzCompass                    OpCodes = 140
	OpCodes_OP_DzExpeditionEndsWarning      OpCodes = 141
	OpCodes_OP_DzExpeditionInfo             OpCodes = 142
	OpCodes_OP_DzExpeditionInvite           OpCodes = 143
	OpCodes_OP_DzExpeditionInviteResponse   OpCodes = 144
	OpCodes_OP_DzExpeditionLockoutTimers    OpCodes = 145
	OpCodes_OP_DzListTimers                 OpCodes = 146
	OpCodes_OP_DzMakeLeader                 OpCodes = 147
	OpCodes_OP_DzMemberList                 OpCodes = 148
	OpCodes_OP_DzMemberListName             OpCodes = 149
	OpCodes_OP_DzMemberListStatus           OpCodes = 150
	OpCodes_OP_DzPlayerList                 OpCodes = 151
	OpCodes_OP_DzQuit                       OpCodes = 152
	OpCodes_OP_DzRemovePlayer               OpCodes = 153
	OpCodes_OP_DzSetLeaderName              OpCodes = 154
	OpCodes_OP_DzSwapPlayer                 OpCodes = 155
	OpCodes_OP_EnterChat                    OpCodes = 159
	OpCodes_OP_Feedback                     OpCodes = 165
	OpCodes_OP_FellowshipUpdate             OpCodes = 167
	OpCodes_OP_FindPersonReply              OpCodes = 168
	OpCodes_OP_Fling                        OpCodes = 174
	OpCodes_OP_FloatListThing               OpCodes = 175
	OpCodes_OP_ForceFindPerson              OpCodes = 177
	OpCodes_OP_FriendsWho                   OpCodes = 179
	OpCodes_OP_GetGuildMOTD                 OpCodes = 180
	OpCodes_OP_GetGuildMOTDReply            OpCodes = 181
	OpCodes_OP_GiveMoney                    OpCodes = 183
	OpCodes_OP_GMApproval                   OpCodes = 184
	OpCodes_OP_GMTrainSkillConfirm          OpCodes = 203
	OpCodes_OP_GroupDisbandOther            OpCodes = 211
	OpCodes_OP_GroupDisbandYou              OpCodes = 212
	OpCodes_OP_GroupLeaderChange            OpCodes = 217
	OpCodes_OP_GroupLeadershipAAUpdate      OpCodes = 218
	OpCodes_OP_GroupMakeLeader              OpCodes = 219
	OpCodes_OP_GroupMentor                  OpCodes = 220
	OpCodes_OP_GroupRoles                   OpCodes = 221
	OpCodes_OP_GroupUpdateB                 OpCodes = 223
	OpCodes_OP_GroupUpdateLeaderAA          OpCodes = 224
	OpCodes_OP_GuildBank                    OpCodes = 225
	OpCodes_OP_GuildBankItemList            OpCodes = 226
	OpCodes_OP_GuildCreate                  OpCodes = 227
	OpCodes_OP_GuildManageBanker            OpCodes = 234
	OpCodes_OP_GuildMemberLevelUpdate       OpCodes = 237
	OpCodes_OP_GuildPromote                 OpCodes = 242
	OpCodes_OP_GuildStatus                  OpCodes = 246
	OpCodes_OP_GuildUpdateURLAndChannel     OpCodes = 248
	OpCodes_OP_HideCorpse                   OpCodes = 252
	OpCodes_OP_InitialHPUpdate              OpCodes = 256
	OpCodes_OP_InitialMobHealth             OpCodes = 257
	OpCodes_OP_InspectBuffs                 OpCodes = 259
	OpCodes_OP_InspectMessageUpdate         OpCodes = 260
	OpCodes_OP_ItemLinkText                 OpCodes = 266
	OpCodes_OP_ItemPreview                  OpCodes = 269
	OpCodes_OP_ItemViewUnknown              OpCodes = 273
	OpCodes_OP_KeyRing                      OpCodes = 275
	OpCodes_OP_KickPlayers                  OpCodes = 276
	OpCodes_OP_KnowledgeBase                OpCodes = 277
	OpCodes_OP_LDoNDisarmTraps              OpCodes = 279
	OpCodes_OP_LDoNInspect                  OpCodes = 280
	OpCodes_OP_LDoNOpen                     OpCodes = 281
	OpCodes_OP_LDoNPickLock                 OpCodes = 282
	OpCodes_OP_LDoNSenseTraps               OpCodes = 283
	OpCodes_OP_LFGGetMatchesRequest         OpCodes = 292
	OpCodes_OP_LFGGetMatchesResponse        OpCodes = 293
	OpCodes_OP_LFGResponse                  OpCodes = 294
	OpCodes_OP_LFPCommand                   OpCodes = 296
	OpCodes_OP_LFPGetMatchesRequest         OpCodes = 297
	OpCodes_OP_LFPGetMatchesResponse        OpCodes = 298
	OpCodes_OP_LinkedReuse                  OpCodes = 299
	OpCodes_OP_LocInfo                      OpCodes = 301
	OpCodes_OP_LockoutTimerInfo             OpCodes = 302
	OpCodes_OP_Login                        OpCodes = 303
	OpCodes_OP_LoginComplete                OpCodes = 306
	OpCodes_OP_LoginExpansionPacketData     OpCodes = 307
	OpCodes_OP_LoginUnknown1                OpCodes = 308
	OpCodes_OP_LoginUnknown2                OpCodes = 309
	OpCodes_OP_LogoutReply                  OpCodes = 311
	OpCodes_OP_MarkNPC                      OpCodes = 318
	OpCodes_OP_MarkRaidNPC                  OpCodes = 319
	OpCodes_OP_Marquee                      OpCodes = 320
	OpCodes_OP_MendHPUpdate                 OpCodes = 323
	OpCodes_OP_MercenaryAssign              OpCodes = 324
	OpCodes_OP_MercenaryCommand             OpCodes = 325
	OpCodes_OP_MercenaryDataRequest         OpCodes = 326
	OpCodes_OP_MercenaryDataResponse        OpCodes = 327
	OpCodes_OP_MercenaryDataUpdate          OpCodes = 328
	OpCodes_OP_MercenaryDataUpdateRequest   OpCodes = 329
	OpCodes_OP_MercenaryDismiss             OpCodes = 330
	OpCodes_OP_MercenaryHire                OpCodes = 331
	OpCodes_OP_MercenarySuspendRequest      OpCodes = 332
	OpCodes_OP_MercenarySuspendResponse     OpCodes = 333
	OpCodes_OP_MercenaryTimer               OpCodes = 334
	OpCodes_OP_MercenaryTimerRequest        OpCodes = 335
	OpCodes_OP_MercenaryUnknown1            OpCodes = 336
	OpCodes_OP_MercenaryUnsuspendResponse   OpCodes = 337
	OpCodes_OP_MobUpdate                    OpCodes = 342
	OpCodes_OP_MoveMultipleItems            OpCodes = 349
	OpCodes_OP_MoveLogDisregard             OpCodes = 350
	OpCodes_OP_MoveLogRequest               OpCodes = 351
	OpCodes_OP_MultiLineMsg                 OpCodes = 352
	OpCodes_OP_NewTitlesAvailable           OpCodes = 354
	OpCodes_OP_OpenContainer                OpCodes = 357
	OpCodes_OP_OpenDiscordMerchant          OpCodes = 358
	OpCodes_OP_OpenInventory                OpCodes = 360
	OpCodes_OP_PetBuffWindow                OpCodes = 363
	OpCodes_OP_PetCommandState              OpCodes = 365
	OpCodes_OP_PetHoTT                      OpCodes = 366
	OpCodes_OP_PetitionCheckout2            OpCodes = 371
	OpCodes_OP_PetitionSearch               OpCodes = 376
	OpCodes_OP_PetitionSearchResults        OpCodes = 377
	OpCodes_OP_PetitionSearchText           OpCodes = 378
	OpCodes_OP_PlayerStateAdd               OpCodes = 383
	OpCodes_OP_PlayerStateRemove            OpCodes = 384
	OpCodes_OP_Poll                         OpCodes = 388
	OpCodes_OP_PollResponse                 OpCodes = 389
	OpCodes_OP_PopupResponse                OpCodes = 390
	OpCodes_OP_PreLogoutReply               OpCodes = 393
	OpCodes_OP_PVPLeaderBoardDetailsReply   OpCodes = 395
	OpCodes_OP_PVPLeaderBoardDetailsRequest OpCodes = 396
	OpCodes_OP_PVPLeaderBoardReply          OpCodes = 397
	OpCodes_OP_PVPLeaderBoardRequest        OpCodes = 398
	OpCodes_OP_QueryResponseThing           OpCodes = 400
	OpCodes_OP_QueryUCSServerStatus         OpCodes = 401
	OpCodes_OP_RaidDelegateAbility          OpCodes = 402
	OpCodes_OP_RaidClearNPCMarks            OpCodes = 403
	OpCodes_OP_RaidInvite                   OpCodes = 404
	OpCodes_OP_RaidJoin                     OpCodes = 405
	OpCodes_OP_RandomNameGenerator          OpCodes = 407
	OpCodes_OP_ReclaimCrystals              OpCodes = 416
	OpCodes_OP_RemoveAllDoors               OpCodes = 418
	OpCodes_OP_RemoveBlockedBuffs           OpCodes = 419
	OpCodes_OP_RemoveNimbusEffect           OpCodes = 420
	OpCodes_OP_RemoveTrap                   OpCodes = 421
	OpCodes_OP_RequestKnowledgeBase         OpCodes = 427
	OpCodes_OP_RespawnWindow                OpCodes = 429
	OpCodes_OP_RestState                    OpCodes = 431
	OpCodes_OP_Rewind                       OpCodes = 432
	OpCodes_OP_RezzComplete                 OpCodes = 434
	OpCodes_OP_Sacrifice                    OpCodes = 436
	OpCodes_OP_SendFindableNPCs             OpCodes = 446
	OpCodes_OP_SendSystemStats              OpCodes = 452
	OpCodes_OP_SessionReady                 OpCodes = 460
	OpCodes_OP_SetChatServer                OpCodes = 461
	OpCodes_OP_SetChatServer2               OpCodes = 462
	OpCodes_OP_SetFace                      OpCodes = 463
	OpCodes_OP_SetGroupTarget               OpCodes = 464
	OpCodes_OP_SetGuildRank                 OpCodes = 466
	OpCodes_OP_SetStartCity                 OpCodes = 469
	OpCodes_OP_SharedTaskMemberList         OpCodes = 472
	OpCodes_OP_SharedTaskAddPlayer          OpCodes = 473
	OpCodes_OP_SharedTaskRemovePlayer       OpCodes = 474
	OpCodes_OP_SharedTaskMakeLeader         OpCodes = 475
	OpCodes_OP_SharedTaskMemberInvite       OpCodes = 476
	OpCodes_OP_SharedTaskInvite             OpCodes = 477
	OpCodes_OP_SharedTaskInviteResponse     OpCodes = 478
	OpCodes_OP_SharedTaskAcceptNew          OpCodes = 479
	OpCodes_OP_SharedTaskMemberChange       OpCodes = 480
	OpCodes_OP_SharedTaskPlayerList         OpCodes = 481
	OpCodes_OP_SharedTaskSelectWindow       OpCodes = 482
	OpCodes_OP_SharedTaskQuit               OpCodes = 483
	OpCodes_OP_TaskTimers                   OpCodes = 484
	OpCodes_OP_ShopEndConfirm               OpCodes = 488
	OpCodes_OP_ShopItem                     OpCodes = 489
	OpCodes_OP_Some3ByteHPUpdate            OpCodes = 496
	OpCodes_OP_Some6ByteHPUpdate            OpCodes = 497
	OpCodes_OP_Sound                        OpCodes = 499
	OpCodes_OP_SpawnPositionUpdate          OpCodes = 502
	OpCodes_OP_TargetBuffs                  OpCodes = 510
	OpCodes_OP_TargetHoTT                   OpCodes = 512
	OpCodes_OP_TaskActivityComplete         OpCodes = 516
	OpCodes_OP_TaskHistoryReply             OpCodes = 518
	OpCodes_OP_TaskHistoryRequest           OpCodes = 519
	OpCodes_OP_TaskRequestTimer             OpCodes = 520
	OpCodes_OP_TaskSelectWindow             OpCodes = 521
	OpCodes_OP_Translocate                  OpCodes = 541
	OpCodes_OP_TributePointUpdate           OpCodes = 546
	OpCodes_OP_Untargetable                 OpCodes = 550
	OpCodes_OP_UpdateAA                     OpCodes = 551
	OpCodes_OP_UpdateAura                   OpCodes = 552
	OpCodes_OP_VetClaimReply                OpCodes = 554
	OpCodes_OP_VetClaimRequest              OpCodes = 555
	OpCodes_OP_VetRewardsAvaliable          OpCodes = 556
	OpCodes_OP_VoiceMacroIn                 OpCodes = 557
	OpCodes_OP_VoiceMacroOut                OpCodes = 558
	OpCodes_OP_WeaponEquip1                 OpCodes = 559
	OpCodes_OP_Weblink                      OpCodes = 562
	OpCodes_OP_WhoAllResponse               OpCodes = 564
	OpCodes_OP_World_Client_CRC1            OpCodes = 565
	OpCodes_OP_World_Client_CRC2            OpCodes = 566
	OpCodes_OP_World_Client_CRC3            OpCodes = 567
	OpCodes_OP_WorldClientReady             OpCodes = 568
	OpCodes_OP_WorldComplete                OpCodes = 569
	OpCodes_OP_WorldLogout                  OpCodes = 570
	OpCodes_OP_WorldUnknown001              OpCodes = 572
	OpCodes_OP_XTargetAutoAddHaters         OpCodes = 573
	OpCodes_OP_XTargetOpen                  OpCodes = 574
	OpCodes_OP_XTargetOpenResponse          OpCodes = 575
	OpCodes_OP_XTargetRequest               OpCodes = 576
	OpCodes_OP_XTargetResponse              OpCodes = 577
	OpCodes_OP_ZoneComplete                 OpCodes = 580
	OpCodes_OP_ZoneGuildList                OpCodes = 582
	OpCodes_OP_ZonePlayerToBind             OpCodes = 584
	OpCodes_OP_ZoneServerReady              OpCodes = 586
	OpCodes_OP_ResetAA                      OpCodes = 589
	OpCodes_OP_UnderWorld                   OpCodes = 590
)

// Enum value maps for OpCodes.
var (
	OpCodes_name = map[int32]string{
		0:    "OP_Unknown",
		304:  "OP_LoginWeb",
		305:  "OP_LoginAccepted",
		385:  "OP_PlayEverquestRequest",
		386:  "OP_PlayEverquestResponse",
		458:  "OP_ServerListRequest",
		459:  "OP_ServerListResponse",
		40:   "OP_ApproveName",
		77:   "OP_CharacterCreate",
		119:  "OP_DeleteCharacter",
		5040: "OP_ApproveName_Server",
		160:  "OP_EnterWorld",
		162:  "OP_ExpansionInfo",
		245:  "OP_GuildsList",
		391:  "OP_PostEnterWorld",
		444:  "OP_SendCharInfo",
		448:  "OP_SendLoginInfo",
		449:  "OP_SendMaxCharacters",
		450:  "OP_SendMembership",
		451:  "OP_SendMembershipDetails",
		585:  "OP_ZoneServerInfo",
		591:  "OP_WebInitiateConnection",
		581:  "OP_ZoneEntry",
		468:  "OP_SetServerFilter",
		443:  "OP_SendAATable",
		454:  "OP_SendTributes",
		447:  "OP_SendGuildTributes",
		442:  "OP_SendAAStats",
		423:  "OP_ReqClientSpawn",
		424:  "OP_ReqNewZone",
		445:  "OP_SendExpZonein",
		92:   "OP_ClientReady",
		91:   "OP_ClientError",
		42:   "OP_ApproveZone",
		524:  "OP_TGB",
		7:    "OP_AckPacket",
		94:   "OP_ClientUpdate",
		47:   "OP_AutoAttack",
		48:   "OP_AutoAttack2",
		102:  "OP_Consent",
		103:  "OP_ConsentDeny",
		513:  "OP_TargetMouse",
		511:  "OP_TargetCommand",
		485:  "OP_Shielding",
		274:  "OP_Jump",
		15:   "OP_AdventureInfoRequest",
		23:   "OP_AdventureRequest",
		278:  "OP_LDoNButton",
		286:  "OP_LeaveAdventure",
		107:  "OP_Consume",
		19:   "OP_AdventureMerchantRequest",
		18:   "OP_AdventureMerchantPurchase",
		106:  "OP_ConsiderCorpse",
		105:  "OP_Consider",
		58:   "OP_Begging",
		523:  "OP_TestBuff",
		508:  "OP_Surname",
		578:  "OP_YellForHelp",
		43:   "OP_Assist",
		201:  "OP_GMTraining",
		188:  "OP_GMEndTraining",
		202:  "OP_GMTrainSkill",
		426:  "OP_RequestDuel",
		132:  "OP_DuelDecline",
		133:  "OP_DuelAccept",
		500:  "OP_SpawnAppearance",
		54:   "OP_BazaarInspect",
		117:  "OP_Death",
		346:  "OP_MoveCoin",
		264:  "OP_ItemLinkClick",
		348:  "OP_MoveItem",
		69:   "OP_Camp",
		310:  "OP_Logout",
		456:  "OP_SenseHeading",
		166:  "OP_FeignDeath",
		495:  "OP_Sneak",
		251:  "OP_Hide",
		76:   "OP_ChannelMessage",
		560:  "OP_WearChange",
		123:  "OP_DeleteSpawn",
		440:  "OP_SaveOnZoneReq",
		439:  "OP_Save",
		563:  "OP_WhoAllRequest",
		204:  "OP_GMZoneRequest",
		205:  "OP_GMZoneRequest2",
		157:  "OP_EndLootRequest",
		315:  "OP_LootRequest",
		135:  "OP_Dye",
		101:  "OP_ConfirmDelete",
		314:  "OP_LootItem",
		228:  "OP_GuildDelete",
		243:  "OP_GuildPublicNote",
		182:  "OP_GetGuildsList",
		465:  "OP_SetGuildMOTD",
		467:  "OP_SetRunMode",
		241:  "OP_GuildPeace",
		249:  "OP_GuildWar",
		232:  "OP_GuildLeader",
		229:  "OP_GuildDemote",
		230:  "OP_GuildInvite",
		244:  "OP_GuildRemove",
		231:  "OP_GuildInviteAccept",
		316:  "OP_ManaChange",
		321:  "OP_MemorizeSpell",
		509:  "OP_SwapSpell",
		74:   "OP_CastSpell",
		121:  "OP_DeleteItem",
		98:   "OP_CombatAbility",
		522:  "OP_Taunt",
		262:  "OP_InstillDoubt",
		433:  "OP_RezzAnswer",
		199:  "OP_GMSummon",
		530:  "OP_TradeBusy",
		536:  "OP_TradeRequest",
		537:  "OP_TradeRequestAck",
		72:   "OP_CancelTrade",
		529:  "OP_TradeAcceptClick",
		62:   "OP_BoardBoat",
		287:  "OP_LeaveBoat",
		409:  "OP_RandomReq",
		64:   "OP_Buff",
		192:  "OP_GMHideMe",
		196:  "OP_GMNameChange",
		194:  "OP_GMKill",
		195:  "OP_GMLastName",
		200:  "OP_GMToggle",
		291:  "OP_LFGCommand",
		191:  "OP_GMGoto",
		539:  "OP_TraderShop",
		492:  "OP_ShopRequest",
		53:   "OP_Bazaar",
		490:  "OP_ShopPlayerBuy",
		491:  "OP_ShopPlayerSell",
		487:  "OP_ShopEnd",
		95:   "OP_CloseContainer",
		90:   "OP_ClickObjectAction",
		89:   "OP_ClickObject",
		414:  "OP_RecipesFavorite",
		415:  "OP_RecipesSearch",
		412:  "OP_RecipeDetails",
		411:  "OP_RecipeAutoCombine",
		540:  "OP_TradeSkillCombine",
		267:  "OP_ItemName",
		46:   "OP_AugmentItem",
		88:   "OP_ClickDoor",
		164:  "OP_FaceChange",
		215:  "OP_GroupInvite",
		216:  "OP_GroupInvite2",
		213:  "OP_GroupFollow",
		214:  "OP_GroupFollow2",
		207:  "OP_GroupAcknowledge",
		208:  "OP_GroupCancelInvite",
		210:  "OP_GroupDisband",
		209:  "OP_GroupDelete",
		187:  "OP_GMEmoteZone",
		261:  "OP_InspectRequest",
		258:  "OP_InspectAnswer",
		124:  "OP_DeleteSpell",
		368:  "OP_PetitionBug",
		67:   "OP_Bug",
		367:  "OP_Petition",
		369:  "OP_PetitionCheckIn",
		375:  "OP_PetitionResolve",
		372:  "OP_PetitionDelete",
		379:  "OP_PetitionUnCheckout",
		373:  "OP_PetitionQue",
		362:  "OP_PDeletePetition",
		370:  "OP_PetitionCheckout",
		374:  "OP_PetitionRefresh",
		364:  "OP_PetCommands",
		410:  "OP_ReadBook",
		156:  "OP_Emote",
		186:  "OP_GMDelCorpse",
		193:  "OP_GMKick",
		198:  "OP_GMServers",
		254:  "OP_Illusion",
		185:  "OP_GMBecomeNPC",
		173:  "OP_Fishing",
		176:  "OP_Forage",
		322:  "OP_Mend",
		161:  "OP_EnvDamage",
		116:  "OP_Damage",
		4:    "OP_AAAction",
		534:  "OP_TraderBuy",
		533:  "OP_Trader",
		190:  "OP_GMFind",
		381:  "OP_PickPocket",
		60:   "OP_Bind_Wound",
		527:  "OP_TrackTarget",
		526:  "OP_Track",
		528:  "OP_TrackUnknown",
		417:  "OP_ReloadUI",
		505:  "OP_Split",
		457:  "OP_SenseTraps",
		127:  "OP_DisarmTraps",
		361:  "OP_OpenTributeMaster",
		359:  "OP_OpenGuildTributeMaster",
		543:  "OP_TributeItem",
		544:  "OP_TributeMoney",
		441:  "OP_SelectTribute",
		549:  "OP_TributeUpdate",
		548:  "OP_TributeToggle",
		545:  "OP_TributeNPC",
		111:  "OP_CrashDump",
		108:  "OP_ControlBoat",
		134:  "OP_DumpName",
		437:  "OP_SafeFallSuccess",
		250:  "OP_Heartbeat",
		438:  "OP_SafePoint",
		169:  "OP_FindPersonRequest",
		284:  "OP_LeadershipExpToggle",
		394:  "OP_PurchaseLeadershipAA",
		51:   "OP_BankerChange",
		470:  "OP_SetTitle",
		428:  "OP_RequestTitles",
		272:  "OP_ItemVerifyRequest",
		86:   "OP_ClearObject",
		170:  "OP_FinishTrade",
		189:  "OP_GMEndTrainingResponse",
		313:  "OP_LootComplete",
		571:  "OP_WorldObjectsSent",
		171:  "OP_FinishWindow",
		172:  "OP_FinishWindow2",
		268:  "OP_ItemPacket",
		97:   "OP_ColoredText",
		270:  "OP_ItemRecastDelay",
		178:  "OP_FormattedMessage",
		238:  "OP_GuildMemberList",
		263:  "OP_InterruptCast",
		265:  "OP_ItemLinkResponse",
		587:  "OP_ZoneSpawns",
		100:  "OP_CompletedTasks",
		79:   "OP_CharInventory",
		115:  "OP_CustomTitles",
		501:  "OP_SpawnDoor",
		455:  "OP_SendZonepoints",
		542:  "OP_TributeInfo",
		247:  "OP_GuildTributeInfo",
		453:  "OP_SendTitleList",
		5:    "OP_AAExpUpdate",
		8:    "OP_Action",
		11:   "OP_AdventureData",
		13:   "OP_AdventureFinish",
		22:   "OP_AdventurePointsUpdate",
		37:   "OP_Animation",
		38:   "OP_AnnoyingZoneUnknown",
		57:   "OP_BecomeTrader",
		59:   "OP_BeginCast",
		80:   "OP_Charm",
		68:   "OP_CameraEffect",
		104:  "OP_ConsentResponse",
		158:  "OP_EnduranceUpdate",
		163:  "OP_ExpUpdate",
		206:  "OP_GroundSpawn",
		222:  "OP_GroupUpdate",
		240:  "OP_GuildMOTD",
		233:  "OP_GuildManageAdd",
		235:  "OP_GuildManageRemove",
		236:  "OP_GuildManageStatus",
		239:  "OP_GuildMemberUpdate",
		253:  "OP_HPUpdate",
		255:  "OP_IncreaseStats",
		271:  "OP_ItemVerifyReply",
		290:  "OP_LFGAppearance",
		285:  "OP_LeadershipExpUpdate",
		288:  "OP_LevelAppearance",
		289:  "OP_LevelUpdate",
		317:  "OP_ManaUpdate",
		338:  "OP_MobEnduranceUpdate",
		339:  "OP_MobHealth",
		340:  "OP_MobManaUpdate",
		341:  "OP_MobRename",
		343:  "OP_MoneyOnCorpse",
		344:  "OP_MoneyUpdate",
		347:  "OP_MoveDoor",
		353:  "OP_NewSpawn",
		355:  "OP_NewZone",
		380:  "OP_PetitionUpdate",
		382:  "OP_PlayerProfile",
		406:  "OP_RaidUpdate",
		408:  "OP_RandomReply",
		413:  "OP_RecipeReply",
		425:  "OP_RequestClientZoneChange",
		430:  "OP_RespondAA",
		435:  "OP_RezzRequest",
		471:  "OP_SetTitleReply",
		486:  "OP_ShopDelItem",
		493:  "OP_SimpleMessage",
		494:  "OP_SkillUpdate",
		498:  "OP_SomeItemPacketMaybe",
		504:  "OP_SpellEffect",
		506:  "OP_Stamina",
		507:  "OP_Stun",
		514:  "OP_TargetReject",
		525:  "OP_TimeOfDay",
		531:  "OP_TradeCoins",
		532:  "OP_TradeMoneyUpdate",
		535:  "OP_TraderDelItem",
		538:  "OP_TraderItemUpdate",
		547:  "OP_TributeTimer",
		553:  "OP_UpdateLeadershipAA",
		561:  "OP_Weather",
		579:  "OP_ZoneChange",
		583:  "OP_ZoneInUnknown",
		6:    "OP_AcceptNewTask",
		14:   "OP_AdventureInfo",
		39:   "OP_ApplyPoison",
		41:   "OP_ApproveWorld",
		50:   "OP_Bandolier",
		55:   "OP_BazaarSearch",
		56:   "OP_BecomeCorpse",
		71:   "OP_CancelTask",
		99:   "OP_Command",
		136:  "OP_DynamicWall",
		295:  "OP_LFGuild",
		300:  "OP_LoadSpellSet",
		312:  "OP_LogServer",
		345:  "OP_MOTD",
		356:  "OP_OnLevelMessage",
		387:  "OP_PlayMP3",
		392:  "OP_PotionBelt",
		399:  "OP_PVPStats",
		422:  "OP_Report",
		503:  "OP_SpecialMesg",
		515:  "OP_TaskActivity",
		517:  "OP_TaskDescription",
		588:  "OP_ZoneUnavail",
		1000: "Nested_WorldServer",
		1001: "Nested_CharacterSelectEntry",
		1002: "Nested_CharSelectEquip",
		1003: "Nested_Tint",
		1004: "Nested_StringList",
		1:    "OP_ExploreUnknown",
		2:    "OP_0x0193",
		3:    "OP_0x0347",
		9:    "OP_Action2",
		10:   "OP_AddNimbusEffect",
		12:   "OP_AdventureDetails",
		16:   "OP_AdventureLeaderboardReply",
		17:   "OP_AdventureLeaderboardRequest",
		20:   "OP_AdventureMerchantResponse",
		21:   "OP_AdventureMerchantSell",
		24:   "OP_AdventureStatsReply",
		25:   "OP_AdventureStatsRequest",
		26:   "OP_AdventureUpdate",
		27:   "OP_AggroMeterLockTarget",
		28:   "OP_AggroMeterTargetInfo",
		29:   "OP_AggroMeterUpdate",
		30:   "OP_AltCurrency",
		31:   "OP_AltCurrencyMerchantReply",
		32:   "OP_AltCurrencyMerchantRequest",
		33:   "OP_AltCurrencyPurchase",
		34:   "OP_AltCurrencyReclaim",
		35:   "OP_AltCurrencySell",
		36:   "OP_AltCurrencySellSelection",
		44:   "OP_AssistGroup",
		45:   "OP_AugmentInfo",
		49:   "OP_AutoFire",
		52:   "OP_Barter",
		61:   "OP_BlockedBuffs",
		63:   "OP_BookButton",
		65:   "OP_BuffCreate",
		66:   "OP_BuffRemoveRequest",
		70:   "OP_CancelSneakHide",
		73:   "OP_CashReward",
		75:   "OP_ChangeSize",
		78:   "OP_CharacterCreateRequest",
		81:   "OP_ChatMessage",
		82:   "OP_ClearAA",
		83:   "OP_ClearBlockedBuffs",
		84:   "OP_ClearLeadershipAbilities",
		85:   "OP_ClearNPCMarks",
		87:   "OP_ClearSurname",
		93:   "OP_ClientTimeStamp",
		96:   "OP_CloseTributeMaster",
		109:  "OP_CorpseDrag",
		110:  "OP_CorpseDrop",
		112:  "OP_CrystalCountUpdate",
		113:  "OP_CrystalCreate",
		114:  "OP_CrystalReclaim",
		118:  "OP_DelegateAbility",
		120:  "OP_DeleteCharge",
		122:  "OP_DeletePetition",
		125:  "OP_DenyResponse",
		126:  "OP_Disarm",
		128:  "OP_DisciplineTimer",
		129:  "OP_DisciplineUpdate",
		130:  "OP_DiscordMerchantInventory",
		131:  "OP_DoGroupLeadershipAbility",
		137:  "OP_DzAddPlayer",
		138:  "OP_DzChooseZone",
		139:  "OP_DzChooseZoneReply",
		140:  "OP_DzCompass",
		141:  "OP_DzExpeditionEndsWarning",
		142:  "OP_DzExpeditionInfo",
		143:  "OP_DzExpeditionInvite",
		144:  "OP_DzExpeditionInviteResponse",
		145:  "OP_DzExpeditionLockoutTimers",
		146:  "OP_DzListTimers",
		147:  "OP_DzMakeLeader",
		148:  "OP_DzMemberList",
		149:  "OP_DzMemberListName",
		150:  "OP_DzMemberListStatus",
		151:  "OP_DzPlayerList",
		152:  "OP_DzQuit",
		153:  "OP_DzRemovePlayer",
		154:  "OP_DzSetLeaderName",
		155:  "OP_DzSwapPlayer",
		159:  "OP_EnterChat",
		165:  "OP_Feedback",
		167:  "OP_FellowshipUpdate",
		168:  "OP_FindPersonReply",
		174:  "OP_Fling",
		175:  "OP_FloatListThing",
		177:  "OP_ForceFindPerson",
		179:  "OP_FriendsWho",
		180:  "OP_GetGuildMOTD",
		181:  "OP_GetGuildMOTDReply",
		183:  "OP_GiveMoney",
		184:  "OP_GMApproval",
		203:  "OP_GMTrainSkillConfirm",
		211:  "OP_GroupDisbandOther",
		212:  "OP_GroupDisbandYou",
		217:  "OP_GroupLeaderChange",
		218:  "OP_GroupLeadershipAAUpdate",
		219:  "OP_GroupMakeLeader",
		220:  "OP_GroupMentor",
		221:  "OP_GroupRoles",
		223:  "OP_GroupUpdateB",
		224:  "OP_GroupUpdateLeaderAA",
		225:  "OP_GuildBank",
		226:  "OP_GuildBankItemList",
		227:  "OP_GuildCreate",
		234:  "OP_GuildManageBanker",
		237:  "OP_GuildMemberLevelUpdate",
		242:  "OP_GuildPromote",
		246:  "OP_GuildStatus",
		248:  "OP_GuildUpdateURLAndChannel",
		252:  "OP_HideCorpse",
		256:  "OP_InitialHPUpdate",
		257:  "OP_InitialMobHealth",
		259:  "OP_InspectBuffs",
		260:  "OP_InspectMessageUpdate",
		266:  "OP_ItemLinkText",
		269:  "OP_ItemPreview",
		273:  "OP_ItemViewUnknown",
		275:  "OP_KeyRing",
		276:  "OP_KickPlayers",
		277:  "OP_KnowledgeBase",
		279:  "OP_LDoNDisarmTraps",
		280:  "OP_LDoNInspect",
		281:  "OP_LDoNOpen",
		282:  "OP_LDoNPickLock",
		283:  "OP_LDoNSenseTraps",
		292:  "OP_LFGGetMatchesRequest",
		293:  "OP_LFGGetMatchesResponse",
		294:  "OP_LFGResponse",
		296:  "OP_LFPCommand",
		297:  "OP_LFPGetMatchesRequest",
		298:  "OP_LFPGetMatchesResponse",
		299:  "OP_LinkedReuse",
		301:  "OP_LocInfo",
		302:  "OP_LockoutTimerInfo",
		303:  "OP_Login",
		306:  "OP_LoginComplete",
		307:  "OP_LoginExpansionPacketData",
		308:  "OP_LoginUnknown1",
		309:  "OP_LoginUnknown2",
		311:  "OP_LogoutReply",
		318:  "OP_MarkNPC",
		319:  "OP_MarkRaidNPC",
		320:  "OP_Marquee",
		323:  "OP_MendHPUpdate",
		324:  "OP_MercenaryAssign",
		325:  "OP_MercenaryCommand",
		326:  "OP_MercenaryDataRequest",
		327:  "OP_MercenaryDataResponse",
		328:  "OP_MercenaryDataUpdate",
		329:  "OP_MercenaryDataUpdateRequest",
		330:  "OP_MercenaryDismiss",
		331:  "OP_MercenaryHire",
		332:  "OP_MercenarySuspendRequest",
		333:  "OP_MercenarySuspendResponse",
		334:  "OP_MercenaryTimer",
		335:  "OP_MercenaryTimerRequest",
		336:  "OP_MercenaryUnknown1",
		337:  "OP_MercenaryUnsuspendResponse",
		342:  "OP_MobUpdate",
		349:  "OP_MoveMultipleItems",
		350:  "OP_MoveLogDisregard",
		351:  "OP_MoveLogRequest",
		352:  "OP_MultiLineMsg",
		354:  "OP_NewTitlesAvailable",
		357:  "OP_OpenContainer",
		358:  "OP_OpenDiscordMerchant",
		360:  "OP_OpenInventory",
		363:  "OP_PetBuffWindow",
		365:  "OP_PetCommandState",
		366:  "OP_PetHoTT",
		371:  "OP_PetitionCheckout2",
		376:  "OP_PetitionSearch",
		377:  "OP_PetitionSearchResults",
		378:  "OP_PetitionSearchText",
		383:  "OP_PlayerStateAdd",
		384:  "OP_PlayerStateRemove",
		388:  "OP_Poll",
		389:  "OP_PollResponse",
		390:  "OP_PopupResponse",
		393:  "OP_PreLogoutReply",
		395:  "OP_PVPLeaderBoardDetailsReply",
		396:  "OP_PVPLeaderBoardDetailsRequest",
		397:  "OP_PVPLeaderBoardReply",
		398:  "OP_PVPLeaderBoardRequest",
		400:  "OP_QueryResponseThing",
		401:  "OP_QueryUCSServerStatus",
		402:  "OP_RaidDelegateAbility",
		403:  "OP_RaidClearNPCMarks",
		404:  "OP_RaidInvite",
		405:  "OP_RaidJoin",
		407:  "OP_RandomNameGenerator",
		416:  "OP_ReclaimCrystals",
		418:  "OP_RemoveAllDoors",
		419:  "OP_RemoveBlockedBuffs",
		420:  "OP_RemoveNimbusEffect",
		421:  "OP_RemoveTrap",
		427:  "OP_RequestKnowledgeBase",
		429:  "OP_RespawnWindow",
		431:  "OP_RestState",
		432:  "OP_Rewind",
		434:  "OP_RezzComplete",
		436:  "OP_Sacrifice",
		446:  "OP_SendFindableNPCs",
		452:  "OP_SendSystemStats",
		460:  "OP_SessionReady",
		461:  "OP_SetChatServer",
		462:  "OP_SetChatServer2",
		463:  "OP_SetFace",
		464:  "OP_SetGroupTarget",
		466:  "OP_SetGuildRank",
		469:  "OP_SetStartCity",
		472:  "OP_SharedTaskMemberList",
		473:  "OP_SharedTaskAddPlayer",
		474:  "OP_SharedTaskRemovePlayer",
		475:  "OP_SharedTaskMakeLeader",
		476:  "OP_SharedTaskMemberInvite",
		477:  "OP_SharedTaskInvite",
		478:  "OP_SharedTaskInviteResponse",
		479:  "OP_SharedTaskAcceptNew",
		480:  "OP_SharedTaskMemberChange",
		481:  "OP_SharedTaskPlayerList",
		482:  "OP_SharedTaskSelectWindow",
		483:  "OP_SharedTaskQuit",
		484:  "OP_TaskTimers",
		488:  "OP_ShopEndConfirm",
		489:  "OP_ShopItem",
		496:  "OP_Some3ByteHPUpdate",
		497:  "OP_Some6ByteHPUpdate",
		499:  "OP_Sound",
		502:  "OP_SpawnPositionUpdate",
		510:  "OP_TargetBuffs",
		512:  "OP_TargetHoTT",
		516:  "OP_TaskActivityComplete",
		518:  "OP_TaskHistoryReply",
		519:  "OP_TaskHistoryRequest",
		520:  "OP_TaskRequestTimer",
		521:  "OP_TaskSelectWindow",
		541:  "OP_Translocate",
		546:  "OP_TributePointUpdate",
		550:  "OP_Untargetable",
		551:  "OP_UpdateAA",
		552:  "OP_UpdateAura",
		554:  "OP_VetClaimReply",
		555:  "OP_VetClaimRequest",
		556:  "OP_VetRewardsAvaliable",
		557:  "OP_VoiceMacroIn",
		558:  "OP_VoiceMacroOut",
		559:  "OP_WeaponEquip1",
		562:  "OP_Weblink",
		564:  "OP_WhoAllResponse",
		565:  "OP_World_Client_CRC1",
		566:  "OP_World_Client_CRC2",
		567:  "OP_World_Client_CRC3",
		568:  "OP_WorldClientReady",
		569:  "OP_WorldComplete",
		570:  "OP_WorldLogout",
		572:  "OP_WorldUnknown001",
		573:  "OP_XTargetAutoAddHaters",
		574:  "OP_XTargetOpen",
		575:  "OP_XTargetOpenResponse",
		576:  "OP_XTargetRequest",
		577:  "OP_XTargetResponse",
		580:  "OP_ZoneComplete",
		582:  "OP_ZoneGuildList",
		584:  "OP_ZonePlayerToBind",
		586:  "OP_ZoneServerReady",
		589:  "OP_ResetAA",
		590:  "OP_UnderWorld",
	}
	OpCodes_value = map[string]int32{
		"OP_Unknown":                      0,
		"OP_LoginWeb":                     304,
		"OP_LoginAccepted":                305,
		"OP_PlayEverquestRequest":         385,
		"OP_PlayEverquestResponse":        386,
		"OP_ServerListRequest":            458,
		"OP_ServerListResponse":           459,
		"OP_ApproveName":                  40,
		"OP_CharacterCreate":              77,
		"OP_DeleteCharacter":              119,
		"OP_ApproveName_Server":           5040,
		"OP_EnterWorld":                   160,
		"OP_ExpansionInfo":                162,
		"OP_GuildsList":                   245,
		"OP_PostEnterWorld":               391,
		"OP_SendCharInfo":                 444,
		"OP_SendLoginInfo":                448,
		"OP_SendMaxCharacters":            449,
		"OP_SendMembership":               450,
		"OP_SendMembershipDetails":        451,
		"OP_ZoneServerInfo":               585,
		"OP_WebInitiateConnection":        591,
		"OP_ZoneEntry":                    581,
		"OP_SetServerFilter":              468,
		"OP_SendAATable":                  443,
		"OP_SendTributes":                 454,
		"OP_SendGuildTributes":            447,
		"OP_SendAAStats":                  442,
		"OP_ReqClientSpawn":               423,
		"OP_ReqNewZone":                   424,
		"OP_SendExpZonein":                445,
		"OP_ClientReady":                  92,
		"OP_ClientError":                  91,
		"OP_ApproveZone":                  42,
		"OP_TGB":                          524,
		"OP_AckPacket":                    7,
		"OP_ClientUpdate":                 94,
		"OP_AutoAttack":                   47,
		"OP_AutoAttack2":                  48,
		"OP_Consent":                      102,
		"OP_ConsentDeny":                  103,
		"OP_TargetMouse":                  513,
		"OP_TargetCommand":                511,
		"OP_Shielding":                    485,
		"OP_Jump":                         274,
		"OP_AdventureInfoRequest":         15,
		"OP_AdventureRequest":             23,
		"OP_LDoNButton":                   278,
		"OP_LeaveAdventure":               286,
		"OP_Consume":                      107,
		"OP_AdventureMerchantRequest":     19,
		"OP_AdventureMerchantPurchase":    18,
		"OP_ConsiderCorpse":               106,
		"OP_Consider":                     105,
		"OP_Begging":                      58,
		"OP_TestBuff":                     523,
		"OP_Surname":                      508,
		"OP_YellForHelp":                  578,
		"OP_Assist":                       43,
		"OP_GMTraining":                   201,
		"OP_GMEndTraining":                188,
		"OP_GMTrainSkill":                 202,
		"OP_RequestDuel":                  426,
		"OP_DuelDecline":                  132,
		"OP_DuelAccept":                   133,
		"OP_SpawnAppearance":              500,
		"OP_BazaarInspect":                54,
		"OP_Death":                        117,
		"OP_MoveCoin":                     346,
		"OP_ItemLinkClick":                264,
		"OP_MoveItem":                     348,
		"OP_Camp":                         69,
		"OP_Logout":                       310,
		"OP_SenseHeading":                 456,
		"OP_FeignDeath":                   166,
		"OP_Sneak":                        495,
		"OP_Hide":                         251,
		"OP_ChannelMessage":               76,
		"OP_WearChange":                   560,
		"OP_DeleteSpawn":                  123,
		"OP_SaveOnZoneReq":                440,
		"OP_Save":                         439,
		"OP_WhoAllRequest":                563,
		"OP_GMZoneRequest":                204,
		"OP_GMZoneRequest2":               205,
		"OP_EndLootRequest":               157,
		"OP_LootRequest":                  315,
		"OP_Dye":                          135,
		"OP_ConfirmDelete":                101,
		"OP_LootItem":                     314,
		"OP_GuildDelete":                  228,
		"OP_GuildPublicNote":              243,
		"OP_GetGuildsList":                182,
		"OP_SetGuildMOTD":                 465,
		"OP_SetRunMode":                   467,
		"OP_GuildPeace":                   241,
		"OP_GuildWar":                     249,
		"OP_GuildLeader":                  232,
		"OP_GuildDemote":                  229,
		"OP_GuildInvite":                  230,
		"OP_GuildRemove":                  244,
		"OP_GuildInviteAccept":            231,
		"OP_ManaChange":                   316,
		"OP_MemorizeSpell":                321,
		"OP_SwapSpell":                    509,
		"OP_CastSpell":                    74,
		"OP_DeleteItem":                   121,
		"OP_CombatAbility":                98,
		"OP_Taunt":                        522,
		"OP_InstillDoubt":                 262,
		"OP_RezzAnswer":                   433,
		"OP_GMSummon":                     199,
		"OP_TradeBusy":                    530,
		"OP_TradeRequest":                 536,
		"OP_TradeRequestAck":              537,
		"OP_CancelTrade":                  72,
		"OP_TradeAcceptClick":             529,
		"OP_BoardBoat":                    62,
		"OP_LeaveBoat":                    287,
		"OP_RandomReq":                    409,
		"OP_Buff":                         64,
		"OP_GMHideMe":                     192,
		"OP_GMNameChange":                 196,
		"OP_GMKill":                       194,
		"OP_GMLastName":                   195,
		"OP_GMToggle":                     200,
		"OP_LFGCommand":                   291,
		"OP_GMGoto":                       191,
		"OP_TraderShop":                   539,
		"OP_ShopRequest":                  492,
		"OP_Bazaar":                       53,
		"OP_ShopPlayerBuy":                490,
		"OP_ShopPlayerSell":               491,
		"OP_ShopEnd":                      487,
		"OP_CloseContainer":               95,
		"OP_ClickObjectAction":            90,
		"OP_ClickObject":                  89,
		"OP_RecipesFavorite":              414,
		"OP_RecipesSearch":                415,
		"OP_RecipeDetails":                412,
		"OP_RecipeAutoCombine":            411,
		"OP_TradeSkillCombine":            540,
		"OP_ItemName":                     267,
		"OP_AugmentItem":                  46,
		"OP_ClickDoor":                    88,
		"OP_FaceChange":                   164,
		"OP_GroupInvite":                  215,
		"OP_GroupInvite2":                 216,
		"OP_GroupFollow":                  213,
		"OP_GroupFollow2":                 214,
		"OP_GroupAcknowledge":             207,
		"OP_GroupCancelInvite":            208,
		"OP_GroupDisband":                 210,
		"OP_GroupDelete":                  209,
		"OP_GMEmoteZone":                  187,
		"OP_InspectRequest":               261,
		"OP_InspectAnswer":                258,
		"OP_DeleteSpell":                  124,
		"OP_PetitionBug":                  368,
		"OP_Bug":                          67,
		"OP_Petition":                     367,
		"OP_PetitionCheckIn":              369,
		"OP_PetitionResolve":              375,
		"OP_PetitionDelete":               372,
		"OP_PetitionUnCheckout":           379,
		"OP_PetitionQue":                  373,
		"OP_PDeletePetition":              362,
		"OP_PetitionCheckout":             370,
		"OP_PetitionRefresh":              374,
		"OP_PetCommands":                  364,
		"OP_ReadBook":                     410,
		"OP_Emote":                        156,
		"OP_GMDelCorpse":                  186,
		"OP_GMKick":                       193,
		"OP_GMServers":                    198,
		"OP_Illusion":                     254,
		"OP_GMBecomeNPC":                  185,
		"OP_Fishing":                      173,
		"OP_Forage":                       176,
		"OP_Mend":                         322,
		"OP_EnvDamage":                    161,
		"OP_Damage":                       116,
		"OP_AAAction":                     4,
		"OP_TraderBuy":                    534,
		"OP_Trader":                       533,
		"OP_GMFind":                       190,
		"OP_PickPocket":                   381,
		"OP_Bind_Wound":                   60,
		"OP_TrackTarget":                  527,
		"OP_Track":                        526,
		"OP_TrackUnknown":                 528,
		"OP_ReloadUI":                     417,
		"OP_Split":                        505,
		"OP_SenseTraps":                   457,
		"OP_DisarmTraps":                  127,
		"OP_OpenTributeMaster":            361,
		"OP_OpenGuildTributeMaster":       359,
		"OP_TributeItem":                  543,
		"OP_TributeMoney":                 544,
		"OP_SelectTribute":                441,
		"OP_TributeUpdate":                549,
		"OP_TributeToggle":                548,
		"OP_TributeNPC":                   545,
		"OP_CrashDump":                    111,
		"OP_ControlBoat":                  108,
		"OP_DumpName":                     134,
		"OP_SafeFallSuccess":              437,
		"OP_Heartbeat":                    250,
		"OP_SafePoint":                    438,
		"OP_FindPersonRequest":            169,
		"OP_LeadershipExpToggle":          284,
		"OP_PurchaseLeadershipAA":         394,
		"OP_BankerChange":                 51,
		"OP_SetTitle":                     470,
		"OP_RequestTitles":                428,
		"OP_ItemVerifyRequest":            272,
		"OP_ClearObject":                  86,
		"OP_FinishTrade":                  170,
		"OP_GMEndTrainingResponse":        189,
		"OP_LootComplete":                 313,
		"OP_WorldObjectsSent":             571,
		"OP_FinishWindow":                 171,
		"OP_FinishWindow2":                172,
		"OP_ItemPacket":                   268,
		"OP_ColoredText":                  97,
		"OP_ItemRecastDelay":              270,
		"OP_FormattedMessage":             178,
		"OP_GuildMemberList":              238,
		"OP_InterruptCast":                263,
		"OP_ItemLinkResponse":             265,
		"OP_ZoneSpawns":                   587,
		"OP_CompletedTasks":               100,
		"OP_CharInventory":                79,
		"OP_CustomTitles":                 115,
		"OP_SpawnDoor":                    501,
		"OP_SendZonepoints":               455,
		"OP_TributeInfo":                  542,
		"OP_GuildTributeInfo":             247,
		"OP_SendTitleList":                453,
		"OP_AAExpUpdate":                  5,
		"OP_Action":                       8,
		"OP_AdventureData":                11,
		"OP_AdventureFinish":              13,
		"OP_AdventurePointsUpdate":        22,
		"OP_Animation":                    37,
		"OP_AnnoyingZoneUnknown":          38,
		"OP_BecomeTrader":                 57,
		"OP_BeginCast":                    59,
		"OP_Charm":                        80,
		"OP_CameraEffect":                 68,
		"OP_ConsentResponse":              104,
		"OP_EnduranceUpdate":              158,
		"OP_ExpUpdate":                    163,
		"OP_GroundSpawn":                  206,
		"OP_GroupUpdate":                  222,
		"OP_GuildMOTD":                    240,
		"OP_GuildManageAdd":               233,
		"OP_GuildManageRemove":            235,
		"OP_GuildManageStatus":            236,
		"OP_GuildMemberUpdate":            239,
		"OP_HPUpdate":                     253,
		"OP_IncreaseStats":                255,
		"OP_ItemVerifyReply":              271,
		"OP_LFGAppearance":                290,
		"OP_LeadershipExpUpdate":          285,
		"OP_LevelAppearance":              288,
		"OP_LevelUpdate":                  289,
		"OP_ManaUpdate":                   317,
		"OP_MobEnduranceUpdate":           338,
		"OP_MobHealth":                    339,
		"OP_MobManaUpdate":                340,
		"OP_MobRename":                    341,
		"OP_MoneyOnCorpse":                343,
		"OP_MoneyUpdate":                  344,
		"OP_MoveDoor":                     347,
		"OP_NewSpawn":                     353,
		"OP_NewZone":                      355,
		"OP_PetitionUpdate":               380,
		"OP_PlayerProfile":                382,
		"OP_RaidUpdate":                   406,
		"OP_RandomReply":                  408,
		"OP_RecipeReply":                  413,
		"OP_RequestClientZoneChange":      425,
		"OP_RespondAA":                    430,
		"OP_RezzRequest":                  435,
		"OP_SetTitleReply":                471,
		"OP_ShopDelItem":                  486,
		"OP_SimpleMessage":                493,
		"OP_SkillUpdate":                  494,
		"OP_SomeItemPacketMaybe":          498,
		"OP_SpellEffect":                  504,
		"OP_Stamina":                      506,
		"OP_Stun":                         507,
		"OP_TargetReject":                 514,
		"OP_TimeOfDay":                    525,
		"OP_TradeCoins":                   531,
		"OP_TradeMoneyUpdate":             532,
		"OP_TraderDelItem":                535,
		"OP_TraderItemUpdate":             538,
		"OP_TributeTimer":                 547,
		"OP_UpdateLeadershipAA":           553,
		"OP_Weather":                      561,
		"OP_ZoneChange":                   579,
		"OP_ZoneInUnknown":                583,
		"OP_AcceptNewTask":                6,
		"OP_AdventureInfo":                14,
		"OP_ApplyPoison":                  39,
		"OP_ApproveWorld":                 41,
		"OP_Bandolier":                    50,
		"OP_BazaarSearch":                 55,
		"OP_BecomeCorpse":                 56,
		"OP_CancelTask":                   71,
		"OP_Command":                      99,
		"OP_DynamicWall":                  136,
		"OP_LFGuild":                      295,
		"OP_LoadSpellSet":                 300,
		"OP_LogServer":                    312,
		"OP_MOTD":                         345,
		"OP_OnLevelMessage":               356,
		"OP_PlayMP3":                      387,
		"OP_PotionBelt":                   392,
		"OP_PVPStats":                     399,
		"OP_Report":                       422,
		"OP_SpecialMesg":                  503,
		"OP_TaskActivity":                 515,
		"OP_TaskDescription":              517,
		"OP_ZoneUnavail":                  588,
		"Nested_WorldServer":              1000,
		"Nested_CharacterSelectEntry":     1001,
		"Nested_CharSelectEquip":          1002,
		"Nested_Tint":                     1003,
		"Nested_StringList":               1004,
		"OP_ExploreUnknown":               1,
		"OP_0x0193":                       2,
		"OP_0x0347":                       3,
		"OP_Action2":                      9,
		"OP_AddNimbusEffect":              10,
		"OP_AdventureDetails":             12,
		"OP_AdventureLeaderboardReply":    16,
		"OP_AdventureLeaderboardRequest":  17,
		"OP_AdventureMerchantResponse":    20,
		"OP_AdventureMerchantSell":        21,
		"OP_AdventureStatsReply":          24,
		"OP_AdventureStatsRequest":        25,
		"OP_AdventureUpdate":              26,
		"OP_AggroMeterLockTarget":         27,
		"OP_AggroMeterTargetInfo":         28,
		"OP_AggroMeterUpdate":             29,
		"OP_AltCurrency":                  30,
		"OP_AltCurrencyMerchantReply":     31,
		"OP_AltCurrencyMerchantRequest":   32,
		"OP_AltCurrencyPurchase":          33,
		"OP_AltCurrencyReclaim":           34,
		"OP_AltCurrencySell":              35,
		"OP_AltCurrencySellSelection":     36,
		"OP_AssistGroup":                  44,
		"OP_AugmentInfo":                  45,
		"OP_AutoFire":                     49,
		"OP_Barter":                       52,
		"OP_BlockedBuffs":                 61,
		"OP_BookButton":                   63,
		"OP_BuffCreate":                   65,
		"OP_BuffRemoveRequest":            66,
		"OP_CancelSneakHide":              70,
		"OP_CashReward":                   73,
		"OP_ChangeSize":                   75,
		"OP_CharacterCreateRequest":       78,
		"OP_ChatMessage":                  81,
		"OP_ClearAA":                      82,
		"OP_ClearBlockedBuffs":            83,
		"OP_ClearLeadershipAbilities":     84,
		"OP_ClearNPCMarks":                85,
		"OP_ClearSurname":                 87,
		"OP_ClientTimeStamp":              93,
		"OP_CloseTributeMaster":           96,
		"OP_CorpseDrag":                   109,
		"OP_CorpseDrop":                   110,
		"OP_CrystalCountUpdate":           112,
		"OP_CrystalCreate":                113,
		"OP_CrystalReclaim":               114,
		"OP_DelegateAbility":              118,
		"OP_DeleteCharge":                 120,
		"OP_DeletePetition":               122,
		"OP_DenyResponse":                 125,
		"OP_Disarm":                       126,
		"OP_DisciplineTimer":              128,
		"OP_DisciplineUpdate":             129,
		"OP_DiscordMerchantInventory":     130,
		"OP_DoGroupLeadershipAbility":     131,
		"OP_DzAddPlayer":                  137,
		"OP_DzChooseZone":                 138,
		"OP_DzChooseZoneReply":            139,
		"OP_DzCompass":                    140,
		"OP_DzExpeditionEndsWarning":      141,
		"OP_DzExpeditionInfo":             142,
		"OP_DzExpeditionInvite":           143,
		"OP_DzExpeditionInviteResponse":   144,
		"OP_DzExpeditionLockoutTimers":    145,
		"OP_DzListTimers":                 146,
		"OP_DzMakeLeader":                 147,
		"OP_DzMemberList":                 148,
		"OP_DzMemberListName":             149,
		"OP_DzMemberListStatus":           150,
		"OP_DzPlayerList":                 151,
		"OP_DzQuit":                       152,
		"OP_DzRemovePlayer":               153,
		"OP_DzSetLeaderName":              154,
		"OP_DzSwapPlayer":                 155,
		"OP_EnterChat":                    159,
		"OP_Feedback":                     165,
		"OP_FellowshipUpdate":             167,
		"OP_FindPersonReply":              168,
		"OP_Fling":                        174,
		"OP_FloatListThing":               175,
		"OP_ForceFindPerson":              177,
		"OP_FriendsWho":                   179,
		"OP_GetGuildMOTD":                 180,
		"OP_GetGuildMOTDReply":            181,
		"OP_GiveMoney":                    183,
		"OP_GMApproval":                   184,
		"OP_GMTrainSkillConfirm":          203,
		"OP_GroupDisbandOther":            211,
		"OP_GroupDisbandYou":              212,
		"OP_GroupLeaderChange":            217,
		"OP_GroupLeadershipAAUpdate":      218,
		"OP_GroupMakeLeader":              219,
		"OP_GroupMentor":                  220,
		"OP_GroupRoles":                   221,
		"OP_GroupUpdateB":                 223,
		"OP_GroupUpdateLeaderAA":          224,
		"OP_GuildBank":                    225,
		"OP_GuildBankItemList":            226,
		"OP_GuildCreate":                  227,
		"OP_GuildManageBanker":            234,
		"OP_GuildMemberLevelUpdate":       237,
		"OP_GuildPromote":                 242,
		"OP_GuildStatus":                  246,
		"OP_GuildUpdateURLAndChannel":     248,
		"OP_HideCorpse":                   252,
		"OP_InitialHPUpdate":              256,
		"OP_InitialMobHealth":             257,
		"OP_InspectBuffs":                 259,
		"OP_InspectMessageUpdate":         260,
		"OP_ItemLinkText":                 266,
		"OP_ItemPreview":                  269,
		"OP_ItemViewUnknown":              273,
		"OP_KeyRing":                      275,
		"OP_KickPlayers":                  276,
		"OP_KnowledgeBase":                277,
		"OP_LDoNDisarmTraps":              279,
		"OP_LDoNInspect":                  280,
		"OP_LDoNOpen":                     281,
		"OP_LDoNPickLock":                 282,
		"OP_LDoNSenseTraps":               283,
		"OP_LFGGetMatchesRequest":         292,
		"OP_LFGGetMatchesResponse":        293,
		"OP_LFGResponse":                  294,
		"OP_LFPCommand":                   296,
		"OP_LFPGetMatchesRequest":         297,
		"OP_LFPGetMatchesResponse":        298,
		"OP_LinkedReuse":                  299,
		"OP_LocInfo":                      301,
		"OP_LockoutTimerInfo":             302,
		"OP_Login":                        303,
		"OP_LoginComplete":                306,
		"OP_LoginExpansionPacketData":     307,
		"OP_LoginUnknown1":                308,
		"OP_LoginUnknown2":                309,
		"OP_LogoutReply":                  311,
		"OP_MarkNPC":                      318,
		"OP_MarkRaidNPC":                  319,
		"OP_Marquee":                      320,
		"OP_MendHPUpdate":                 323,
		"OP_MercenaryAssign":              324,
		"OP_MercenaryCommand":             325,
		"OP_MercenaryDataRequest":         326,
		"OP_MercenaryDataResponse":        327,
		"OP_MercenaryDataUpdate":          328,
		"OP_MercenaryDataUpdateRequest":   329,
		"OP_MercenaryDismiss":             330,
		"OP_MercenaryHire":                331,
		"OP_MercenarySuspendRequest":      332,
		"OP_MercenarySuspendResponse":     333,
		"OP_MercenaryTimer":               334,
		"OP_MercenaryTimerRequest":        335,
		"OP_MercenaryUnknown1":            336,
		"OP_MercenaryUnsuspendResponse":   337,
		"OP_MobUpdate":                    342,
		"OP_MoveMultipleItems":            349,
		"OP_MoveLogDisregard":             350,
		"OP_MoveLogRequest":               351,
		"OP_MultiLineMsg":                 352,
		"OP_NewTitlesAvailable":           354,
		"OP_OpenContainer":                357,
		"OP_OpenDiscordMerchant":          358,
		"OP_OpenInventory":                360,
		"OP_PetBuffWindow":                363,
		"OP_PetCommandState":              365,
		"OP_PetHoTT":                      366,
		"OP_PetitionCheckout2":            371,
		"OP_PetitionSearch":               376,
		"OP_PetitionSearchResults":        377,
		"OP_PetitionSearchText":           378,
		"OP_PlayerStateAdd":               383,
		"OP_PlayerStateRemove":            384,
		"OP_Poll":                         388,
		"OP_PollResponse":                 389,
		"OP_PopupResponse":                390,
		"OP_PreLogoutReply":               393,
		"OP_PVPLeaderBoardDetailsReply":   395,
		"OP_PVPLeaderBoardDetailsRequest": 396,
		"OP_PVPLeaderBoardReply":          397,
		"OP_PVPLeaderBoardRequest":        398,
		"OP_QueryResponseThing":           400,
		"OP_QueryUCSServerStatus":         401,
		"OP_RaidDelegateAbility":          402,
		"OP_RaidClearNPCMarks":            403,
		"OP_RaidInvite":                   404,
		"OP_RaidJoin":                     405,
		"OP_RandomNameGenerator":          407,
		"OP_ReclaimCrystals":              416,
		"OP_RemoveAllDoors":               418,
		"OP_RemoveBlockedBuffs":           419,
		"OP_RemoveNimbusEffect":           420,
		"OP_RemoveTrap":                   421,
		"OP_RequestKnowledgeBase":         427,
		"OP_RespawnWindow":                429,
		"OP_RestState":                    431,
		"OP_Rewind":                       432,
		"OP_RezzComplete":                 434,
		"OP_Sacrifice":                    436,
		"OP_SendFindableNPCs":             446,
		"OP_SendSystemStats":              452,
		"OP_SessionReady":                 460,
		"OP_SetChatServer":                461,
		"OP_SetChatServer2":               462,
		"OP_SetFace":                      463,
		"OP_SetGroupTarget":               464,
		"OP_SetGuildRank":                 466,
		"OP_SetStartCity":                 469,
		"OP_SharedTaskMemberList":         472,
		"OP_SharedTaskAddPlayer":          473,
		"OP_SharedTaskRemovePlayer":       474,
		"OP_SharedTaskMakeLeader":         475,
		"OP_SharedTaskMemberInvite":       476,
		"OP_SharedTaskInvite":             477,
		"OP_SharedTaskInviteResponse":     478,
		"OP_SharedTaskAcceptNew":          479,
		"OP_SharedTaskMemberChange":       480,
		"OP_SharedTaskPlayerList":         481,
		"OP_SharedTaskSelectWindow":       482,
		"OP_SharedTaskQuit":               483,
		"OP_TaskTimers":                   484,
		"OP_ShopEndConfirm":               488,
		"OP_ShopItem":                     489,
		"OP_Some3ByteHPUpdate":            496,
		"OP_Some6ByteHPUpdate":            497,
		"OP_Sound":                        499,
		"OP_SpawnPositionUpdate":          502,
		"OP_TargetBuffs":                  510,
		"OP_TargetHoTT":                   512,
		"OP_TaskActivityComplete":         516,
		"OP_TaskHistoryReply":             518,
		"OP_TaskHistoryRequest":           519,
		"OP_TaskRequestTimer":             520,
		"OP_TaskSelectWindow":             521,
		"OP_Translocate":                  541,
		"OP_TributePointUpdate":           546,
		"OP_Untargetable":                 550,
		"OP_UpdateAA":                     551,
		"OP_UpdateAura":                   552,
		"OP_VetClaimReply":                554,
		"OP_VetClaimRequest":              555,
		"OP_VetRewardsAvaliable":          556,
		"OP_VoiceMacroIn":                 557,
		"OP_VoiceMacroOut":                558,
		"OP_WeaponEquip1":                 559,
		"OP_Weblink":                      562,
		"OP_WhoAllResponse":               564,
		"OP_World_Client_CRC1":            565,
		"OP_World_Client_CRC2":            566,
		"OP_World_Client_CRC3":            567,
		"OP_WorldClientReady":             568,
		"OP_WorldComplete":                569,
		"OP_WorldLogout":                  570,
		"OP_WorldUnknown001":              572,
		"OP_XTargetAutoAddHaters":         573,
		"OP_XTargetOpen":                  574,
		"OP_XTargetOpenResponse":          575,
		"OP_XTargetRequest":               576,
		"OP_XTargetResponse":              577,
		"OP_ZoneComplete":                 580,
		"OP_ZoneGuildList":                582,
		"OP_ZonePlayerToBind":             584,
		"OP_ZoneServerReady":              586,
		"OP_ResetAA":                      589,
		"OP_UnderWorld":                   590,
	}
)

func (x OpCodes) Enum() *OpCodes {
	p := new(OpCodes)
	*p = x
	return p
}

func (x OpCodes) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OpCodes) Descriptor() protoreflect.EnumDescriptor {
	return file_EQMessage_proto_enumTypes[1].Descriptor()
}

func (OpCodes) Type() protoreflect.EnumType {
	return &file_EQMessage_proto_enumTypes[1]
}

func (x OpCodes) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OpCodes.Descriptor instead.
func (OpCodes) EnumDescriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{1}
}

// Login
type LoginMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password      string                 `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoginMessage) Reset() {
	*x = LoginMessage{}
	mi := &file_EQMessage_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginMessage) ProtoMessage() {}

func (x *LoginMessage) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginMessage.ProtoReflect.Descriptor instead.
func (*LoginMessage) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{0}
}

func (x *LoginMessage) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *LoginMessage) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type LoginReply struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Key             string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	ErrorStrId      int32                  `protobuf:"varint,2,opt,name=error_str_id,json=errorStrId,proto3" json:"error_str_id,omitempty"`
	FailedAttempts  int32                  `protobuf:"varint,3,opt,name=failed_attempts,json=failedAttempts,proto3" json:"failed_attempts,omitempty"`
	Lsid            int32                  `protobuf:"varint,4,opt,name=lsid,proto3" json:"lsid,omitempty"`
	Success         bool                   `protobuf:"varint,5,opt,name=success,proto3" json:"success,omitempty"`
	ShowPlayerCount bool                   `protobuf:"varint,6,opt,name=show_player_count,json=showPlayerCount,proto3" json:"show_player_count,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *LoginReply) Reset() {
	*x = LoginReply{}
	mi := &file_EQMessage_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginReply) ProtoMessage() {}

func (x *LoginReply) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginReply.ProtoReflect.Descriptor instead.
func (*LoginReply) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{1}
}

func (x *LoginReply) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *LoginReply) GetErrorStrId() int32 {
	if x != nil {
		return x.ErrorStrId
	}
	return 0
}

func (x *LoginReply) GetFailedAttempts() int32 {
	if x != nil {
		return x.FailedAttempts
	}
	return 0
}

func (x *LoginReply) GetLsid() int32 {
	if x != nil {
		return x.Lsid
	}
	return 0
}

func (x *LoginReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *LoginReply) GetShowPlayerCount() bool {
	if x != nil {
		return x.ShowPlayerCount
	}
	return false
}

type LoginRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sequence      int32                  `protobuf:"varint,1,opt,name=sequence,proto3" json:"sequence,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	mi := &file_EQMessage_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest.ProtoReflect.Descriptor instead.
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{2}
}

func (x *LoginRequest) GetSequence() int32 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

type WorldServer struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ip            string                 `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	ServerType    int32                  `protobuf:"varint,2,opt,name=server_type,json=serverType,proto3" json:"server_type,omitempty"`
	ServerId      int32                  `protobuf:"varint,3,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	LongName      string                 `protobuf:"bytes,4,opt,name=long_name,json=longName,proto3" json:"long_name,omitempty"`
	CountryCode   string                 `protobuf:"bytes,5,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
	LanguageCode  string                 `protobuf:"bytes,6,opt,name=language_code,json=languageCode,proto3" json:"language_code,omitempty"`
	Status        int32                  `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`
	PlayersOnline int32                  `protobuf:"varint,8,opt,name=players_online,json=playersOnline,proto3" json:"players_online,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorldServer) Reset() {
	*x = WorldServer{}
	mi := &file_EQMessage_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorldServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorldServer) ProtoMessage() {}

func (x *WorldServer) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorldServer.ProtoReflect.Descriptor instead.
func (*WorldServer) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{3}
}

func (x *WorldServer) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *WorldServer) GetServerType() int32 {
	if x != nil {
		return x.ServerType
	}
	return 0
}

func (x *WorldServer) GetServerId() int32 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

func (x *WorldServer) GetLongName() string {
	if x != nil {
		return x.LongName
	}
	return ""
}

func (x *WorldServer) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *WorldServer) GetLanguageCode() string {
	if x != nil {
		return x.LanguageCode
	}
	return ""
}

func (x *WorldServer) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *WorldServer) GetPlayersOnline() int32 {
	if x != nil {
		return x.PlayersOnline
	}
	return 0
}

type LoginServerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerCount   int32                  `protobuf:"varint,1,opt,name=server_count,json=serverCount,proto3" json:"server_count,omitempty"`
	Servers       []*WorldServer         `protobuf:"bytes,2,rep,name=servers,proto3" json:"servers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoginServerResponse) Reset() {
	*x = LoginServerResponse{}
	mi := &file_EQMessage_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginServerResponse) ProtoMessage() {}

func (x *LoginServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginServerResponse.ProtoReflect.Descriptor instead.
func (*LoginServerResponse) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{4}
}

func (x *LoginServerResponse) GetServerCount() int32 {
	if x != nil {
		return x.ServerCount
	}
	return 0
}

func (x *LoginServerResponse) GetServers() []*WorldServer {
	if x != nil {
		return x.Servers
	}
	return nil
}

type PlayEverquest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerId      int32                  `protobuf:"varint,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlayEverquest) Reset() {
	*x = PlayEverquest{}
	mi := &file_EQMessage_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayEverquest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayEverquest) ProtoMessage() {}

func (x *PlayEverquest) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayEverquest.ProtoReflect.Descriptor instead.
func (*PlayEverquest) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{5}
}

func (x *PlayEverquest) GetServerId() int32 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

type PlayEverquestResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerId      int32                  `protobuf:"varint,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	ErrorStrId    int32                  `protobuf:"varint,3,opt,name=error_str_id,json=errorStrId,proto3" json:"error_str_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlayEverquestResponse) Reset() {
	*x = PlayEverquestResponse{}
	mi := &file_EQMessage_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayEverquestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayEverquestResponse) ProtoMessage() {}

func (x *PlayEverquestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayEverquestResponse.ProtoReflect.Descriptor instead.
func (*PlayEverquestResponse) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{6}
}

func (x *PlayEverquestResponse) GetServerId() int32 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

func (x *PlayEverquestResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *PlayEverquestResponse) GetErrorStrId() int32 {
	if x != nil {
		return x.ErrorStrId
	}
	return 0
}

// World
type WebInitiateConnection struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Login         bool                   `protobuf:"varint,1,opt,name=login,proto3" json:"login,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WebInitiateConnection) Reset() {
	*x = WebInitiateConnection{}
	mi := &file_EQMessage_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WebInitiateConnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebInitiateConnection) ProtoMessage() {}

func (x *WebInitiateConnection) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebInitiateConnection.ProtoReflect.Descriptor instead.
func (*WebInitiateConnection) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{7}
}

func (x *WebInitiateConnection) GetLogin() bool {
	if x != nil {
		return x.Login
	}
	return false
}

type LoginInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Password      string                 `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Zoning        int32                  `protobuf:"varint,3,opt,name=zoning,proto3" json:"zoning,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoginInfo) Reset() {
	*x = LoginInfo{}
	mi := &file_EQMessage_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginInfo) ProtoMessage() {}

func (x *LoginInfo) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginInfo.ProtoReflect.Descriptor instead.
func (*LoginInfo) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{8}
}

func (x *LoginInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LoginInfo) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *LoginInfo) GetZoning() int32 {
	if x != nil {
		return x.Zoning
	}
	return 0
}

type Tint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Blue          int32                  `protobuf:"varint,1,opt,name=blue,proto3" json:"blue,omitempty"`
	Green         int32                  `protobuf:"varint,2,opt,name=green,proto3" json:"green,omitempty"`
	Red           int32                  `protobuf:"varint,3,opt,name=red,proto3" json:"red,omitempty"`
	UseTint       int32                  `protobuf:"varint,4,opt,name=use_tint,json=useTint,proto3" json:"use_tint,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Tint) Reset() {
	*x = Tint{}
	mi := &file_EQMessage_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tint) ProtoMessage() {}

func (x *Tint) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tint.ProtoReflect.Descriptor instead.
func (*Tint) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{9}
}

func (x *Tint) GetBlue() int32 {
	if x != nil {
		return x.Blue
	}
	return 0
}

func (x *Tint) GetGreen() int32 {
	if x != nil {
		return x.Green
	}
	return 0
}

func (x *Tint) GetRed() int32 {
	if x != nil {
		return x.Red
	}
	return 0
}

func (x *Tint) GetUseTint() int32 {
	if x != nil {
		return x.UseTint
	}
	return 0
}

type CharSelectEquip struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Material      int32                  `protobuf:"varint,1,opt,name=material,proto3" json:"material,omitempty"`
	Color         *Tint                  `protobuf:"bytes,2,opt,name=color,proto3" json:"color,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CharSelectEquip) Reset() {
	*x = CharSelectEquip{}
	mi := &file_EQMessage_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CharSelectEquip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharSelectEquip) ProtoMessage() {}

func (x *CharSelectEquip) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharSelectEquip.ProtoReflect.Descriptor instead.
func (*CharSelectEquip) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{10}
}

func (x *CharSelectEquip) GetMaterial() int32 {
	if x != nil {
		return x.Material
	}
	return 0
}

func (x *CharSelectEquip) GetColor() *Tint {
	if x != nil {
		return x.Color
	}
	return nil
}

type CharacterSelectEntry struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Name            string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	CharClass       int32                  `protobuf:"varint,2,opt,name=char_class,json=charClass,proto3" json:"char_class,omitempty"`
	Race            int32                  `protobuf:"varint,3,opt,name=race,proto3" json:"race,omitempty"`
	Level           int32                  `protobuf:"varint,4,opt,name=level,proto3" json:"level,omitempty"`
	Zone            int32                  `protobuf:"varint,5,opt,name=zone,proto3" json:"zone,omitempty"`
	Instance        int32                  `protobuf:"varint,6,opt,name=instance,proto3" json:"instance,omitempty"`
	Gender          int32                  `protobuf:"varint,7,opt,name=gender,proto3" json:"gender,omitempty"`
	Face            int32                  `protobuf:"varint,8,opt,name=face,proto3" json:"face,omitempty"`
	Equip           []*CharSelectEquip     `protobuf:"bytes,9,rep,name=equip,proto3" json:"equip,omitempty"`
	Deity           int32                  `protobuf:"varint,10,opt,name=deity,proto3" json:"deity,omitempty"`
	PrimaryIdFile   int32                  `protobuf:"varint,11,opt,name=primary_id_file,json=primaryIdFile,proto3" json:"primary_id_file,omitempty"`
	SecondaryIdFile int32                  `protobuf:"varint,12,opt,name=secondary_id_file,json=secondaryIdFile,proto3" json:"secondary_id_file,omitempty"`
	GoHome          int32                  `protobuf:"varint,13,opt,name=go_home,json=goHome,proto3" json:"go_home,omitempty"`
	Enabled         int32                  `protobuf:"varint,14,opt,name=enabled,proto3" json:"enabled,omitempty"`
	LastLogin       int32                  `protobuf:"varint,15,opt,name=last_login,json=lastLogin,proto3" json:"last_login,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CharacterSelectEntry) Reset() {
	*x = CharacterSelectEntry{}
	mi := &file_EQMessage_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CharacterSelectEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacterSelectEntry) ProtoMessage() {}

func (x *CharacterSelectEntry) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacterSelectEntry.ProtoReflect.Descriptor instead.
func (*CharacterSelectEntry) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{11}
}

func (x *CharacterSelectEntry) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CharacterSelectEntry) GetCharClass() int32 {
	if x != nil {
		return x.CharClass
	}
	return 0
}

func (x *CharacterSelectEntry) GetRace() int32 {
	if x != nil {
		return x.Race
	}
	return 0
}

func (x *CharacterSelectEntry) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *CharacterSelectEntry) GetZone() int32 {
	if x != nil {
		return x.Zone
	}
	return 0
}

func (x *CharacterSelectEntry) GetInstance() int32 {
	if x != nil {
		return x.Instance
	}
	return 0
}

func (x *CharacterSelectEntry) GetGender() int32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *CharacterSelectEntry) GetFace() int32 {
	if x != nil {
		return x.Face
	}
	return 0
}

func (x *CharacterSelectEntry) GetEquip() []*CharSelectEquip {
	if x != nil {
		return x.Equip
	}
	return nil
}

func (x *CharacterSelectEntry) GetDeity() int32 {
	if x != nil {
		return x.Deity
	}
	return 0
}

func (x *CharacterSelectEntry) GetPrimaryIdFile() int32 {
	if x != nil {
		return x.PrimaryIdFile
	}
	return 0
}

func (x *CharacterSelectEntry) GetSecondaryIdFile() int32 {
	if x != nil {
		return x.SecondaryIdFile
	}
	return 0
}

func (x *CharacterSelectEntry) GetGoHome() int32 {
	if x != nil {
		return x.GoHome
	}
	return 0
}

func (x *CharacterSelectEntry) GetEnabled() int32 {
	if x != nil {
		return x.Enabled
	}
	return 0
}

func (x *CharacterSelectEntry) GetLastLogin() int32 {
	if x != nil {
		return x.LastLogin
	}
	return 0
}

type CharacterSelect struct {
	state          protoimpl.MessageState  `protogen:"open.v1"`
	CharacterCount int32                   `protobuf:"varint,1,opt,name=character_count,json=characterCount,proto3" json:"character_count,omitempty"`
	Characters     []*CharacterSelectEntry `protobuf:"bytes,2,rep,name=characters,proto3" json:"characters,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CharacterSelect) Reset() {
	*x = CharacterSelect{}
	mi := &file_EQMessage_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CharacterSelect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacterSelect) ProtoMessage() {}

func (x *CharacterSelect) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacterSelect.ProtoReflect.Descriptor instead.
func (*CharacterSelect) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{12}
}

func (x *CharacterSelect) GetCharacterCount() int32 {
	if x != nil {
		return x.CharacterCount
	}
	return 0
}

func (x *CharacterSelect) GetCharacters() []*CharacterSelectEntry {
	if x != nil {
		return x.Characters
	}
	return nil
}

type EnterWorld struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Tutorial      int32                  `protobuf:"varint,2,opt,name=tutorial,proto3" json:"tutorial,omitempty"`
	ReturnHome    int32                  `protobuf:"varint,3,opt,name=return_home,json=returnHome,proto3" json:"return_home,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnterWorld) Reset() {
	*x = EnterWorld{}
	mi := &file_EQMessage_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnterWorld) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnterWorld) ProtoMessage() {}

func (x *EnterWorld) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnterWorld.ProtoReflect.Descriptor instead.
func (*EnterWorld) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{13}
}

func (x *EnterWorld) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EnterWorld) GetTutorial() int32 {
	if x != nil {
		return x.Tutorial
	}
	return 0
}

func (x *EnterWorld) GetReturnHome() int32 {
	if x != nil {
		return x.ReturnHome
	}
	return 0
}

type InventorySlot struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          int32                  `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Slot          int32                  `protobuf:"varint,2,opt,name=slot,proto3" json:"slot,omitempty"`
	SubIndex      int32                  `protobuf:"varint,3,opt,name=sub_index,json=subIndex,proto3" json:"sub_index,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InventorySlot) Reset() {
	*x = InventorySlot{}
	mi := &file_EQMessage_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InventorySlot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InventorySlot) ProtoMessage() {}

func (x *InventorySlot) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InventorySlot.ProtoReflect.Descriptor instead.
func (*InventorySlot) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{14}
}

func (x *InventorySlot) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *InventorySlot) GetSlot() int32 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *InventorySlot) GetSubIndex() int32 {
	if x != nil {
		return x.SubIndex
	}
	return 0
}

type TypelessInventorySlot struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Slot          int32                  `protobuf:"varint,1,opt,name=slot,proto3" json:"slot,omitempty"`
	SubIndex      int32                  `protobuf:"varint,2,opt,name=sub_index,json=subIndex,proto3" json:"sub_index,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TypelessInventorySlot) Reset() {
	*x = TypelessInventorySlot{}
	mi := &file_EQMessage_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TypelessInventorySlot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypelessInventorySlot) ProtoMessage() {}

func (x *TypelessInventorySlot) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypelessInventorySlot.ProtoReflect.Descriptor instead.
func (*TypelessInventorySlot) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{15}
}

func (x *TypelessInventorySlot) GetSlot() int32 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *TypelessInventorySlot) GetSubIndex() int32 {
	if x != nil {
		return x.SubIndex
	}
	return 0
}

type NameApproval struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Race          int32                  `protobuf:"varint,2,opt,name=race,proto3" json:"race,omitempty"`
	CharClass     int32                  `protobuf:"varint,3,opt,name=char_class,json=charClass,proto3" json:"char_class,omitempty"`
	Deity         int32                  `protobuf:"varint,4,opt,name=deity,proto3" json:"deity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NameApproval) Reset() {
	*x = NameApproval{}
	mi := &file_EQMessage_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NameApproval) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NameApproval) ProtoMessage() {}

func (x *NameApproval) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NameApproval.ProtoReflect.Descriptor instead.
func (*NameApproval) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{16}
}

func (x *NameApproval) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NameApproval) GetRace() int32 {
	if x != nil {
		return x.Race
	}
	return 0
}

func (x *NameApproval) GetCharClass() int32 {
	if x != nil {
		return x.CharClass
	}
	return 0
}

func (x *NameApproval) GetDeity() int32 {
	if x != nil {
		return x.Deity
	}
	return 0
}

type EntityId struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EntityId      int32                  `protobuf:"varint,1,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EntityId) Reset() {
	*x = EntityId{}
	mi := &file_EQMessage_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EntityId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityId) ProtoMessage() {}

func (x *EntityId) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityId.ProtoReflect.Descriptor instead.
func (*EntityId) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{17}
}

func (x *EntityId) GetEntityId() int32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

type Duel struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DuelInitiator int32                  `protobuf:"varint,1,opt,name=duel_initiator,json=duelInitiator,proto3" json:"duel_initiator,omitempty"`
	DuelTarget    int32                  `protobuf:"varint,2,opt,name=duel_target,json=duelTarget,proto3" json:"duel_target,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Duel) Reset() {
	*x = Duel{}
	mi := &file_EQMessage_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Duel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Duel) ProtoMessage() {}

func (x *Duel) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Duel.ProtoReflect.Descriptor instead.
func (*Duel) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{18}
}

func (x *Duel) GetDuelInitiator() int32 {
	if x != nil {
		return x.DuelInitiator
	}
	return 0
}

func (x *Duel) GetDuelTarget() int32 {
	if x != nil {
		return x.DuelTarget
	}
	return 0
}

type DuelResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TargetId      int32                  `protobuf:"varint,1,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	EntityId      int32                  `protobuf:"varint,2,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DuelResponse) Reset() {
	*x = DuelResponse{}
	mi := &file_EQMessage_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DuelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DuelResponse) ProtoMessage() {}

func (x *DuelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DuelResponse.ProtoReflect.Descriptor instead.
func (*DuelResponse) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{19}
}

func (x *DuelResponse) GetTargetId() int32 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *DuelResponse) GetEntityId() int32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

type AdventureInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QuestId       int32                  `protobuf:"varint,1,opt,name=quest_id,json=questId,proto3" json:"quest_id,omitempty"`
	NpcId         int32                  `protobuf:"varint,2,opt,name=npc_id,json=npcId,proto3" json:"npc_id,omitempty"`
	InUse         bool                   `protobuf:"varint,3,opt,name=in_use,json=inUse,proto3" json:"in_use,omitempty"`
	Status        int32                  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	ShowCompass   bool                   `protobuf:"varint,5,opt,name=show_compass,json=showCompass,proto3" json:"show_compass,omitempty"`
	Objetive      int32                  `protobuf:"varint,6,opt,name=objetive,proto3" json:"objetive,omitempty"`
	ObjetiveValue int32                  `protobuf:"varint,7,opt,name=objetive_value,json=objetiveValue,proto3" json:"objetive_value,omitempty"`
	Text          string                 `protobuf:"bytes,8,opt,name=text,proto3" json:"text,omitempty"`
	Type          int32                  `protobuf:"varint,9,opt,name=type,proto3" json:"type,omitempty"`
	Minutes       int32                  `protobuf:"varint,10,opt,name=minutes,proto3" json:"minutes,omitempty"`
	Points        int32                  `protobuf:"varint,11,opt,name=points,proto3" json:"points,omitempty"`
	X             float32                `protobuf:"fixed32,12,opt,name=x,proto3" json:"x,omitempty"`
	Y             float32                `protobuf:"fixed32,13,opt,name=y,proto3" json:"y,omitempty"`
	Zoneid        int32                  `protobuf:"varint,14,opt,name=zoneid,proto3" json:"zoneid,omitempty"`
	Zonedungeonid int32                  `protobuf:"varint,15,opt,name=zonedungeonid,proto3" json:"zonedungeonid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AdventureInfo) Reset() {
	*x = AdventureInfo{}
	mi := &file_EQMessage_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdventureInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdventureInfo) ProtoMessage() {}

func (x *AdventureInfo) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdventureInfo.ProtoReflect.Descriptor instead.
func (*AdventureInfo) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{20}
}

func (x *AdventureInfo) GetQuestId() int32 {
	if x != nil {
		return x.QuestId
	}
	return 0
}

func (x *AdventureInfo) GetNpcId() int32 {
	if x != nil {
		return x.NpcId
	}
	return 0
}

func (x *AdventureInfo) GetInUse() bool {
	if x != nil {
		return x.InUse
	}
	return false
}

func (x *AdventureInfo) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AdventureInfo) GetShowCompass() bool {
	if x != nil {
		return x.ShowCompass
	}
	return false
}

func (x *AdventureInfo) GetObjetive() int32 {
	if x != nil {
		return x.Objetive
	}
	return 0
}

func (x *AdventureInfo) GetObjetiveValue() int32 {
	if x != nil {
		return x.ObjetiveValue
	}
	return 0
}

func (x *AdventureInfo) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *AdventureInfo) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *AdventureInfo) GetMinutes() int32 {
	if x != nil {
		return x.Minutes
	}
	return 0
}

func (x *AdventureInfo) GetPoints() int32 {
	if x != nil {
		return x.Points
	}
	return 0
}

func (x *AdventureInfo) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *AdventureInfo) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *AdventureInfo) GetZoneid() int32 {
	if x != nil {
		return x.Zoneid
	}
	return 0
}

func (x *AdventureInfo) GetZonedungeonid() int32 {
	if x != nil {
		return x.Zonedungeonid
	}
	return 0
}

type TextureProfile struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Head          int32                  `protobuf:"varint,1,opt,name=head,proto3" json:"head,omitempty"`
	Chest         int32                  `protobuf:"varint,2,opt,name=chest,proto3" json:"chest,omitempty"`
	Arms          int32                  `protobuf:"varint,3,opt,name=arms,proto3" json:"arms,omitempty"`
	Wrist         int32                  `protobuf:"varint,4,opt,name=wrist,proto3" json:"wrist,omitempty"`
	Hands         int32                  `protobuf:"varint,5,opt,name=hands,proto3" json:"hands,omitempty"`
	Legs          int32                  `protobuf:"varint,6,opt,name=legs,proto3" json:"legs,omitempty"`
	Feet          int32                  `protobuf:"varint,7,opt,name=feet,proto3" json:"feet,omitempty"`
	Primary       int32                  `protobuf:"varint,8,opt,name=primary,proto3" json:"primary,omitempty"`
	Secondary     int32                  `protobuf:"varint,9,opt,name=secondary,proto3" json:"secondary,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TextureProfile) Reset() {
	*x = TextureProfile{}
	mi := &file_EQMessage_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TextureProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextureProfile) ProtoMessage() {}

func (x *TextureProfile) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextureProfile.ProtoReflect.Descriptor instead.
func (*TextureProfile) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{21}
}

func (x *TextureProfile) GetHead() int32 {
	if x != nil {
		return x.Head
	}
	return 0
}

func (x *TextureProfile) GetChest() int32 {
	if x != nil {
		return x.Chest
	}
	return 0
}

func (x *TextureProfile) GetArms() int32 {
	if x != nil {
		return x.Arms
	}
	return 0
}

func (x *TextureProfile) GetWrist() int32 {
	if x != nil {
		return x.Wrist
	}
	return 0
}

func (x *TextureProfile) GetHands() int32 {
	if x != nil {
		return x.Hands
	}
	return 0
}

func (x *TextureProfile) GetLegs() int32 {
	if x != nil {
		return x.Legs
	}
	return 0
}

func (x *TextureProfile) GetFeet() int32 {
	if x != nil {
		return x.Feet
	}
	return 0
}

func (x *TextureProfile) GetPrimary() int32 {
	if x != nil {
		return x.Primary
	}
	return 0
}

func (x *TextureProfile) GetSecondary() int32 {
	if x != nil {
		return x.Secondary
	}
	return 0
}

type TintProfile struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Head          int32                  `protobuf:"varint,1,opt,name=head,proto3" json:"head,omitempty"`
	Chest         int32                  `protobuf:"varint,2,opt,name=chest,proto3" json:"chest,omitempty"`
	Arms          int32                  `protobuf:"varint,3,opt,name=arms,proto3" json:"arms,omitempty"`
	Wrist         int32                  `protobuf:"varint,4,opt,name=wrist,proto3" json:"wrist,omitempty"`
	Hands         int32                  `protobuf:"varint,5,opt,name=hands,proto3" json:"hands,omitempty"`
	Legs          int32                  `protobuf:"varint,6,opt,name=legs,proto3" json:"legs,omitempty"`
	Feet          int32                  `protobuf:"varint,7,opt,name=feet,proto3" json:"feet,omitempty"`
	Primary       int32                  `protobuf:"varint,8,opt,name=primary,proto3" json:"primary,omitempty"`
	Secondary     int32                  `protobuf:"varint,9,opt,name=secondary,proto3" json:"secondary,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TintProfile) Reset() {
	*x = TintProfile{}
	mi := &file_EQMessage_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TintProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TintProfile) ProtoMessage() {}

func (x *TintProfile) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TintProfile.ProtoReflect.Descriptor instead.
func (*TintProfile) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{22}
}

func (x *TintProfile) GetHead() int32 {
	if x != nil {
		return x.Head
	}
	return 0
}

func (x *TintProfile) GetChest() int32 {
	if x != nil {
		return x.Chest
	}
	return 0
}

func (x *TintProfile) GetArms() int32 {
	if x != nil {
		return x.Arms
	}
	return 0
}

func (x *TintProfile) GetWrist() int32 {
	if x != nil {
		return x.Wrist
	}
	return 0
}

func (x *TintProfile) GetHands() int32 {
	if x != nil {
		return x.Hands
	}
	return 0
}

func (x *TintProfile) GetLegs() int32 {
	if x != nil {
		return x.Legs
	}
	return 0
}

func (x *TintProfile) GetFeet() int32 {
	if x != nil {
		return x.Feet
	}
	return 0
}

func (x *TintProfile) GetPrimary() int32 {
	if x != nil {
		return x.Primary
	}
	return 0
}

func (x *TintProfile) GetSecondary() int32 {
	if x != nil {
		return x.Secondary
	}
	return 0
}

type Spawns struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpawnCount    int32                  `protobuf:"varint,1,opt,name=spawn_count,json=spawnCount,proto3" json:"spawn_count,omitempty"`
	Spawns        *Spawn                 `protobuf:"bytes,2,opt,name=spawns,proto3" json:"spawns,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Spawns) Reset() {
	*x = Spawns{}
	mi := &file_EQMessage_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Spawns) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Spawns) ProtoMessage() {}

func (x *Spawns) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Spawns.ProtoReflect.Descriptor instead.
func (*Spawns) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{23}
}

func (x *Spawns) GetSpawnCount() int32 {
	if x != nil {
		return x.SpawnCount
	}
	return 0
}

func (x *Spawns) GetSpawns() *Spawn {
	if x != nil {
		return x.Spawns
	}
	return nil
}

type Spawn struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Gm             int32                  `protobuf:"varint,1,opt,name=gm,proto3" json:"gm,omitempty"`
	Aaitle         int32                  `protobuf:"varint,2,opt,name=aaitle,proto3" json:"aaitle,omitempty"`
	Anon           int32                  `protobuf:"varint,3,opt,name=anon,proto3" json:"anon,omitempty"`
	Face           int32                  `protobuf:"varint,4,opt,name=face,proto3" json:"face,omitempty"`
	Name           string                 `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Deity          int32                  `protobuf:"varint,6,opt,name=deity,proto3" json:"deity,omitempty"`
	Size           float32                `protobuf:"fixed32,7,opt,name=size,proto3" json:"size,omitempty"`
	Npc            int32                  `protobuf:"varint,8,opt,name=npc,proto3" json:"npc,omitempty"`
	Invis          int32                  `protobuf:"varint,9,opt,name=invis,proto3" json:"invis,omitempty"`
	Haircolor      int32                  `protobuf:"varint,10,opt,name=haircolor,proto3" json:"haircolor,omitempty"`
	CurHp          int32                  `protobuf:"varint,11,opt,name=cur_hp,json=curHp,proto3" json:"cur_hp,omitempty"`
	MaxHp          int32                  `protobuf:"varint,12,opt,name=max_hp,json=maxHp,proto3" json:"max_hp,omitempty"`
	Findable       int32                  `protobuf:"varint,13,opt,name=findable,proto3" json:"findable,omitempty"`
	DeltaHeading   int32                  `protobuf:"varint,14,opt,name=delta_heading,json=deltaHeading,proto3" json:"delta_heading,omitempty"`
	X              int32                  `protobuf:"varint,15,opt,name=x,proto3" json:"x,omitempty"`
	Y              int32                  `protobuf:"varint,16,opt,name=y,proto3" json:"y,omitempty"`
	Animation      int32                  `protobuf:"varint,17,opt,name=animation,proto3" json:"animation,omitempty"`
	Z              int32                  `protobuf:"varint,18,opt,name=z,proto3" json:"z,omitempty"`
	DeltaY         int32                  `protobuf:"varint,19,opt,name=delta_y,json=deltaY,proto3" json:"delta_y,omitempty"`
	DeltaX         int32                  `protobuf:"varint,20,opt,name=delta_x,json=deltaX,proto3" json:"delta_x,omitempty"`
	Heading        int32                  `protobuf:"varint,21,opt,name=heading,proto3" json:"heading,omitempty"`
	DeltaZ         int32                  `protobuf:"varint,22,opt,name=delta_z,json=deltaZ,proto3" json:"delta_z,omitempty"`
	Eyecolor1      int32                  `protobuf:"varint,23,opt,name=eyecolor1,proto3" json:"eyecolor1,omitempty"`
	Showhelm       int32                  `protobuf:"varint,24,opt,name=showhelm,proto3" json:"showhelm,omitempty"`
	IsNpc          int32                  `protobuf:"varint,25,opt,name=is_npc,json=isNpc,proto3" json:"is_npc,omitempty"`
	Hairstyle      int32                  `protobuf:"varint,26,opt,name=hairstyle,proto3" json:"hairstyle,omitempty"`
	Beardcolor     int32                  `protobuf:"varint,27,opt,name=beardcolor,proto3" json:"beardcolor,omitempty"`
	Level          int32                  `protobuf:"varint,28,opt,name=level,proto3" json:"level,omitempty"`
	PlayerState    int32                  `protobuf:"varint,29,opt,name=player_state,json=playerState,proto3" json:"player_state,omitempty"`
	Beard          int32                  `protobuf:"varint,30,opt,name=beard,proto3" json:"beard,omitempty"`
	Suffix         string                 `protobuf:"bytes,31,opt,name=suffix,proto3" json:"suffix,omitempty"`
	PetOwnerId     int32                  `protobuf:"varint,32,opt,name=pet_owner_id,json=petOwnerId,proto3" json:"pet_owner_id,omitempty"`
	Guildrank      int32                  `protobuf:"varint,33,opt,name=guildrank,proto3" json:"guildrank,omitempty"`
	Equipment      *TextureProfile        `protobuf:"bytes,34,opt,name=equipment,proto3" json:"equipment,omitempty"`
	Runspeed       float32                `protobuf:"fixed32,35,opt,name=runspeed,proto3" json:"runspeed,omitempty"`
	Afk            int32                  `protobuf:"varint,36,opt,name=afk,proto3" json:"afk,omitempty"`
	GuildId        int32                  `protobuf:"varint,37,opt,name=guild_id,json=guildId,proto3" json:"guild_id,omitempty"`
	Title          string                 `protobuf:"bytes,38,opt,name=title,proto3" json:"title,omitempty"`
	Helm           int32                  `protobuf:"varint,39,opt,name=helm,proto3" json:"helm,omitempty"`
	Race           int32                  `protobuf:"varint,40,opt,name=race,proto3" json:"race,omitempty"`
	LastName       string                 `protobuf:"bytes,41,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Walkspeed      float32                `protobuf:"fixed32,42,opt,name=walkspeed,proto3" json:"walkspeed,omitempty"`
	IsPet          int32                  `protobuf:"varint,43,opt,name=is_pet,json=isPet,proto3" json:"is_pet,omitempty"`
	Light          int32                  `protobuf:"varint,44,opt,name=light,proto3" json:"light,omitempty"`
	CharClass      int32                  `protobuf:"varint,45,opt,name=char_class,json=charClass,proto3" json:"char_class,omitempty"`
	Eyecolor2      int32                  `protobuf:"varint,46,opt,name=eyecolor2,proto3" json:"eyecolor2,omitempty"`
	Flymode        int32                  `protobuf:"varint,47,opt,name=flymode,proto3" json:"flymode,omitempty"`
	Gender         int32                  `protobuf:"varint,48,opt,name=gender,proto3" json:"gender,omitempty"`
	Bodytype       int32                  `protobuf:"varint,49,opt,name=bodytype,proto3" json:"bodytype,omitempty"`
	EquipChest     int32                  `protobuf:"varint,50,opt,name=equip_chest,json=equipChest,proto3" json:"equip_chest,omitempty"`
	MountColor     int32                  `protobuf:"varint,51,opt,name=mount_color,json=mountColor,proto3" json:"mount_color,omitempty"`
	SpawnId        int32                  `protobuf:"varint,52,opt,name=spawn_id,json=spawnId,proto3" json:"spawn_id,omitempty"`
	BoundingRadius float32                `protobuf:"fixed32,53,opt,name=bounding_radius,json=boundingRadius,proto3" json:"bounding_radius,omitempty"`
	EquipmentTint  int32                  `protobuf:"varint,54,opt,name=equipment_tint,json=equipmentTint,proto3" json:"equipment_tint,omitempty"`
	Lfg            int32                  `protobuf:"varint,55,opt,name=lfg,proto3" json:"lfg,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Spawn) Reset() {
	*x = Spawn{}
	mi := &file_EQMessage_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Spawn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Spawn) ProtoMessage() {}

func (x *Spawn) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Spawn.ProtoReflect.Descriptor instead.
func (*Spawn) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{24}
}

func (x *Spawn) GetGm() int32 {
	if x != nil {
		return x.Gm
	}
	return 0
}

func (x *Spawn) GetAaitle() int32 {
	if x != nil {
		return x.Aaitle
	}
	return 0
}

func (x *Spawn) GetAnon() int32 {
	if x != nil {
		return x.Anon
	}
	return 0
}

func (x *Spawn) GetFace() int32 {
	if x != nil {
		return x.Face
	}
	return 0
}

func (x *Spawn) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Spawn) GetDeity() int32 {
	if x != nil {
		return x.Deity
	}
	return 0
}

func (x *Spawn) GetSize() float32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Spawn) GetNpc() int32 {
	if x != nil {
		return x.Npc
	}
	return 0
}

func (x *Spawn) GetInvis() int32 {
	if x != nil {
		return x.Invis
	}
	return 0
}

func (x *Spawn) GetHaircolor() int32 {
	if x != nil {
		return x.Haircolor
	}
	return 0
}

func (x *Spawn) GetCurHp() int32 {
	if x != nil {
		return x.CurHp
	}
	return 0
}

func (x *Spawn) GetMaxHp() int32 {
	if x != nil {
		return x.MaxHp
	}
	return 0
}

func (x *Spawn) GetFindable() int32 {
	if x != nil {
		return x.Findable
	}
	return 0
}

func (x *Spawn) GetDeltaHeading() int32 {
	if x != nil {
		return x.DeltaHeading
	}
	return 0
}

func (x *Spawn) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Spawn) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Spawn) GetAnimation() int32 {
	if x != nil {
		return x.Animation
	}
	return 0
}

func (x *Spawn) GetZ() int32 {
	if x != nil {
		return x.Z
	}
	return 0
}

func (x *Spawn) GetDeltaY() int32 {
	if x != nil {
		return x.DeltaY
	}
	return 0
}

func (x *Spawn) GetDeltaX() int32 {
	if x != nil {
		return x.DeltaX
	}
	return 0
}

func (x *Spawn) GetHeading() int32 {
	if x != nil {
		return x.Heading
	}
	return 0
}

func (x *Spawn) GetDeltaZ() int32 {
	if x != nil {
		return x.DeltaZ
	}
	return 0
}

func (x *Spawn) GetEyecolor1() int32 {
	if x != nil {
		return x.Eyecolor1
	}
	return 0
}

func (x *Spawn) GetShowhelm() int32 {
	if x != nil {
		return x.Showhelm
	}
	return 0
}

func (x *Spawn) GetIsNpc() int32 {
	if x != nil {
		return x.IsNpc
	}
	return 0
}

func (x *Spawn) GetHairstyle() int32 {
	if x != nil {
		return x.Hairstyle
	}
	return 0
}

func (x *Spawn) GetBeardcolor() int32 {
	if x != nil {
		return x.Beardcolor
	}
	return 0
}

func (x *Spawn) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *Spawn) GetPlayerState() int32 {
	if x != nil {
		return x.PlayerState
	}
	return 0
}

func (x *Spawn) GetBeard() int32 {
	if x != nil {
		return x.Beard
	}
	return 0
}

func (x *Spawn) GetSuffix() string {
	if x != nil {
		return x.Suffix
	}
	return ""
}

func (x *Spawn) GetPetOwnerId() int32 {
	if x != nil {
		return x.PetOwnerId
	}
	return 0
}

func (x *Spawn) GetGuildrank() int32 {
	if x != nil {
		return x.Guildrank
	}
	return 0
}

func (x *Spawn) GetEquipment() *TextureProfile {
	if x != nil {
		return x.Equipment
	}
	return nil
}

func (x *Spawn) GetRunspeed() float32 {
	if x != nil {
		return x.Runspeed
	}
	return 0
}

func (x *Spawn) GetAfk() int32 {
	if x != nil {
		return x.Afk
	}
	return 0
}

func (x *Spawn) GetGuildId() int32 {
	if x != nil {
		return x.GuildId
	}
	return 0
}

func (x *Spawn) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Spawn) GetHelm() int32 {
	if x != nil {
		return x.Helm
	}
	return 0
}

func (x *Spawn) GetRace() int32 {
	if x != nil {
		return x.Race
	}
	return 0
}

func (x *Spawn) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *Spawn) GetWalkspeed() float32 {
	if x != nil {
		return x.Walkspeed
	}
	return 0
}

func (x *Spawn) GetIsPet() int32 {
	if x != nil {
		return x.IsPet
	}
	return 0
}

func (x *Spawn) GetLight() int32 {
	if x != nil {
		return x.Light
	}
	return 0
}

func (x *Spawn) GetCharClass() int32 {
	if x != nil {
		return x.CharClass
	}
	return 0
}

func (x *Spawn) GetEyecolor2() int32 {
	if x != nil {
		return x.Eyecolor2
	}
	return 0
}

func (x *Spawn) GetFlymode() int32 {
	if x != nil {
		return x.Flymode
	}
	return 0
}

func (x *Spawn) GetGender() int32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *Spawn) GetBodytype() int32 {
	if x != nil {
		return x.Bodytype
	}
	return 0
}

func (x *Spawn) GetEquipChest() int32 {
	if x != nil {
		return x.EquipChest
	}
	return 0
}

func (x *Spawn) GetMountColor() int32 {
	if x != nil {
		return x.MountColor
	}
	return 0
}

func (x *Spawn) GetSpawnId() int32 {
	if x != nil {
		return x.SpawnId
	}
	return 0
}

func (x *Spawn) GetBoundingRadius() float32 {
	if x != nil {
		return x.BoundingRadius
	}
	return 0
}

func (x *Spawn) GetEquipmentTint() int32 {
	if x != nil {
		return x.EquipmentTint
	}
	return 0
}

func (x *Spawn) GetLfg() int32 {
	if x != nil {
		return x.Lfg
	}
	return 0
}

type NewSpawn struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Spawn         *Spawn                 `protobuf:"bytes,1,opt,name=spawn,proto3" json:"spawn,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NewSpawn) Reset() {
	*x = NewSpawn{}
	mi := &file_EQMessage_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewSpawn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewSpawn) ProtoMessage() {}

func (x *NewSpawn) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewSpawn.ProtoReflect.Descriptor instead.
func (*NewSpawn) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{25}
}

func (x *NewSpawn) GetSpawn() *Spawn {
	if x != nil {
		return x.Spawn
	}
	return nil
}

type ClientZoneEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CharName      string                 `protobuf:"bytes,1,opt,name=char_name,json=charName,proto3" json:"char_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientZoneEntry) Reset() {
	*x = ClientZoneEntry{}
	mi := &file_EQMessage_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientZoneEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientZoneEntry) ProtoMessage() {}

func (x *ClientZoneEntry) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientZoneEntry.ProtoReflect.Descriptor instead.
func (*ClientZoneEntry) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{26}
}

func (x *ClientZoneEntry) GetCharName() string {
	if x != nil {
		return x.CharName
	}
	return ""
}

type ServerZoneEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Player        *NewSpawn              `protobuf:"bytes,1,opt,name=player,proto3" json:"player,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerZoneEntry) Reset() {
	*x = ServerZoneEntry{}
	mi := &file_EQMessage_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerZoneEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerZoneEntry) ProtoMessage() {}

func (x *ServerZoneEntry) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerZoneEntry.ProtoReflect.Descriptor instead.
func (*ServerZoneEntry) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{27}
}

func (x *ServerZoneEntry) GetPlayer() *NewSpawn {
	if x != nil {
		return x.Player
	}
	return nil
}

type NewZone struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	CharName          string                 `protobuf:"bytes,1,opt,name=char_name,json=charName,proto3" json:"char_name,omitempty"`
	ZoneShortName     string                 `protobuf:"bytes,2,opt,name=zone_short_name,json=zoneShortName,proto3" json:"zone_short_name,omitempty"`
	ZoneLongName      string                 `protobuf:"bytes,3,opt,name=zone_long_name,json=zoneLongName,proto3" json:"zone_long_name,omitempty"`
	Ztype             int32                  `protobuf:"varint,4,opt,name=ztype,proto3" json:"ztype,omitempty"`
	FogRed            []int32                `protobuf:"varint,5,rep,packed,name=fog_red,json=fogRed,proto3" json:"fog_red,omitempty"`
	FogGreen          []int32                `protobuf:"varint,6,rep,packed,name=fog_green,json=fogGreen,proto3" json:"fog_green,omitempty"`
	FogBlue           []int32                `protobuf:"varint,7,rep,packed,name=fog_blue,json=fogBlue,proto3" json:"fog_blue,omitempty"`
	FogMinclip        []float32              `protobuf:"fixed32,8,rep,packed,name=fog_minclip,json=fogMinclip,proto3" json:"fog_minclip,omitempty"`
	FogMaxclip        []float32              `protobuf:"fixed32,9,rep,packed,name=fog_maxclip,json=fogMaxclip,proto3" json:"fog_maxclip,omitempty"`
	Gravity           float32                `protobuf:"fixed32,10,opt,name=gravity,proto3" json:"gravity,omitempty"`
	TimeType          int32                  `protobuf:"varint,11,opt,name=time_type,json=timeType,proto3" json:"time_type,omitempty"`
	RainChance        []int32                `protobuf:"varint,12,rep,packed,name=rain_chance,json=rainChance,proto3" json:"rain_chance,omitempty"`
	RainDuration      []int32                `protobuf:"varint,13,rep,packed,name=rain_duration,json=rainDuration,proto3" json:"rain_duration,omitempty"`
	SnowChance        []int32                `protobuf:"varint,14,rep,packed,name=snow_chance,json=snowChance,proto3" json:"snow_chance,omitempty"`
	SnowDuration      []int32                `protobuf:"varint,15,rep,packed,name=snow_duration,json=snowDuration,proto3" json:"snow_duration,omitempty"`
	Sky               int32                  `protobuf:"varint,16,opt,name=sky,proto3" json:"sky,omitempty"`
	ZoneExpMultiplier float32                `protobuf:"fixed32,17,opt,name=zone_exp_multiplier,json=zoneExpMultiplier,proto3" json:"zone_exp_multiplier,omitempty"`
	SafeY             float32                `protobuf:"fixed32,18,opt,name=safe_y,json=safeY,proto3" json:"safe_y,omitempty"`
	SafeX             float32                `protobuf:"fixed32,19,opt,name=safe_x,json=safeX,proto3" json:"safe_x,omitempty"`
	SafeZ             float32                `protobuf:"fixed32,20,opt,name=safe_z,json=safeZ,proto3" json:"safe_z,omitempty"`
	MaxZ              float32                `protobuf:"fixed32,21,opt,name=max_z,json=maxZ,proto3" json:"max_z,omitempty"`
	Underworld        float32                `protobuf:"fixed32,22,opt,name=underworld,proto3" json:"underworld,omitempty"`
	Minclip           float32                `protobuf:"fixed32,23,opt,name=minclip,proto3" json:"minclip,omitempty"`
	Maxclip           float32                `protobuf:"fixed32,24,opt,name=maxclip,proto3" json:"maxclip,omitempty"`
	ZoneShortName2    string                 `protobuf:"bytes,25,opt,name=zone_short_name2,json=zoneShortName2,proto3" json:"zone_short_name2,omitempty"`
	ZoneId            int32                  `protobuf:"varint,26,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	ZoneInstance      int32                  `protobuf:"varint,27,opt,name=zone_instance,json=zoneInstance,proto3" json:"zone_instance,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *NewZone) Reset() {
	*x = NewZone{}
	mi := &file_EQMessage_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewZone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewZone) ProtoMessage() {}

func (x *NewZone) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewZone.ProtoReflect.Descriptor instead.
func (*NewZone) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{28}
}

func (x *NewZone) GetCharName() string {
	if x != nil {
		return x.CharName
	}
	return ""
}

func (x *NewZone) GetZoneShortName() string {
	if x != nil {
		return x.ZoneShortName
	}
	return ""
}

func (x *NewZone) GetZoneLongName() string {
	if x != nil {
		return x.ZoneLongName
	}
	return ""
}

func (x *NewZone) GetZtype() int32 {
	if x != nil {
		return x.Ztype
	}
	return 0
}

func (x *NewZone) GetFogRed() []int32 {
	if x != nil {
		return x.FogRed
	}
	return nil
}

func (x *NewZone) GetFogGreen() []int32 {
	if x != nil {
		return x.FogGreen
	}
	return nil
}

func (x *NewZone) GetFogBlue() []int32 {
	if x != nil {
		return x.FogBlue
	}
	return nil
}

func (x *NewZone) GetFogMinclip() []float32 {
	if x != nil {
		return x.FogMinclip
	}
	return nil
}

func (x *NewZone) GetFogMaxclip() []float32 {
	if x != nil {
		return x.FogMaxclip
	}
	return nil
}

func (x *NewZone) GetGravity() float32 {
	if x != nil {
		return x.Gravity
	}
	return 0
}

func (x *NewZone) GetTimeType() int32 {
	if x != nil {
		return x.TimeType
	}
	return 0
}

func (x *NewZone) GetRainChance() []int32 {
	if x != nil {
		return x.RainChance
	}
	return nil
}

func (x *NewZone) GetRainDuration() []int32 {
	if x != nil {
		return x.RainDuration
	}
	return nil
}

func (x *NewZone) GetSnowChance() []int32 {
	if x != nil {
		return x.SnowChance
	}
	return nil
}

func (x *NewZone) GetSnowDuration() []int32 {
	if x != nil {
		return x.SnowDuration
	}
	return nil
}

func (x *NewZone) GetSky() int32 {
	if x != nil {
		return x.Sky
	}
	return 0
}

func (x *NewZone) GetZoneExpMultiplier() float32 {
	if x != nil {
		return x.ZoneExpMultiplier
	}
	return 0
}

func (x *NewZone) GetSafeY() float32 {
	if x != nil {
		return x.SafeY
	}
	return 0
}

func (x *NewZone) GetSafeX() float32 {
	if x != nil {
		return x.SafeX
	}
	return 0
}

func (x *NewZone) GetSafeZ() float32 {
	if x != nil {
		return x.SafeZ
	}
	return 0
}

func (x *NewZone) GetMaxZ() float32 {
	if x != nil {
		return x.MaxZ
	}
	return 0
}

func (x *NewZone) GetUnderworld() float32 {
	if x != nil {
		return x.Underworld
	}
	return 0
}

func (x *NewZone) GetMinclip() float32 {
	if x != nil {
		return x.Minclip
	}
	return 0
}

func (x *NewZone) GetMaxclip() float32 {
	if x != nil {
		return x.Maxclip
	}
	return 0
}

func (x *NewZone) GetZoneShortName2() string {
	if x != nil {
		return x.ZoneShortName2
	}
	return ""
}

func (x *NewZone) GetZoneId() int32 {
	if x != nil {
		return x.ZoneId
	}
	return 0
}

func (x *NewZone) GetZoneInstance() int32 {
	if x != nil {
		return x.ZoneInstance
	}
	return 0
}

type MemorizeSpell struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Slot          int32                  `protobuf:"varint,1,opt,name=slot,proto3" json:"slot,omitempty"`
	SpellId       int32                  `protobuf:"varint,2,opt,name=spell_id,json=spellId,proto3" json:"spell_id,omitempty"`
	Scribing      int32                  `protobuf:"varint,3,opt,name=scribing,proto3" json:"scribing,omitempty"`
	Reduction     int32                  `protobuf:"varint,4,opt,name=reduction,proto3" json:"reduction,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MemorizeSpell) Reset() {
	*x = MemorizeSpell{}
	mi := &file_EQMessage_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MemorizeSpell) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemorizeSpell) ProtoMessage() {}

func (x *MemorizeSpell) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemorizeSpell.ProtoReflect.Descriptor instead.
func (*MemorizeSpell) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{29}
}

func (x *MemorizeSpell) GetSlot() int32 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *MemorizeSpell) GetSpellId() int32 {
	if x != nil {
		return x.SpellId
	}
	return 0
}

func (x *MemorizeSpell) GetScribing() int32 {
	if x != nil {
		return x.Scribing
	}
	return 0
}

func (x *MemorizeSpell) GetReduction() int32 {
	if x != nil {
		return x.Reduction
	}
	return 0
}

type Charm struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OwnerId       int32                  `protobuf:"varint,1,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	PetId         int32                  `protobuf:"varint,2,opt,name=pet_id,json=petId,proto3" json:"pet_id,omitempty"`
	Command       int32                  `protobuf:"varint,3,opt,name=command,proto3" json:"command,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Charm) Reset() {
	*x = Charm{}
	mi := &file_EQMessage_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Charm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Charm) ProtoMessage() {}

func (x *Charm) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Charm.ProtoReflect.Descriptor instead.
func (*Charm) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{30}
}

func (x *Charm) GetOwnerId() int32 {
	if x != nil {
		return x.OwnerId
	}
	return 0
}

func (x *Charm) GetPetId() int32 {
	if x != nil {
		return x.PetId
	}
	return 0
}

func (x *Charm) GetCommand() int32 {
	if x != nil {
		return x.Command
	}
	return 0
}

type InterruptCast struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Spawnid       int32                  `protobuf:"varint,1,opt,name=spawnid,proto3" json:"spawnid,omitempty"`
	Messageid     int32                  `protobuf:"varint,2,opt,name=messageid,proto3" json:"messageid,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InterruptCast) Reset() {
	*x = InterruptCast{}
	mi := &file_EQMessage_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InterruptCast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InterruptCast) ProtoMessage() {}

func (x *InterruptCast) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InterruptCast.ProtoReflect.Descriptor instead.
func (*InterruptCast) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{31}
}

func (x *InterruptCast) GetSpawnid() int32 {
	if x != nil {
		return x.Spawnid
	}
	return 0
}

func (x *InterruptCast) GetMessageid() int32 {
	if x != nil {
		return x.Messageid
	}
	return 0
}

func (x *InterruptCast) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeleteSpell struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpellSlot     int32                  `protobuf:"varint,1,opt,name=spell_slot,json=spellSlot,proto3" json:"spell_slot,omitempty"`
	Success       int32                  `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSpell) Reset() {
	*x = DeleteSpell{}
	mi := &file_EQMessage_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSpell) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSpell) ProtoMessage() {}

func (x *DeleteSpell) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSpell.ProtoReflect.Descriptor instead.
func (*DeleteSpell) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{32}
}

func (x *DeleteSpell) GetSpellSlot() int32 {
	if x != nil {
		return x.SpellSlot
	}
	return 0
}

func (x *DeleteSpell) GetSuccess() int32 {
	if x != nil {
		return x.Success
	}
	return 0
}

type ManaChange struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NewMana       int32                  `protobuf:"varint,1,opt,name=new_mana,json=newMana,proto3" json:"new_mana,omitempty"`
	Stamina       int32                  `protobuf:"varint,2,opt,name=stamina,proto3" json:"stamina,omitempty"`
	SpellId       int32                  `protobuf:"varint,3,opt,name=spell_id,json=spellId,proto3" json:"spell_id,omitempty"`
	Keepcasting   int32                  `protobuf:"varint,4,opt,name=keepcasting,proto3" json:"keepcasting,omitempty"`
	Padding       []int32                `protobuf:"varint,5,rep,packed,name=padding,proto3" json:"padding,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ManaChange) Reset() {
	*x = ManaChange{}
	mi := &file_EQMessage_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ManaChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManaChange) ProtoMessage() {}

func (x *ManaChange) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManaChange.ProtoReflect.Descriptor instead.
func (*ManaChange) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{33}
}

func (x *ManaChange) GetNewMana() int32 {
	if x != nil {
		return x.NewMana
	}
	return 0
}

func (x *ManaChange) GetStamina() int32 {
	if x != nil {
		return x.Stamina
	}
	return 0
}

func (x *ManaChange) GetSpellId() int32 {
	if x != nil {
		return x.SpellId
	}
	return 0
}

func (x *ManaChange) GetKeepcasting() int32 {
	if x != nil {
		return x.Keepcasting
	}
	return 0
}

func (x *ManaChange) GetPadding() []int32 {
	if x != nil {
		return x.Padding
	}
	return nil
}

type SwapSpell struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FromSlot      int32                  `protobuf:"varint,1,opt,name=from_slot,json=fromSlot,proto3" json:"from_slot,omitempty"`
	ToSlot        int32                  `protobuf:"varint,2,opt,name=to_slot,json=toSlot,proto3" json:"to_slot,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SwapSpell) Reset() {
	*x = SwapSpell{}
	mi := &file_EQMessage_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SwapSpell) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwapSpell) ProtoMessage() {}

func (x *SwapSpell) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwapSpell.ProtoReflect.Descriptor instead.
func (*SwapSpell) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{34}
}

func (x *SwapSpell) GetFromSlot() int32 {
	if x != nil {
		return x.FromSlot
	}
	return 0
}

func (x *SwapSpell) GetToSlot() int32 {
	if x != nil {
		return x.ToSlot
	}
	return 0
}

type BeginCast struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CasterId      int32                  `protobuf:"varint,1,opt,name=caster_id,json=casterId,proto3" json:"caster_id,omitempty"`
	SpellId       int32                  `protobuf:"varint,2,opt,name=spell_id,json=spellId,proto3" json:"spell_id,omitempty"`
	CastTime      int32                  `protobuf:"varint,3,opt,name=cast_time,json=castTime,proto3" json:"cast_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BeginCast) Reset() {
	*x = BeginCast{}
	mi := &file_EQMessage_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BeginCast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeginCast) ProtoMessage() {}

func (x *BeginCast) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeginCast.ProtoReflect.Descriptor instead.
func (*BeginCast) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{35}
}

func (x *BeginCast) GetCasterId() int32 {
	if x != nil {
		return x.CasterId
	}
	return 0
}

func (x *BeginCast) GetSpellId() int32 {
	if x != nil {
		return x.SpellId
	}
	return 0
}

func (x *BeginCast) GetCastTime() int32 {
	if x != nil {
		return x.CastTime
	}
	return 0
}

type CastSpell struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Slot          int32                  `protobuf:"varint,1,opt,name=slot,proto3" json:"slot,omitempty"`
	SpellId       int32                  `protobuf:"varint,2,opt,name=spell_id,json=spellId,proto3" json:"spell_id,omitempty"`
	Inventoryslot int32                  `protobuf:"varint,3,opt,name=inventoryslot,proto3" json:"inventoryslot,omitempty"`
	TargetId      int32                  `protobuf:"varint,4,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CastSpell) Reset() {
	*x = CastSpell{}
	mi := &file_EQMessage_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CastSpell) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CastSpell) ProtoMessage() {}

func (x *CastSpell) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CastSpell.ProtoReflect.Descriptor instead.
func (*CastSpell) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{36}
}

func (x *CastSpell) GetSlot() int32 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *CastSpell) GetSpellId() int32 {
	if x != nil {
		return x.SpellId
	}
	return 0
}

func (x *CastSpell) GetInventoryslot() int32 {
	if x != nil {
		return x.Inventoryslot
	}
	return 0
}

func (x *CastSpell) GetTargetId() int32 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

type SpawnAppearance struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpawnId       int32                  `protobuf:"varint,1,opt,name=spawn_id,json=spawnId,proto3" json:"spawn_id,omitempty"`
	Type          int32                  `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	Parameter     int32                  `protobuf:"varint,3,opt,name=parameter,proto3" json:"parameter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpawnAppearance) Reset() {
	*x = SpawnAppearance{}
	mi := &file_EQMessage_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpawnAppearance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpawnAppearance) ProtoMessage() {}

func (x *SpawnAppearance) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpawnAppearance.ProtoReflect.Descriptor instead.
func (*SpawnAppearance) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{37}
}

func (x *SpawnAppearance) GetSpawnId() int32 {
	if x != nil {
		return x.SpawnId
	}
	return 0
}

func (x *SpawnAppearance) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *SpawnAppearance) GetParameter() int32 {
	if x != nil {
		return x.Parameter
	}
	return 0
}

type SpellBuff struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EffectType    int32                  `protobuf:"varint,1,opt,name=effect_type,json=effectType,proto3" json:"effect_type,omitempty"`
	Level         int32                  `protobuf:"varint,2,opt,name=level,proto3" json:"level,omitempty"`
	BardModifier  int32                  `protobuf:"varint,3,opt,name=bard_modifier,json=bardModifier,proto3" json:"bard_modifier,omitempty"`
	Spellid       int32                  `protobuf:"varint,4,opt,name=spellid,proto3" json:"spellid,omitempty"`
	Duration      int32                  `protobuf:"varint,5,opt,name=duration,proto3" json:"duration,omitempty"`
	Counters      int32                  `protobuf:"varint,6,opt,name=counters,proto3" json:"counters,omitempty"`
	PlayerId      int32                  `protobuf:"varint,7,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpellBuff) Reset() {
	*x = SpellBuff{}
	mi := &file_EQMessage_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpellBuff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpellBuff) ProtoMessage() {}

func (x *SpellBuff) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpellBuff.ProtoReflect.Descriptor instead.
func (*SpellBuff) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{38}
}

func (x *SpellBuff) GetEffectType() int32 {
	if x != nil {
		return x.EffectType
	}
	return 0
}

func (x *SpellBuff) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *SpellBuff) GetBardModifier() int32 {
	if x != nil {
		return x.BardModifier
	}
	return 0
}

func (x *SpellBuff) GetSpellid() int32 {
	if x != nil {
		return x.Spellid
	}
	return 0
}

func (x *SpellBuff) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *SpellBuff) GetCounters() int32 {
	if x != nil {
		return x.Counters
	}
	return 0
}

func (x *SpellBuff) GetPlayerId() int32 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

type SpellBuffPacket struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Entityid      int32                  `protobuf:"varint,1,opt,name=entityid,proto3" json:"entityid,omitempty"`
	Buff          *SpellBuff             `protobuf:"bytes,2,opt,name=buff,proto3" json:"buff,omitempty"`
	Slotid        int32                  `protobuf:"varint,3,opt,name=slotid,proto3" json:"slotid,omitempty"`
	Bufffade      int32                  `protobuf:"varint,4,opt,name=bufffade,proto3" json:"bufffade,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpellBuffPacket) Reset() {
	*x = SpellBuffPacket{}
	mi := &file_EQMessage_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpellBuffPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpellBuffPacket) ProtoMessage() {}

func (x *SpellBuffPacket) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpellBuffPacket.ProtoReflect.Descriptor instead.
func (*SpellBuffPacket) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{39}
}

func (x *SpellBuffPacket) GetEntityid() int32 {
	if x != nil {
		return x.Entityid
	}
	return 0
}

func (x *SpellBuffPacket) GetBuff() *SpellBuff {
	if x != nil {
		return x.Buff
	}
	return nil
}

func (x *SpellBuffPacket) GetSlotid() int32 {
	if x != nil {
		return x.Slotid
	}
	return 0
}

func (x *SpellBuffPacket) GetBufffade() int32 {
	if x != nil {
		return x.Bufffade
	}
	return 0
}

type ItemNamePacket struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ItemId        int32                  `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	Unkown        int32                  `protobuf:"varint,2,opt,name=unkown,proto3" json:"unkown,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ItemNamePacket) Reset() {
	*x = ItemNamePacket{}
	mi := &file_EQMessage_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ItemNamePacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemNamePacket) ProtoMessage() {}

func (x *ItemNamePacket) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemNamePacket.ProtoReflect.Descriptor instead.
func (*ItemNamePacket) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{40}
}

func (x *ItemNamePacket) GetItemId() int32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *ItemNamePacket) GetUnkown() int32 {
	if x != nil {
		return x.Unkown
	}
	return 0
}

func (x *ItemNamePacket) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ItemProperties struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Charges       int32                  `protobuf:"varint,1,opt,name=charges,proto3" json:"charges,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ItemProperties) Reset() {
	*x = ItemProperties{}
	mi := &file_EQMessage_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ItemProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemProperties) ProtoMessage() {}

func (x *ItemProperties) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemProperties.ProtoReflect.Descriptor instead.
func (*ItemProperties) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{41}
}

func (x *ItemProperties) GetCharges() int32 {
	if x != nil {
		return x.Charges
	}
	return 0
}

type GMTrainee struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Npcid         int32                  `protobuf:"varint,1,opt,name=npcid,proto3" json:"npcid,omitempty"`
	Playerid      int32                  `protobuf:"varint,2,opt,name=playerid,proto3" json:"playerid,omitempty"`
	Skills        []int32                `protobuf:"varint,3,rep,packed,name=skills,proto3" json:"skills,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GMTrainee) Reset() {
	*x = GMTrainee{}
	mi := &file_EQMessage_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GMTrainee) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GMTrainee) ProtoMessage() {}

func (x *GMTrainee) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GMTrainee.ProtoReflect.Descriptor instead.
func (*GMTrainee) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{42}
}

func (x *GMTrainee) GetNpcid() int32 {
	if x != nil {
		return x.Npcid
	}
	return 0
}

func (x *GMTrainee) GetPlayerid() int32 {
	if x != nil {
		return x.Playerid
	}
	return 0
}

func (x *GMTrainee) GetSkills() []int32 {
	if x != nil {
		return x.Skills
	}
	return nil
}

type GMTrainEnd struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Npcid         int32                  `protobuf:"varint,1,opt,name=npcid,proto3" json:"npcid,omitempty"`
	Playerid      int32                  `protobuf:"varint,2,opt,name=playerid,proto3" json:"playerid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GMTrainEnd) Reset() {
	*x = GMTrainEnd{}
	mi := &file_EQMessage_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GMTrainEnd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GMTrainEnd) ProtoMessage() {}

func (x *GMTrainEnd) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GMTrainEnd.ProtoReflect.Descriptor instead.
func (*GMTrainEnd) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{43}
}

func (x *GMTrainEnd) GetNpcid() int32 {
	if x != nil {
		return x.Npcid
	}
	return 0
}

func (x *GMTrainEnd) GetPlayerid() int32 {
	if x != nil {
		return x.Playerid
	}
	return 0
}

type GMSkillChange struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Npcid         int32                  `protobuf:"varint,1,opt,name=npcid,proto3" json:"npcid,omitempty"`
	Skillbank     int32                  `protobuf:"varint,2,opt,name=skillbank,proto3" json:"skillbank,omitempty"`
	SkillId       int32                  `protobuf:"varint,3,opt,name=skill_id,json=skillId,proto3" json:"skill_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GMSkillChange) Reset() {
	*x = GMSkillChange{}
	mi := &file_EQMessage_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GMSkillChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GMSkillChange) ProtoMessage() {}

func (x *GMSkillChange) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GMSkillChange.ProtoReflect.Descriptor instead.
func (*GMSkillChange) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{44}
}

func (x *GMSkillChange) GetNpcid() int32 {
	if x != nil {
		return x.Npcid
	}
	return 0
}

func (x *GMSkillChange) GetSkillbank() int32 {
	if x != nil {
		return x.Skillbank
	}
	return 0
}

func (x *GMSkillChange) GetSkillId() int32 {
	if x != nil {
		return x.SkillId
	}
	return 0
}

type ConsentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Grantname     string                 `protobuf:"bytes,1,opt,name=grantname,proto3" json:"grantname,omitempty"`
	Ownername     string                 `protobuf:"bytes,2,opt,name=ownername,proto3" json:"ownername,omitempty"`
	Permission    int32                  `protobuf:"varint,3,opt,name=permission,proto3" json:"permission,omitempty"`
	Zonename      string                 `protobuf:"bytes,4,opt,name=zonename,proto3" json:"zonename,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConsentResponse) Reset() {
	*x = ConsentResponse{}
	mi := &file_EQMessage_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConsentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsentResponse) ProtoMessage() {}

func (x *ConsentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsentResponse.ProtoReflect.Descriptor instead.
func (*ConsentResponse) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{45}
}

func (x *ConsentResponse) GetGrantname() string {
	if x != nil {
		return x.Grantname
	}
	return ""
}

func (x *ConsentResponse) GetOwnername() string {
	if x != nil {
		return x.Ownername
	}
	return ""
}

func (x *ConsentResponse) GetPermission() int32 {
	if x != nil {
		return x.Permission
	}
	return 0
}

func (x *ConsentResponse) GetZonename() string {
	if x != nil {
		return x.Zonename
	}
	return ""
}

type NameGeneration struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Race          int32                  `protobuf:"varint,1,opt,name=race,proto3" json:"race,omitempty"`
	Gender        int32                  `protobuf:"varint,2,opt,name=gender,proto3" json:"gender,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NameGeneration) Reset() {
	*x = NameGeneration{}
	mi := &file_EQMessage_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NameGeneration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NameGeneration) ProtoMessage() {}

func (x *NameGeneration) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NameGeneration.ProtoReflect.Descriptor instead.
func (*NameGeneration) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{46}
}

func (x *NameGeneration) GetRace() int32 {
	if x != nil {
		return x.Race
	}
	return 0
}

func (x *NameGeneration) GetGender() int32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *NameGeneration) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type NameApprove struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Race          int32                  `protobuf:"varint,2,opt,name=race,proto3" json:"race,omitempty"`
	Gender        int32                  `protobuf:"varint,3,opt,name=gender,proto3" json:"gender,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NameApprove) Reset() {
	*x = NameApprove{}
	mi := &file_EQMessage_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NameApprove) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NameApprove) ProtoMessage() {}

func (x *NameApprove) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NameApprove.ProtoReflect.Descriptor instead.
func (*NameApprove) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{47}
}

func (x *NameApprove) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NameApprove) GetRace() int32 {
	if x != nil {
		return x.Race
	}
	return 0
}

func (x *NameApprove) GetGender() int32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

type CharCreate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CharClass     int32                  `protobuf:"varint,1,opt,name=char_class,json=charClass,proto3" json:"char_class,omitempty"`
	Haircolor     int32                  `protobuf:"varint,2,opt,name=haircolor,proto3" json:"haircolor,omitempty"`
	Beardcolor    int32                  `protobuf:"varint,3,opt,name=beardcolor,proto3" json:"beardcolor,omitempty"`
	Beard         int32                  `protobuf:"varint,4,opt,name=beard,proto3" json:"beard,omitempty"`
	Gender        int32                  `protobuf:"varint,5,opt,name=gender,proto3" json:"gender,omitempty"`
	Race          int32                  `protobuf:"varint,6,opt,name=race,proto3" json:"race,omitempty"`
	StartZone     int32                  `protobuf:"varint,7,opt,name=start_zone,json=startZone,proto3" json:"start_zone,omitempty"`
	Hairstyle     int32                  `protobuf:"varint,8,opt,name=hairstyle,proto3" json:"hairstyle,omitempty"`
	Deity         int32                  `protobuf:"varint,9,opt,name=deity,proto3" json:"deity,omitempty"`
	Str           int32                  `protobuf:"varint,10,opt,name=str,proto3" json:"str,omitempty"`
	Sta           int32                  `protobuf:"varint,11,opt,name=sta,proto3" json:"sta,omitempty"`
	Agi           int32                  `protobuf:"varint,12,opt,name=agi,proto3" json:"agi,omitempty"`
	Dex           int32                  `protobuf:"varint,13,opt,name=dex,proto3" json:"dex,omitempty"`
	Wis           int32                  `protobuf:"varint,14,opt,name=wis,proto3" json:"wis,omitempty"`
	Intel         int32                  `protobuf:"varint,15,opt,name=intel,proto3" json:"intel,omitempty"`
	Cha           int32                  `protobuf:"varint,16,opt,name=cha,proto3" json:"cha,omitempty"`
	Face          int32                  `protobuf:"varint,17,opt,name=face,proto3" json:"face,omitempty"`
	Eyecolor1     int32                  `protobuf:"varint,18,opt,name=eyecolor1,proto3" json:"eyecolor1,omitempty"`
	Eyecolor2     int32                  `protobuf:"varint,19,opt,name=eyecolor2,proto3" json:"eyecolor2,omitempty"`
	Tutorial      int32                  `protobuf:"varint,20,opt,name=tutorial,proto3" json:"tutorial,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CharCreate) Reset() {
	*x = CharCreate{}
	mi := &file_EQMessage_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CharCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharCreate) ProtoMessage() {}

func (x *CharCreate) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharCreate.ProtoReflect.Descriptor instead.
func (*CharCreate) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{48}
}

func (x *CharCreate) GetCharClass() int32 {
	if x != nil {
		return x.CharClass
	}
	return 0
}

func (x *CharCreate) GetHaircolor() int32 {
	if x != nil {
		return x.Haircolor
	}
	return 0
}

func (x *CharCreate) GetBeardcolor() int32 {
	if x != nil {
		return x.Beardcolor
	}
	return 0
}

func (x *CharCreate) GetBeard() int32 {
	if x != nil {
		return x.Beard
	}
	return 0
}

func (x *CharCreate) GetGender() int32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *CharCreate) GetRace() int32 {
	if x != nil {
		return x.Race
	}
	return 0
}

func (x *CharCreate) GetStartZone() int32 {
	if x != nil {
		return x.StartZone
	}
	return 0
}

func (x *CharCreate) GetHairstyle() int32 {
	if x != nil {
		return x.Hairstyle
	}
	return 0
}

func (x *CharCreate) GetDeity() int32 {
	if x != nil {
		return x.Deity
	}
	return 0
}

func (x *CharCreate) GetStr() int32 {
	if x != nil {
		return x.Str
	}
	return 0
}

func (x *CharCreate) GetSta() int32 {
	if x != nil {
		return x.Sta
	}
	return 0
}

func (x *CharCreate) GetAgi() int32 {
	if x != nil {
		return x.Agi
	}
	return 0
}

func (x *CharCreate) GetDex() int32 {
	if x != nil {
		return x.Dex
	}
	return 0
}

func (x *CharCreate) GetWis() int32 {
	if x != nil {
		return x.Wis
	}
	return 0
}

func (x *CharCreate) GetIntel() int32 {
	if x != nil {
		return x.Intel
	}
	return 0
}

func (x *CharCreate) GetCha() int32 {
	if x != nil {
		return x.Cha
	}
	return 0
}

func (x *CharCreate) GetFace() int32 {
	if x != nil {
		return x.Face
	}
	return 0
}

func (x *CharCreate) GetEyecolor1() int32 {
	if x != nil {
		return x.Eyecolor1
	}
	return 0
}

func (x *CharCreate) GetEyecolor2() int32 {
	if x != nil {
		return x.Eyecolor2
	}
	return 0
}

func (x *CharCreate) GetTutorial() int32 {
	if x != nil {
		return x.Tutorial
	}
	return 0
}

type AA_Array struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Aa            int32                  `protobuf:"varint,1,opt,name=aa,proto3" json:"aa,omitempty"`
	Value         int32                  `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AA_Array) Reset() {
	*x = AA_Array{}
	mi := &file_EQMessage_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AA_Array) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AA_Array) ProtoMessage() {}

func (x *AA_Array) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AA_Array.ProtoReflect.Descriptor instead.
func (*AA_Array) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{49}
}

func (x *AA_Array) GetAa() int32 {
	if x != nil {
		return x.Aa
	}
	return 0
}

func (x *AA_Array) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type Disciplines struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Values        []int32                `protobuf:"varint,1,rep,packed,name=values,proto3" json:"values,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Disciplines) Reset() {
	*x = Disciplines{}
	mi := &file_EQMessage_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Disciplines) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Disciplines) ProtoMessage() {}

func (x *Disciplines) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Disciplines.ProtoReflect.Descriptor instead.
func (*Disciplines) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{50}
}

func (x *Disciplines) GetValues() []int32 {
	if x != nil {
		return x.Values
	}
	return nil
}

type Tribute struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tribute       int32                  `protobuf:"varint,1,opt,name=tribute,proto3" json:"tribute,omitempty"`
	Tier          int32                  `protobuf:"varint,2,opt,name=tier,proto3" json:"tier,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Tribute) Reset() {
	*x = Tribute{}
	mi := &file_EQMessage_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tribute) ProtoMessage() {}

func (x *Tribute) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tribute.ProtoReflect.Descriptor instead.
func (*Tribute) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{51}
}

func (x *Tribute) GetTribute() int32 {
	if x != nil {
		return x.Tribute
	}
	return 0
}

func (x *Tribute) GetTier() int32 {
	if x != nil {
		return x.Tier
	}
	return 0
}

type BandolierItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Icon          int32                  `protobuf:"varint,2,opt,name=icon,proto3" json:"icon,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BandolierItem) Reset() {
	*x = BandolierItem{}
	mi := &file_EQMessage_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BandolierItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BandolierItem) ProtoMessage() {}

func (x *BandolierItem) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BandolierItem.ProtoReflect.Descriptor instead.
func (*BandolierItem) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{52}
}

func (x *BandolierItem) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BandolierItem) GetIcon() int32 {
	if x != nil {
		return x.Icon
	}
	return 0
}

func (x *BandolierItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Bandolier struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Items         []*BandolierItem       `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Bandolier) Reset() {
	*x = Bandolier{}
	mi := &file_EQMessage_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Bandolier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bandolier) ProtoMessage() {}

func (x *Bandolier) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bandolier.ProtoReflect.Descriptor instead.
func (*Bandolier) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{53}
}

func (x *Bandolier) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Bandolier) GetItems() []*BandolierItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type PotionBeltItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Icon          int32                  `protobuf:"varint,2,opt,name=icon,proto3" json:"icon,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PotionBeltItem) Reset() {
	*x = PotionBeltItem{}
	mi := &file_EQMessage_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PotionBeltItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PotionBeltItem) ProtoMessage() {}

func (x *PotionBeltItem) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PotionBeltItem.ProtoReflect.Descriptor instead.
func (*PotionBeltItem) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{54}
}

func (x *PotionBeltItem) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PotionBeltItem) GetIcon() int32 {
	if x != nil {
		return x.Icon
	}
	return 0
}

func (x *PotionBeltItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type PotionBelt struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*PotionBeltItem      `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PotionBelt) Reset() {
	*x = PotionBelt{}
	mi := &file_EQMessage_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PotionBelt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PotionBelt) ProtoMessage() {}

func (x *PotionBelt) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PotionBelt.ProtoReflect.Descriptor instead.
func (*PotionBelt) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{55}
}

func (x *PotionBelt) GetItems() []*PotionBeltItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type StringList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Str           string                 `protobuf:"bytes,1,opt,name=str,proto3" json:"str,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringList) Reset() {
	*x = StringList{}
	mi := &file_EQMessage_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringList) ProtoMessage() {}

func (x *StringList) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringList.ProtoReflect.Descriptor instead.
func (*StringList) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{56}
}

func (x *StringList) GetStr() string {
	if x != nil {
		return x.Str
	}
	return ""
}

type GroupLeadershipAA struct {
	state                        protoimpl.MessageState `protogen:"open.v1"`
	GroupAaMarkNpc               int32                  `protobuf:"varint,1,opt,name=group_aa_mark_npc,json=groupAaMarkNpc,proto3" json:"group_aa_mark_npc,omitempty"`
	GroupAanpcHealth             int32                  `protobuf:"varint,2,opt,name=group_aanpc_health,json=groupAanpcHealth,proto3" json:"group_aanpc_health,omitempty"`
	GroupAaDelegateMainAssist    int32                  `protobuf:"varint,3,opt,name=group_aa_delegate_main_assist,json=groupAaDelegateMainAssist,proto3" json:"group_aa_delegate_main_assist,omitempty"`
	GroupAaDelegateMarkNpc       int32                  `protobuf:"varint,4,opt,name=group_aa_delegate_mark_npc,json=groupAaDelegateMarkNpc,proto3" json:"group_aa_delegate_mark_npc,omitempty"`
	GroupAa4                     int32                  `protobuf:"varint,5,opt,name=group_aa4,json=groupAa4,proto3" json:"group_aa4,omitempty"`
	GroupAa5                     int32                  `protobuf:"varint,6,opt,name=group_aa5,json=groupAa5,proto3" json:"group_aa5,omitempty"`
	GroupAaInspectBuffs          int32                  `protobuf:"varint,7,opt,name=group_aa_inspect_buffs,json=groupAaInspectBuffs,proto3" json:"group_aa_inspect_buffs,omitempty"`
	GroupAa7                     int32                  `protobuf:"varint,8,opt,name=group_aa7,json=groupAa7,proto3" json:"group_aa7,omitempty"`
	GroupAaSpellAwareness        int32                  `protobuf:"varint,9,opt,name=group_aa_spell_awareness,json=groupAaSpellAwareness,proto3" json:"group_aa_spell_awareness,omitempty"`
	GroupAaOffenseEnhancement    int32                  `protobuf:"varint,10,opt,name=group_aa_offense_enhancement,json=groupAaOffenseEnhancement,proto3" json:"group_aa_offense_enhancement,omitempty"`
	GroupAaManaEnhancement       int32                  `protobuf:"varint,11,opt,name=group_aa_mana_enhancement,json=groupAaManaEnhancement,proto3" json:"group_aa_mana_enhancement,omitempty"`
	GroupAaHealthEnhancement     int32                  `protobuf:"varint,12,opt,name=group_aa_health_enhancement,json=groupAaHealthEnhancement,proto3" json:"group_aa_health_enhancement,omitempty"`
	GroupAaHealthRegeneration    int32                  `protobuf:"varint,13,opt,name=group_aa_health_regeneration,json=groupAaHealthRegeneration,proto3" json:"group_aa_health_regeneration,omitempty"`
	GroupAaFindPathToPc          int32                  `protobuf:"varint,14,opt,name=group_aa_find_path_to_pc,json=groupAaFindPathToPc,proto3" json:"group_aa_find_path_to_pc,omitempty"`
	GroupAaHealthOfTargetsTarget int32                  `protobuf:"varint,15,opt,name=group_aa_health_of_targets_target,json=groupAaHealthOfTargetsTarget,proto3" json:"group_aa_health_of_targets_target,omitempty"`
	GroupAa15                    int32                  `protobuf:"varint,16,opt,name=group_aa15,json=groupAa15,proto3" json:"group_aa15,omitempty"`
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *GroupLeadershipAA) Reset() {
	*x = GroupLeadershipAA{}
	mi := &file_EQMessage_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroupLeadershipAA) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupLeadershipAA) ProtoMessage() {}

func (x *GroupLeadershipAA) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupLeadershipAA.ProtoReflect.Descriptor instead.
func (*GroupLeadershipAA) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{57}
}

func (x *GroupLeadershipAA) GetGroupAaMarkNpc() int32 {
	if x != nil {
		return x.GroupAaMarkNpc
	}
	return 0
}

func (x *GroupLeadershipAA) GetGroupAanpcHealth() int32 {
	if x != nil {
		return x.GroupAanpcHealth
	}
	return 0
}

func (x *GroupLeadershipAA) GetGroupAaDelegateMainAssist() int32 {
	if x != nil {
		return x.GroupAaDelegateMainAssist
	}
	return 0
}

func (x *GroupLeadershipAA) GetGroupAaDelegateMarkNpc() int32 {
	if x != nil {
		return x.GroupAaDelegateMarkNpc
	}
	return 0
}

func (x *GroupLeadershipAA) GetGroupAa4() int32 {
	if x != nil {
		return x.GroupAa4
	}
	return 0
}

func (x *GroupLeadershipAA) GetGroupAa5() int32 {
	if x != nil {
		return x.GroupAa5
	}
	return 0
}

func (x *GroupLeadershipAA) GetGroupAaInspectBuffs() int32 {
	if x != nil {
		return x.GroupAaInspectBuffs
	}
	return 0
}

func (x *GroupLeadershipAA) GetGroupAa7() int32 {
	if x != nil {
		return x.GroupAa7
	}
	return 0
}

func (x *GroupLeadershipAA) GetGroupAaSpellAwareness() int32 {
	if x != nil {
		return x.GroupAaSpellAwareness
	}
	return 0
}

func (x *GroupLeadershipAA) GetGroupAaOffenseEnhancement() int32 {
	if x != nil {
		return x.GroupAaOffenseEnhancement
	}
	return 0
}

func (x *GroupLeadershipAA) GetGroupAaManaEnhancement() int32 {
	if x != nil {
		return x.GroupAaManaEnhancement
	}
	return 0
}

func (x *GroupLeadershipAA) GetGroupAaHealthEnhancement() int32 {
	if x != nil {
		return x.GroupAaHealthEnhancement
	}
	return 0
}

func (x *GroupLeadershipAA) GetGroupAaHealthRegeneration() int32 {
	if x != nil {
		return x.GroupAaHealthRegeneration
	}
	return 0
}

func (x *GroupLeadershipAA) GetGroupAaFindPathToPc() int32 {
	if x != nil {
		return x.GroupAaFindPathToPc
	}
	return 0
}

func (x *GroupLeadershipAA) GetGroupAaHealthOfTargetsTarget() int32 {
	if x != nil {
		return x.GroupAaHealthOfTargetsTarget
	}
	return 0
}

func (x *GroupLeadershipAA) GetGroupAa15() int32 {
	if x != nil {
		return x.GroupAa15
	}
	return 0
}

type RaidLeadershipAA struct {
	state                       protoimpl.MessageState `protogen:"open.v1"`
	RaidAaMarkNpc               int32                  `protobuf:"varint,1,opt,name=raid_aa_mark_npc,json=raidAaMarkNpc,proto3" json:"raid_aa_mark_npc,omitempty"`
	RaidAanpcHealth             int32                  `protobuf:"varint,2,opt,name=raid_aanpc_health,json=raidAanpcHealth,proto3" json:"raid_aanpc_health,omitempty"`
	RaidAaDelegateMainAssist    int32                  `protobuf:"varint,3,opt,name=raid_aa_delegate_main_assist,json=raidAaDelegateMainAssist,proto3" json:"raid_aa_delegate_main_assist,omitempty"`
	RaidAaDelegateMarkNpc       int32                  `protobuf:"varint,4,opt,name=raid_aa_delegate_mark_npc,json=raidAaDelegateMarkNpc,proto3" json:"raid_aa_delegate_mark_npc,omitempty"`
	RaidAa4                     int32                  `protobuf:"varint,5,opt,name=raid_aa4,json=raidAa4,proto3" json:"raid_aa4,omitempty"`
	RaidAa5                     int32                  `protobuf:"varint,6,opt,name=raid_aa5,json=raidAa5,proto3" json:"raid_aa5,omitempty"`
	RaidAa6                     int32                  `protobuf:"varint,7,opt,name=raid_aa6,json=raidAa6,proto3" json:"raid_aa6,omitempty"`
	RaidAaSpellAwareness        int32                  `protobuf:"varint,8,opt,name=raid_aa_spell_awareness,json=raidAaSpellAwareness,proto3" json:"raid_aa_spell_awareness,omitempty"`
	RaidAaOffenseEnhancement    int32                  `protobuf:"varint,9,opt,name=raid_aa_offense_enhancement,json=raidAaOffenseEnhancement,proto3" json:"raid_aa_offense_enhancement,omitempty"`
	RaidAaManaEnhancement       int32                  `protobuf:"varint,10,opt,name=raid_aa_mana_enhancement,json=raidAaManaEnhancement,proto3" json:"raid_aa_mana_enhancement,omitempty"`
	RaidAaHealthEnhancement     int32                  `protobuf:"varint,11,opt,name=raid_aa_health_enhancement,json=raidAaHealthEnhancement,proto3" json:"raid_aa_health_enhancement,omitempty"`
	RaidAaHealthRegeneration    int32                  `protobuf:"varint,12,opt,name=raid_aa_health_regeneration,json=raidAaHealthRegeneration,proto3" json:"raid_aa_health_regeneration,omitempty"`
	RaidAaFindPathToPc          int32                  `protobuf:"varint,13,opt,name=raid_aa_find_path_to_pc,json=raidAaFindPathToPc,proto3" json:"raid_aa_find_path_to_pc,omitempty"`
	RaidAaHealthOfTargetsTarget int32                  `protobuf:"varint,14,opt,name=raid_aa_health_of_targets_target,json=raidAaHealthOfTargetsTarget,proto3" json:"raid_aa_health_of_targets_target,omitempty"`
	RaidAa14                    int32                  `protobuf:"varint,15,opt,name=raid_aa14,json=raidAa14,proto3" json:"raid_aa14,omitempty"`
	RaidAa15                    int32                  `protobuf:"varint,16,opt,name=raid_aa15,json=raidAa15,proto3" json:"raid_aa15,omitempty"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *RaidLeadershipAA) Reset() {
	*x = RaidLeadershipAA{}
	mi := &file_EQMessage_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RaidLeadershipAA) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RaidLeadershipAA) ProtoMessage() {}

func (x *RaidLeadershipAA) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RaidLeadershipAA.ProtoReflect.Descriptor instead.
func (*RaidLeadershipAA) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{58}
}

func (x *RaidLeadershipAA) GetRaidAaMarkNpc() int32 {
	if x != nil {
		return x.RaidAaMarkNpc
	}
	return 0
}

func (x *RaidLeadershipAA) GetRaidAanpcHealth() int32 {
	if x != nil {
		return x.RaidAanpcHealth
	}
	return 0
}

func (x *RaidLeadershipAA) GetRaidAaDelegateMainAssist() int32 {
	if x != nil {
		return x.RaidAaDelegateMainAssist
	}
	return 0
}

func (x *RaidLeadershipAA) GetRaidAaDelegateMarkNpc() int32 {
	if x != nil {
		return x.RaidAaDelegateMarkNpc
	}
	return 0
}

func (x *RaidLeadershipAA) GetRaidAa4() int32 {
	if x != nil {
		return x.RaidAa4
	}
	return 0
}

func (x *RaidLeadershipAA) GetRaidAa5() int32 {
	if x != nil {
		return x.RaidAa5
	}
	return 0
}

func (x *RaidLeadershipAA) GetRaidAa6() int32 {
	if x != nil {
		return x.RaidAa6
	}
	return 0
}

func (x *RaidLeadershipAA) GetRaidAaSpellAwareness() int32 {
	if x != nil {
		return x.RaidAaSpellAwareness
	}
	return 0
}

func (x *RaidLeadershipAA) GetRaidAaOffenseEnhancement() int32 {
	if x != nil {
		return x.RaidAaOffenseEnhancement
	}
	return 0
}

func (x *RaidLeadershipAA) GetRaidAaManaEnhancement() int32 {
	if x != nil {
		return x.RaidAaManaEnhancement
	}
	return 0
}

func (x *RaidLeadershipAA) GetRaidAaHealthEnhancement() int32 {
	if x != nil {
		return x.RaidAaHealthEnhancement
	}
	return 0
}

func (x *RaidLeadershipAA) GetRaidAaHealthRegeneration() int32 {
	if x != nil {
		return x.RaidAaHealthRegeneration
	}
	return 0
}

func (x *RaidLeadershipAA) GetRaidAaFindPathToPc() int32 {
	if x != nil {
		return x.RaidAaFindPathToPc
	}
	return 0
}

func (x *RaidLeadershipAA) GetRaidAaHealthOfTargetsTarget() int32 {
	if x != nil {
		return x.RaidAaHealthOfTargetsTarget
	}
	return 0
}

func (x *RaidLeadershipAA) GetRaidAa14() int32 {
	if x != nil {
		return x.RaidAa14
	}
	return 0
}

func (x *RaidLeadershipAA) GetRaidAa15() int32 {
	if x != nil {
		return x.RaidAa15
	}
	return 0
}

type LeadershipAA struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Group         *GroupLeadershipAA     `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	Raid          *RaidLeadershipAA      `protobuf:"bytes,2,opt,name=raid,proto3" json:"raid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeadershipAA) Reset() {
	*x = LeadershipAA{}
	mi := &file_EQMessage_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeadershipAA) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeadershipAA) ProtoMessage() {}

func (x *LeadershipAA) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeadershipAA.ProtoReflect.Descriptor instead.
func (*LeadershipAA) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{59}
}

func (x *LeadershipAA) GetGroup() *GroupLeadershipAA {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *LeadershipAA) GetRaid() *RaidLeadershipAA {
	if x != nil {
		return x.Raid
	}
	return nil
}

type Bind struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ZoneId        int32                  `protobuf:"varint,1,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	X             float32                `protobuf:"fixed32,2,opt,name=x,proto3" json:"x,omitempty"`
	Y             float32                `protobuf:"fixed32,3,opt,name=y,proto3" json:"y,omitempty"`
	Z             float32                `protobuf:"fixed32,4,opt,name=z,proto3" json:"z,omitempty"`
	Heading       float32                `protobuf:"fixed32,5,opt,name=heading,proto3" json:"heading,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Bind) Reset() {
	*x = Bind{}
	mi := &file_EQMessage_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Bind) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bind) ProtoMessage() {}

func (x *Bind) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bind.ProtoReflect.Descriptor instead.
func (*Bind) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{60}
}

func (x *Bind) GetZoneId() int32 {
	if x != nil {
		return x.ZoneId
	}
	return 0
}

func (x *Bind) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Bind) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Bind) GetZ() float32 {
	if x != nil {
		return x.Z
	}
	return 0
}

func (x *Bind) GetHeading() float32 {
	if x != nil {
		return x.Heading
	}
	return 0
}

type PVPStatsEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Level         int32                  `protobuf:"varint,2,opt,name=level,proto3" json:"level,omitempty"`
	Race          int32                  `protobuf:"varint,3,opt,name=race,proto3" json:"race,omitempty"`
	CharClass     int32                  `protobuf:"varint,4,opt,name=char_class,json=charClass,proto3" json:"char_class,omitempty"`
	Zone          int32                  `protobuf:"varint,5,opt,name=zone,proto3" json:"zone,omitempty"`
	Time          int32                  `protobuf:"varint,6,opt,name=time,proto3" json:"time,omitempty"`
	Points        int32                  `protobuf:"varint,7,opt,name=points,proto3" json:"points,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PVPStatsEntry) Reset() {
	*x = PVPStatsEntry{}
	mi := &file_EQMessage_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PVPStatsEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PVPStatsEntry) ProtoMessage() {}

func (x *PVPStatsEntry) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PVPStatsEntry.ProtoReflect.Descriptor instead.
func (*PVPStatsEntry) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{61}
}

func (x *PVPStatsEntry) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PVPStatsEntry) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *PVPStatsEntry) GetRace() int32 {
	if x != nil {
		return x.Race
	}
	return 0
}

func (x *PVPStatsEntry) GetCharClass() int32 {
	if x != nil {
		return x.CharClass
	}
	return 0
}

func (x *PVPStatsEntry) GetZone() int32 {
	if x != nil {
		return x.Zone
	}
	return 0
}

func (x *PVPStatsEntry) GetTime() int32 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *PVPStatsEntry) GetPoints() int32 {
	if x != nil {
		return x.Points
	}
	return 0
}

type PlayerProfile struct {
	state                        protoimpl.MessageState `protogen:"open.v1"`
	Checksum                     int32                  `protobuf:"varint,1,opt,name=checksum,proto3" json:"checksum,omitempty"`
	Gender                       int32                  `protobuf:"varint,2,opt,name=gender,proto3" json:"gender,omitempty"`
	Race                         int32                  `protobuf:"varint,3,opt,name=race,proto3" json:"race,omitempty"`
	CharClass                    int32                  `protobuf:"varint,4,opt,name=char_class,json=charClass,proto3" json:"char_class,omitempty"`
	Level                        int32                  `protobuf:"varint,5,opt,name=level,proto3" json:"level,omitempty"`
	Level1                       int32                  `protobuf:"varint,6,opt,name=level1,proto3" json:"level1,omitempty"`
	Binds                        []*Bind                `protobuf:"bytes,7,rep,name=binds,proto3" json:"binds,omitempty"`
	Deity                        int32                  `protobuf:"varint,8,opt,name=deity,proto3" json:"deity,omitempty"`
	Intoxication                 int32                  `protobuf:"varint,9,opt,name=intoxication,proto3" json:"intoxication,omitempty"`
	SpellSlotRefresh             []int32                `protobuf:"varint,10,rep,packed,name=spell_slot_refresh,json=spellSlotRefresh,proto3" json:"spell_slot_refresh,omitempty"`
	AbilitySlotRefresh           int32                  `protobuf:"varint,11,opt,name=ability_slot_refresh,json=abilitySlotRefresh,proto3" json:"ability_slot_refresh,omitempty"`
	Haircolor                    int32                  `protobuf:"varint,12,opt,name=haircolor,proto3" json:"haircolor,omitempty"`
	Beardcolor                   int32                  `protobuf:"varint,13,opt,name=beardcolor,proto3" json:"beardcolor,omitempty"`
	Eyecolor1                    int32                  `protobuf:"varint,14,opt,name=eyecolor1,proto3" json:"eyecolor1,omitempty"`
	Eyecolor2                    int32                  `protobuf:"varint,15,opt,name=eyecolor2,proto3" json:"eyecolor2,omitempty"`
	Hairstyle                    int32                  `protobuf:"varint,16,opt,name=hairstyle,proto3" json:"hairstyle,omitempty"`
	Beard                        int32                  `protobuf:"varint,17,opt,name=beard,proto3" json:"beard,omitempty"`
	ItemMaterial                 *TextureProfile        `protobuf:"bytes,18,opt,name=item_material,json=itemMaterial,proto3" json:"item_material,omitempty"`
	ItemTint                     int32                  `protobuf:"varint,19,opt,name=item_tint,json=itemTint,proto3" json:"item_tint,omitempty"`
	AaArray                      []*AA_Array            `protobuf:"bytes,20,rep,name=aa_array,json=aaArray,proto3" json:"aa_array,omitempty"`
	Points                       int32                  `protobuf:"varint,21,opt,name=points,proto3" json:"points,omitempty"`
	Mana                         int32                  `protobuf:"varint,22,opt,name=mana,proto3" json:"mana,omitempty"`
	CurHp                        int32                  `protobuf:"varint,23,opt,name=cur_hp,json=curHp,proto3" json:"cur_hp,omitempty"`
	Str                          int32                  `protobuf:"varint,24,opt,name=str,proto3" json:"str,omitempty"`
	Sta                          int32                  `protobuf:"varint,25,opt,name=sta,proto3" json:"sta,omitempty"`
	Cha                          int32                  `protobuf:"varint,26,opt,name=cha,proto3" json:"cha,omitempty"`
	Dex                          int32                  `protobuf:"varint,27,opt,name=dex,proto3" json:"dex,omitempty"`
	Intel                        int32                  `protobuf:"varint,28,opt,name=intel,proto3" json:"intel,omitempty"`
	Agi                          int32                  `protobuf:"varint,29,opt,name=agi,proto3" json:"agi,omitempty"`
	Wis                          int32                  `protobuf:"varint,30,opt,name=wis,proto3" json:"wis,omitempty"`
	Face                         int32                  `protobuf:"varint,31,opt,name=face,proto3" json:"face,omitempty"`
	SpellBook                    []int32                `protobuf:"varint,32,rep,packed,name=spell_book,json=spellBook,proto3" json:"spell_book,omitempty"`
	MemSpells                    []int32                `protobuf:"varint,33,rep,packed,name=mem_spells,json=memSpells,proto3" json:"mem_spells,omitempty"`
	Platinum                     int32                  `protobuf:"varint,34,opt,name=platinum,proto3" json:"platinum,omitempty"`
	Gold                         int32                  `protobuf:"varint,35,opt,name=gold,proto3" json:"gold,omitempty"`
	Silver                       int32                  `protobuf:"varint,36,opt,name=silver,proto3" json:"silver,omitempty"`
	Copper                       int32                  `protobuf:"varint,37,opt,name=copper,proto3" json:"copper,omitempty"`
	PlatinumCursor               int32                  `protobuf:"varint,38,opt,name=platinum_cursor,json=platinumCursor,proto3" json:"platinum_cursor,omitempty"`
	GoldCursor                   int32                  `protobuf:"varint,39,opt,name=gold_cursor,json=goldCursor,proto3" json:"gold_cursor,omitempty"`
	SilverCursor                 int32                  `protobuf:"varint,40,opt,name=silver_cursor,json=silverCursor,proto3" json:"silver_cursor,omitempty"`
	CopperCursor                 int32                  `protobuf:"varint,41,opt,name=copper_cursor,json=copperCursor,proto3" json:"copper_cursor,omitempty"`
	Skills                       []int32                `protobuf:"varint,42,rep,packed,name=skills,proto3" json:"skills,omitempty"`
	InnateSkills                 []int32                `protobuf:"varint,43,rep,packed,name=innate_skills,json=innateSkills,proto3" json:"innate_skills,omitempty"`
	Toxicity                     int32                  `protobuf:"varint,44,opt,name=toxicity,proto3" json:"toxicity,omitempty"`
	ThirstLevel                  int32                  `protobuf:"varint,45,opt,name=thirst_level,json=thirstLevel,proto3" json:"thirst_level,omitempty"`
	HungerLevel                  int32                  `protobuf:"varint,46,opt,name=hunger_level,json=hungerLevel,proto3" json:"hunger_level,omitempty"`
	Buffs                        []*SpellBuff           `protobuf:"bytes,47,rep,name=buffs,proto3" json:"buffs,omitempty"`
	Disciplines                  *Disciplines           `protobuf:"bytes,48,opt,name=disciplines,proto3" json:"disciplines,omitempty"`
	RecastTimers                 []int32                `protobuf:"varint,49,rep,packed,name=recast_timers,json=recastTimers,proto3" json:"recast_timers,omitempty"`
	Endurance                    int32                  `protobuf:"varint,50,opt,name=endurance,proto3" json:"endurance,omitempty"`
	AapointsSpent                int32                  `protobuf:"varint,51,opt,name=aapoints_spent,json=aapointsSpent,proto3" json:"aapoints_spent,omitempty"`
	Aapoints                     int32                  `protobuf:"varint,52,opt,name=aapoints,proto3" json:"aapoints,omitempty"`
	Bandoliers                   []*Bandolier           `protobuf:"bytes,53,rep,name=bandoliers,proto3" json:"bandoliers,omitempty"`
	Potionbelt                   *PotionBelt            `protobuf:"bytes,54,opt,name=potionbelt,proto3" json:"potionbelt,omitempty"`
	AvailableSlots               int32                  `protobuf:"varint,55,opt,name=available_slots,json=availableSlots,proto3" json:"available_slots,omitempty"`
	Name                         string                 `protobuf:"bytes,56,opt,name=name,proto3" json:"name,omitempty"`
	LastName                     string                 `protobuf:"bytes,57,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	GuildId                      int32                  `protobuf:"varint,58,opt,name=guild_id,json=guildId,proto3" json:"guild_id,omitempty"`
	Birthday                     int32                  `protobuf:"varint,59,opt,name=birthday,proto3" json:"birthday,omitempty"`
	Lastlogin                    int32                  `protobuf:"varint,60,opt,name=lastlogin,proto3" json:"lastlogin,omitempty"`
	TimePlayedMin                int32                  `protobuf:"varint,61,opt,name=time_played_min,json=timePlayedMin,proto3" json:"time_played_min,omitempty"`
	Pvp                          int32                  `protobuf:"varint,62,opt,name=pvp,proto3" json:"pvp,omitempty"`
	Anon                         int32                  `protobuf:"varint,63,opt,name=anon,proto3" json:"anon,omitempty"`
	Gm                           int32                  `protobuf:"varint,64,opt,name=gm,proto3" json:"gm,omitempty"`
	Guildrank                    int32                  `protobuf:"varint,65,opt,name=guildrank,proto3" json:"guildrank,omitempty"`
	Guildbanker                  int32                  `protobuf:"varint,66,opt,name=guildbanker,proto3" json:"guildbanker,omitempty"`
	Exp                          int32                  `protobuf:"varint,67,opt,name=exp,proto3" json:"exp,omitempty"`
	Timeentitledonaccount        int32                  `protobuf:"varint,68,opt,name=timeentitledonaccount,proto3" json:"timeentitledonaccount,omitempty"`
	Languages                    []int32                `protobuf:"varint,69,rep,packed,name=languages,proto3" json:"languages,omitempty"`
	X                            float32                `protobuf:"fixed32,70,opt,name=x,proto3" json:"x,omitempty"`
	Y                            float32                `protobuf:"fixed32,71,opt,name=y,proto3" json:"y,omitempty"`
	Z                            float32                `protobuf:"fixed32,72,opt,name=z,proto3" json:"z,omitempty"`
	Heading                      float32                `protobuf:"fixed32,73,opt,name=heading,proto3" json:"heading,omitempty"`
	PlatinumBank                 int32                  `protobuf:"varint,74,opt,name=platinum_bank,json=platinumBank,proto3" json:"platinum_bank,omitempty"`
	GoldBank                     int32                  `protobuf:"varint,75,opt,name=gold_bank,json=goldBank,proto3" json:"gold_bank,omitempty"`
	SilverBank                   int32                  `protobuf:"varint,76,opt,name=silver_bank,json=silverBank,proto3" json:"silver_bank,omitempty"`
	CopperBank                   int32                  `protobuf:"varint,77,opt,name=copper_bank,json=copperBank,proto3" json:"copper_bank,omitempty"`
	PlatinumShared               int32                  `protobuf:"varint,78,opt,name=platinum_shared,json=platinumShared,proto3" json:"platinum_shared,omitempty"`
	Expansions                   int32                  `protobuf:"varint,79,opt,name=expansions,proto3" json:"expansions,omitempty"`
	Autosplit                    int32                  `protobuf:"varint,80,opt,name=autosplit,proto3" json:"autosplit,omitempty"`
	ZoneId                       int32                  `protobuf:"varint,81,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	ZoneInstance                 int32                  `protobuf:"varint,82,opt,name=zone_instance,json=zoneInstance,proto3" json:"zone_instance,omitempty"`
	GroupMembers                 []*StringList          `protobuf:"bytes,83,rep,name=group_members,json=groupMembers,proto3" json:"group_members,omitempty"`
	GroupLeader                  string                 `protobuf:"bytes,84,opt,name=group_leader,json=groupLeader,proto3" json:"group_leader,omitempty"`
	Entityid                     int32                  `protobuf:"varint,85,opt,name=entityid,proto3" json:"entityid,omitempty"`
	LeadAaActive                 int32                  `protobuf:"varint,86,opt,name=lead_aa_active,json=leadAaActive,proto3" json:"lead_aa_active,omitempty"`
	LdonPointsGuk                int32                  `protobuf:"varint,87,opt,name=ldon_points_guk,json=ldonPointsGuk,proto3" json:"ldon_points_guk,omitempty"`
	LdonPointsMir                int32                  `protobuf:"varint,88,opt,name=ldon_points_mir,json=ldonPointsMir,proto3" json:"ldon_points_mir,omitempty"`
	LdonPointsMmc                int32                  `protobuf:"varint,89,opt,name=ldon_points_mmc,json=ldonPointsMmc,proto3" json:"ldon_points_mmc,omitempty"`
	LdonPointsRuj                int32                  `protobuf:"varint,90,opt,name=ldon_points_ruj,json=ldonPointsRuj,proto3" json:"ldon_points_ruj,omitempty"`
	LdonPointsTak                int32                  `protobuf:"varint,91,opt,name=ldon_points_tak,json=ldonPointsTak,proto3" json:"ldon_points_tak,omitempty"`
	LdonPointsAvailable          int32                  `protobuf:"varint,92,opt,name=ldon_points_available,json=ldonPointsAvailable,proto3" json:"ldon_points_available,omitempty"`
	TributeTimeRemaining         int32                  `protobuf:"varint,93,opt,name=tribute_time_remaining,json=tributeTimeRemaining,proto3" json:"tribute_time_remaining,omitempty"`
	CareerTributePoints          int32                  `protobuf:"varint,94,opt,name=career_tribute_points,json=careerTributePoints,proto3" json:"career_tribute_points,omitempty"`
	TributePoints                int32                  `protobuf:"varint,95,opt,name=tribute_points,json=tributePoints,proto3" json:"tribute_points,omitempty"`
	TributeActive                int32                  `protobuf:"varint,96,opt,name=tribute_active,json=tributeActive,proto3" json:"tribute_active,omitempty"`
	Tributes                     []*Tribute             `protobuf:"bytes,97,rep,name=tributes,proto3" json:"tributes,omitempty"`
	GroupLeadershipExp           float64                `protobuf:"fixed64,98,opt,name=group_leadership_exp,json=groupLeadershipExp,proto3" json:"group_leadership_exp,omitempty"`
	RaidLeadershipExp            float64                `protobuf:"fixed64,99,opt,name=raid_leadership_exp,json=raidLeadershipExp,proto3" json:"raid_leadership_exp,omitempty"`
	GroupLeadershipPoints        int32                  `protobuf:"varint,100,opt,name=group_leadership_points,json=groupLeadershipPoints,proto3" json:"group_leadership_points,omitempty"`
	RaidLeadershipPoints         int32                  `protobuf:"varint,101,opt,name=raid_leadership_points,json=raidLeadershipPoints,proto3" json:"raid_leadership_points,omitempty"`
	LeaderAbilities              *LeadershipAA          `protobuf:"bytes,102,opt,name=leader_abilities,json=leaderAbilities,proto3" json:"leader_abilities,omitempty"`
	AirRemaining                 int32                  `protobuf:"varint,103,opt,name=air_remaining,json=airRemaining,proto3" json:"air_remaining,omitempty"`
	PvpKills                     int32                  `protobuf:"varint,104,opt,name=pvp_kills,json=pvpKills,proto3" json:"pvp_kills,omitempty"`
	PvpDeaths                    int32                  `protobuf:"varint,105,opt,name=pvp_deaths,json=pvpDeaths,proto3" json:"pvp_deaths,omitempty"`
	PvpCurrentPoints             int32                  `protobuf:"varint,106,opt,name=pvp_current_points,json=pvpCurrentPoints,proto3" json:"pvp_current_points,omitempty"`
	PvpCareerPoints              int32                  `protobuf:"varint,107,opt,name=pvp_career_points,json=pvpCareerPoints,proto3" json:"pvp_career_points,omitempty"`
	PvpBestKillStreak            int32                  `protobuf:"varint,108,opt,name=pvp_best_kill_streak,json=pvpBestKillStreak,proto3" json:"pvp_best_kill_streak,omitempty"`
	PvpWorstDeathStreak          int32                  `protobuf:"varint,109,opt,name=pvp_worst_death_streak,json=pvpWorstDeathStreak,proto3" json:"pvp_worst_death_streak,omitempty"`
	PvpCurrentKillStreak         int32                  `protobuf:"varint,110,opt,name=pvp_current_kill_streak,json=pvpCurrentKillStreak,proto3" json:"pvp_current_kill_streak,omitempty"`
	PvpLastKill                  *PVPStatsEntry         `protobuf:"bytes,111,opt,name=pvp_last_kill,json=pvpLastKill,proto3" json:"pvp_last_kill,omitempty"`
	PvpLastDeath                 *PVPStatsEntry         `protobuf:"bytes,112,opt,name=pvp_last_death,json=pvpLastDeath,proto3" json:"pvp_last_death,omitempty"`
	PvpNumberOfKillsInLast_Hours int32                  `protobuf:"varint,113,opt,name=pvp_number_of_kills_in_last__hours,json=pvpNumberOfKillsInLastHours,proto3" json:"pvp_number_of_kills_in_last__hours,omitempty"`
	PvpRecentKills               []*PVPStatsEntry       `protobuf:"bytes,114,rep,name=pvp_recent_kills,json=pvpRecentKills,proto3" json:"pvp_recent_kills,omitempty"`
	ExpAa                        int32                  `protobuf:"varint,115,opt,name=exp_aa,json=expAa,proto3" json:"exp_aa,omitempty"`
	CurrentRadCrystals           int32                  `protobuf:"varint,116,opt,name=current_rad_crystals,json=currentRadCrystals,proto3" json:"current_rad_crystals,omitempty"`
	CareerRadCrystals            int32                  `protobuf:"varint,117,opt,name=career_rad_crystals,json=careerRadCrystals,proto3" json:"career_rad_crystals,omitempty"`
	CurrentEbonCrystals          int32                  `protobuf:"varint,118,opt,name=current_ebon_crystals,json=currentEbonCrystals,proto3" json:"current_ebon_crystals,omitempty"`
	CareerEbonCrystals           int32                  `protobuf:"varint,119,opt,name=career_ebon_crystals,json=careerEbonCrystals,proto3" json:"career_ebon_crystals,omitempty"`
	GroupAutoconsent             int32                  `protobuf:"varint,120,opt,name=group_autoconsent,json=groupAutoconsent,proto3" json:"group_autoconsent,omitempty"`
	RaidAutoconsent              int32                  `protobuf:"varint,121,opt,name=raid_autoconsent,json=raidAutoconsent,proto3" json:"raid_autoconsent,omitempty"`
	GuildAutoconsent             int32                  `protobuf:"varint,122,opt,name=guild_autoconsent,json=guildAutoconsent,proto3" json:"guild_autoconsent,omitempty"`
	Level3                       int32                  `protobuf:"varint,123,opt,name=level3,proto3" json:"level3,omitempty"`
	Showhelm                     int32                  `protobuf:"varint,124,opt,name=showhelm,proto3" json:"showhelm,omitempty"`
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *PlayerProfile) Reset() {
	*x = PlayerProfile{}
	mi := &file_EQMessage_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerProfile) ProtoMessage() {}

func (x *PlayerProfile) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerProfile.ProtoReflect.Descriptor instead.
func (*PlayerProfile) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{62}
}

func (x *PlayerProfile) GetChecksum() int32 {
	if x != nil {
		return x.Checksum
	}
	return 0
}

func (x *PlayerProfile) GetGender() int32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *PlayerProfile) GetRace() int32 {
	if x != nil {
		return x.Race
	}
	return 0
}

func (x *PlayerProfile) GetCharClass() int32 {
	if x != nil {
		return x.CharClass
	}
	return 0
}

func (x *PlayerProfile) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *PlayerProfile) GetLevel1() int32 {
	if x != nil {
		return x.Level1
	}
	return 0
}

func (x *PlayerProfile) GetBinds() []*Bind {
	if x != nil {
		return x.Binds
	}
	return nil
}

func (x *PlayerProfile) GetDeity() int32 {
	if x != nil {
		return x.Deity
	}
	return 0
}

func (x *PlayerProfile) GetIntoxication() int32 {
	if x != nil {
		return x.Intoxication
	}
	return 0
}

func (x *PlayerProfile) GetSpellSlotRefresh() []int32 {
	if x != nil {
		return x.SpellSlotRefresh
	}
	return nil
}

func (x *PlayerProfile) GetAbilitySlotRefresh() int32 {
	if x != nil {
		return x.AbilitySlotRefresh
	}
	return 0
}

func (x *PlayerProfile) GetHaircolor() int32 {
	if x != nil {
		return x.Haircolor
	}
	return 0
}

func (x *PlayerProfile) GetBeardcolor() int32 {
	if x != nil {
		return x.Beardcolor
	}
	return 0
}

func (x *PlayerProfile) GetEyecolor1() int32 {
	if x != nil {
		return x.Eyecolor1
	}
	return 0
}

func (x *PlayerProfile) GetEyecolor2() int32 {
	if x != nil {
		return x.Eyecolor2
	}
	return 0
}

func (x *PlayerProfile) GetHairstyle() int32 {
	if x != nil {
		return x.Hairstyle
	}
	return 0
}

func (x *PlayerProfile) GetBeard() int32 {
	if x != nil {
		return x.Beard
	}
	return 0
}

func (x *PlayerProfile) GetItemMaterial() *TextureProfile {
	if x != nil {
		return x.ItemMaterial
	}
	return nil
}

func (x *PlayerProfile) GetItemTint() int32 {
	if x != nil {
		return x.ItemTint
	}
	return 0
}

func (x *PlayerProfile) GetAaArray() []*AA_Array {
	if x != nil {
		return x.AaArray
	}
	return nil
}

func (x *PlayerProfile) GetPoints() int32 {
	if x != nil {
		return x.Points
	}
	return 0
}

func (x *PlayerProfile) GetMana() int32 {
	if x != nil {
		return x.Mana
	}
	return 0
}

func (x *PlayerProfile) GetCurHp() int32 {
	if x != nil {
		return x.CurHp
	}
	return 0
}

func (x *PlayerProfile) GetStr() int32 {
	if x != nil {
		return x.Str
	}
	return 0
}

func (x *PlayerProfile) GetSta() int32 {
	if x != nil {
		return x.Sta
	}
	return 0
}

func (x *PlayerProfile) GetCha() int32 {
	if x != nil {
		return x.Cha
	}
	return 0
}

func (x *PlayerProfile) GetDex() int32 {
	if x != nil {
		return x.Dex
	}
	return 0
}

func (x *PlayerProfile) GetIntel() int32 {
	if x != nil {
		return x.Intel
	}
	return 0
}

func (x *PlayerProfile) GetAgi() int32 {
	if x != nil {
		return x.Agi
	}
	return 0
}

func (x *PlayerProfile) GetWis() int32 {
	if x != nil {
		return x.Wis
	}
	return 0
}

func (x *PlayerProfile) GetFace() int32 {
	if x != nil {
		return x.Face
	}
	return 0
}

func (x *PlayerProfile) GetSpellBook() []int32 {
	if x != nil {
		return x.SpellBook
	}
	return nil
}

func (x *PlayerProfile) GetMemSpells() []int32 {
	if x != nil {
		return x.MemSpells
	}
	return nil
}

func (x *PlayerProfile) GetPlatinum() int32 {
	if x != nil {
		return x.Platinum
	}
	return 0
}

func (x *PlayerProfile) GetGold() int32 {
	if x != nil {
		return x.Gold
	}
	return 0
}

func (x *PlayerProfile) GetSilver() int32 {
	if x != nil {
		return x.Silver
	}
	return 0
}

func (x *PlayerProfile) GetCopper() int32 {
	if x != nil {
		return x.Copper
	}
	return 0
}

func (x *PlayerProfile) GetPlatinumCursor() int32 {
	if x != nil {
		return x.PlatinumCursor
	}
	return 0
}

func (x *PlayerProfile) GetGoldCursor() int32 {
	if x != nil {
		return x.GoldCursor
	}
	return 0
}

func (x *PlayerProfile) GetSilverCursor() int32 {
	if x != nil {
		return x.SilverCursor
	}
	return 0
}

func (x *PlayerProfile) GetCopperCursor() int32 {
	if x != nil {
		return x.CopperCursor
	}
	return 0
}

func (x *PlayerProfile) GetSkills() []int32 {
	if x != nil {
		return x.Skills
	}
	return nil
}

func (x *PlayerProfile) GetInnateSkills() []int32 {
	if x != nil {
		return x.InnateSkills
	}
	return nil
}

func (x *PlayerProfile) GetToxicity() int32 {
	if x != nil {
		return x.Toxicity
	}
	return 0
}

func (x *PlayerProfile) GetThirstLevel() int32 {
	if x != nil {
		return x.ThirstLevel
	}
	return 0
}

func (x *PlayerProfile) GetHungerLevel() int32 {
	if x != nil {
		return x.HungerLevel
	}
	return 0
}

func (x *PlayerProfile) GetBuffs() []*SpellBuff {
	if x != nil {
		return x.Buffs
	}
	return nil
}

func (x *PlayerProfile) GetDisciplines() *Disciplines {
	if x != nil {
		return x.Disciplines
	}
	return nil
}

func (x *PlayerProfile) GetRecastTimers() []int32 {
	if x != nil {
		return x.RecastTimers
	}
	return nil
}

func (x *PlayerProfile) GetEndurance() int32 {
	if x != nil {
		return x.Endurance
	}
	return 0
}

func (x *PlayerProfile) GetAapointsSpent() int32 {
	if x != nil {
		return x.AapointsSpent
	}
	return 0
}

func (x *PlayerProfile) GetAapoints() int32 {
	if x != nil {
		return x.Aapoints
	}
	return 0
}

func (x *PlayerProfile) GetBandoliers() []*Bandolier {
	if x != nil {
		return x.Bandoliers
	}
	return nil
}

func (x *PlayerProfile) GetPotionbelt() *PotionBelt {
	if x != nil {
		return x.Potionbelt
	}
	return nil
}

func (x *PlayerProfile) GetAvailableSlots() int32 {
	if x != nil {
		return x.AvailableSlots
	}
	return 0
}

func (x *PlayerProfile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PlayerProfile) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *PlayerProfile) GetGuildId() int32 {
	if x != nil {
		return x.GuildId
	}
	return 0
}

func (x *PlayerProfile) GetBirthday() int32 {
	if x != nil {
		return x.Birthday
	}
	return 0
}

func (x *PlayerProfile) GetLastlogin() int32 {
	if x != nil {
		return x.Lastlogin
	}
	return 0
}

func (x *PlayerProfile) GetTimePlayedMin() int32 {
	if x != nil {
		return x.TimePlayedMin
	}
	return 0
}

func (x *PlayerProfile) GetPvp() int32 {
	if x != nil {
		return x.Pvp
	}
	return 0
}

func (x *PlayerProfile) GetAnon() int32 {
	if x != nil {
		return x.Anon
	}
	return 0
}

func (x *PlayerProfile) GetGm() int32 {
	if x != nil {
		return x.Gm
	}
	return 0
}

func (x *PlayerProfile) GetGuildrank() int32 {
	if x != nil {
		return x.Guildrank
	}
	return 0
}

func (x *PlayerProfile) GetGuildbanker() int32 {
	if x != nil {
		return x.Guildbanker
	}
	return 0
}

func (x *PlayerProfile) GetExp() int32 {
	if x != nil {
		return x.Exp
	}
	return 0
}

func (x *PlayerProfile) GetTimeentitledonaccount() int32 {
	if x != nil {
		return x.Timeentitledonaccount
	}
	return 0
}

func (x *PlayerProfile) GetLanguages() []int32 {
	if x != nil {
		return x.Languages
	}
	return nil
}

func (x *PlayerProfile) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *PlayerProfile) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *PlayerProfile) GetZ() float32 {
	if x != nil {
		return x.Z
	}
	return 0
}

func (x *PlayerProfile) GetHeading() float32 {
	if x != nil {
		return x.Heading
	}
	return 0
}

func (x *PlayerProfile) GetPlatinumBank() int32 {
	if x != nil {
		return x.PlatinumBank
	}
	return 0
}

func (x *PlayerProfile) GetGoldBank() int32 {
	if x != nil {
		return x.GoldBank
	}
	return 0
}

func (x *PlayerProfile) GetSilverBank() int32 {
	if x != nil {
		return x.SilverBank
	}
	return 0
}

func (x *PlayerProfile) GetCopperBank() int32 {
	if x != nil {
		return x.CopperBank
	}
	return 0
}

func (x *PlayerProfile) GetPlatinumShared() int32 {
	if x != nil {
		return x.PlatinumShared
	}
	return 0
}

func (x *PlayerProfile) GetExpansions() int32 {
	if x != nil {
		return x.Expansions
	}
	return 0
}

func (x *PlayerProfile) GetAutosplit() int32 {
	if x != nil {
		return x.Autosplit
	}
	return 0
}

func (x *PlayerProfile) GetZoneId() int32 {
	if x != nil {
		return x.ZoneId
	}
	return 0
}

func (x *PlayerProfile) GetZoneInstance() int32 {
	if x != nil {
		return x.ZoneInstance
	}
	return 0
}

func (x *PlayerProfile) GetGroupMembers() []*StringList {
	if x != nil {
		return x.GroupMembers
	}
	return nil
}

func (x *PlayerProfile) GetGroupLeader() string {
	if x != nil {
		return x.GroupLeader
	}
	return ""
}

func (x *PlayerProfile) GetEntityid() int32 {
	if x != nil {
		return x.Entityid
	}
	return 0
}

func (x *PlayerProfile) GetLeadAaActive() int32 {
	if x != nil {
		return x.LeadAaActive
	}
	return 0
}

func (x *PlayerProfile) GetLdonPointsGuk() int32 {
	if x != nil {
		return x.LdonPointsGuk
	}
	return 0
}

func (x *PlayerProfile) GetLdonPointsMir() int32 {
	if x != nil {
		return x.LdonPointsMir
	}
	return 0
}

func (x *PlayerProfile) GetLdonPointsMmc() int32 {
	if x != nil {
		return x.LdonPointsMmc
	}
	return 0
}

func (x *PlayerProfile) GetLdonPointsRuj() int32 {
	if x != nil {
		return x.LdonPointsRuj
	}
	return 0
}

func (x *PlayerProfile) GetLdonPointsTak() int32 {
	if x != nil {
		return x.LdonPointsTak
	}
	return 0
}

func (x *PlayerProfile) GetLdonPointsAvailable() int32 {
	if x != nil {
		return x.LdonPointsAvailable
	}
	return 0
}

func (x *PlayerProfile) GetTributeTimeRemaining() int32 {
	if x != nil {
		return x.TributeTimeRemaining
	}
	return 0
}

func (x *PlayerProfile) GetCareerTributePoints() int32 {
	if x != nil {
		return x.CareerTributePoints
	}
	return 0
}

func (x *PlayerProfile) GetTributePoints() int32 {
	if x != nil {
		return x.TributePoints
	}
	return 0
}

func (x *PlayerProfile) GetTributeActive() int32 {
	if x != nil {
		return x.TributeActive
	}
	return 0
}

func (x *PlayerProfile) GetTributes() []*Tribute {
	if x != nil {
		return x.Tributes
	}
	return nil
}

func (x *PlayerProfile) GetGroupLeadershipExp() float64 {
	if x != nil {
		return x.GroupLeadershipExp
	}
	return 0
}

func (x *PlayerProfile) GetRaidLeadershipExp() float64 {
	if x != nil {
		return x.RaidLeadershipExp
	}
	return 0
}

func (x *PlayerProfile) GetGroupLeadershipPoints() int32 {
	if x != nil {
		return x.GroupLeadershipPoints
	}
	return 0
}

func (x *PlayerProfile) GetRaidLeadershipPoints() int32 {
	if x != nil {
		return x.RaidLeadershipPoints
	}
	return 0
}

func (x *PlayerProfile) GetLeaderAbilities() *LeadershipAA {
	if x != nil {
		return x.LeaderAbilities
	}
	return nil
}

func (x *PlayerProfile) GetAirRemaining() int32 {
	if x != nil {
		return x.AirRemaining
	}
	return 0
}

func (x *PlayerProfile) GetPvpKills() int32 {
	if x != nil {
		return x.PvpKills
	}
	return 0
}

func (x *PlayerProfile) GetPvpDeaths() int32 {
	if x != nil {
		return x.PvpDeaths
	}
	return 0
}

func (x *PlayerProfile) GetPvpCurrentPoints() int32 {
	if x != nil {
		return x.PvpCurrentPoints
	}
	return 0
}

func (x *PlayerProfile) GetPvpCareerPoints() int32 {
	if x != nil {
		return x.PvpCareerPoints
	}
	return 0
}

func (x *PlayerProfile) GetPvpBestKillStreak() int32 {
	if x != nil {
		return x.PvpBestKillStreak
	}
	return 0
}

func (x *PlayerProfile) GetPvpWorstDeathStreak() int32 {
	if x != nil {
		return x.PvpWorstDeathStreak
	}
	return 0
}

func (x *PlayerProfile) GetPvpCurrentKillStreak() int32 {
	if x != nil {
		return x.PvpCurrentKillStreak
	}
	return 0
}

func (x *PlayerProfile) GetPvpLastKill() *PVPStatsEntry {
	if x != nil {
		return x.PvpLastKill
	}
	return nil
}

func (x *PlayerProfile) GetPvpLastDeath() *PVPStatsEntry {
	if x != nil {
		return x.PvpLastDeath
	}
	return nil
}

func (x *PlayerProfile) GetPvpNumberOfKillsInLast_Hours() int32 {
	if x != nil {
		return x.PvpNumberOfKillsInLast_Hours
	}
	return 0
}

func (x *PlayerProfile) GetPvpRecentKills() []*PVPStatsEntry {
	if x != nil {
		return x.PvpRecentKills
	}
	return nil
}

func (x *PlayerProfile) GetExpAa() int32 {
	if x != nil {
		return x.ExpAa
	}
	return 0
}

func (x *PlayerProfile) GetCurrentRadCrystals() int32 {
	if x != nil {
		return x.CurrentRadCrystals
	}
	return 0
}

func (x *PlayerProfile) GetCareerRadCrystals() int32 {
	if x != nil {
		return x.CareerRadCrystals
	}
	return 0
}

func (x *PlayerProfile) GetCurrentEbonCrystals() int32 {
	if x != nil {
		return x.CurrentEbonCrystals
	}
	return 0
}

func (x *PlayerProfile) GetCareerEbonCrystals() int32 {
	if x != nil {
		return x.CareerEbonCrystals
	}
	return 0
}

func (x *PlayerProfile) GetGroupAutoconsent() int32 {
	if x != nil {
		return x.GroupAutoconsent
	}
	return 0
}

func (x *PlayerProfile) GetRaidAutoconsent() int32 {
	if x != nil {
		return x.RaidAutoconsent
	}
	return 0
}

func (x *PlayerProfile) GetGuildAutoconsent() int32 {
	if x != nil {
		return x.GuildAutoconsent
	}
	return 0
}

func (x *PlayerProfile) GetLevel3() int32 {
	if x != nil {
		return x.Level3
	}
	return 0
}

func (x *PlayerProfile) GetShowhelm() int32 {
	if x != nil {
		return x.Showhelm
	}
	return 0
}

type ClientTarget struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NewTarget     int32                  `protobuf:"varint,1,opt,name=new_target,json=newTarget,proto3" json:"new_target,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientTarget) Reset() {
	*x = ClientTarget{}
	mi := &file_EQMessage_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientTarget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientTarget) ProtoMessage() {}

func (x *ClientTarget) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientTarget.ProtoReflect.Descriptor instead.
func (*ClientTarget) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{63}
}

func (x *ClientTarget) GetNewTarget() int32 {
	if x != nil {
		return x.NewTarget
	}
	return 0
}

type TargetReject struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TargetReject) Reset() {
	*x = TargetReject{}
	mi := &file_EQMessage_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TargetReject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TargetReject) ProtoMessage() {}

func (x *TargetReject) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TargetReject.ProtoReflect.Descriptor instead.
func (*TargetReject) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{64}
}

type PetCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Command       int32                  `protobuf:"varint,1,opt,name=command,proto3" json:"command,omitempty"`
	Target        int32                  `protobuf:"varint,2,opt,name=target,proto3" json:"target,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PetCommand) Reset() {
	*x = PetCommand{}
	mi := &file_EQMessage_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PetCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetCommand) ProtoMessage() {}

func (x *PetCommand) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetCommand.ProtoReflect.Descriptor instead.
func (*PetCommand) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{65}
}

func (x *PetCommand) GetCommand() int32 {
	if x != nil {
		return x.Command
	}
	return 0
}

func (x *PetCommand) GetTarget() int32 {
	if x != nil {
		return x.Target
	}
	return 0
}

type DeleteSpawn struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpawnId       int32                  `protobuf:"varint,1,opt,name=spawn_id,json=spawnId,proto3" json:"spawn_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSpawn) Reset() {
	*x = DeleteSpawn{}
	mi := &file_EQMessage_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSpawn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSpawn) ProtoMessage() {}

func (x *DeleteSpawn) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSpawn.ProtoReflect.Descriptor instead.
func (*DeleteSpawn) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{66}
}

func (x *DeleteSpawn) GetSpawnId() int32 {
	if x != nil {
		return x.SpawnId
	}
	return 0
}

type ChannelMessage struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Targetname      string                 `protobuf:"bytes,1,opt,name=targetname,proto3" json:"targetname,omitempty"`
	Sender          string                 `protobuf:"bytes,2,opt,name=sender,proto3" json:"sender,omitempty"`
	Language        int32                  `protobuf:"varint,3,opt,name=language,proto3" json:"language,omitempty"`
	ChanNum         int32                  `protobuf:"varint,4,opt,name=chan_num,json=chanNum,proto3" json:"chan_num,omitempty"`
	SkillInLanguage int32                  `protobuf:"varint,5,opt,name=skill_in_language,json=skillInLanguage,proto3" json:"skill_in_language,omitempty"`
	Message         string                 `protobuf:"bytes,6,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ChannelMessage) Reset() {
	*x = ChannelMessage{}
	mi := &file_EQMessage_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChannelMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelMessage) ProtoMessage() {}

func (x *ChannelMessage) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelMessage.ProtoReflect.Descriptor instead.
func (*ChannelMessage) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{67}
}

func (x *ChannelMessage) GetTargetname() string {
	if x != nil {
		return x.Targetname
	}
	return ""
}

func (x *ChannelMessage) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *ChannelMessage) GetLanguage() int32 {
	if x != nil {
		return x.Language
	}
	return 0
}

func (x *ChannelMessage) GetChanNum() int32 {
	if x != nil {
		return x.ChanNum
	}
	return 0
}

func (x *ChannelMessage) GetSkillInLanguage() int32 {
	if x != nil {
		return x.SkillInLanguage
	}
	return 0
}

func (x *ChannelMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type SpecialMesg struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Header        string                 `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	MsgType       int32                  `protobuf:"varint,2,opt,name=msg_type,json=msgType,proto3" json:"msg_type,omitempty"`
	TargetSpawnId int32                  `protobuf:"varint,3,opt,name=target_spawn_id,json=targetSpawnId,proto3" json:"target_spawn_id,omitempty"`
	Sayer         string                 `protobuf:"bytes,4,opt,name=sayer,proto3" json:"sayer,omitempty"`
	Message       string                 `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpecialMesg) Reset() {
	*x = SpecialMesg{}
	mi := &file_EQMessage_proto_msgTypes[68]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpecialMesg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecialMesg) ProtoMessage() {}

func (x *SpecialMesg) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[68]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecialMesg.ProtoReflect.Descriptor instead.
func (*SpecialMesg) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{68}
}

func (x *SpecialMesg) GetHeader() string {
	if x != nil {
		return x.Header
	}
	return ""
}

func (x *SpecialMesg) GetMsgType() int32 {
	if x != nil {
		return x.MsgType
	}
	return 0
}

func (x *SpecialMesg) GetTargetSpawnId() int32 {
	if x != nil {
		return x.TargetSpawnId
	}
	return 0
}

func (x *SpecialMesg) GetSayer() string {
	if x != nil {
		return x.Sayer
	}
	return ""
}

func (x *SpecialMesg) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type WearChange struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpawnId       int32                  `protobuf:"varint,1,opt,name=spawn_id,json=spawnId,proto3" json:"spawn_id,omitempty"`
	Material      int32                  `protobuf:"varint,2,opt,name=material,proto3" json:"material,omitempty"`
	Color         int32                  `protobuf:"varint,3,opt,name=color,proto3" json:"color,omitempty"`
	WearSlotId    int32                  `protobuf:"varint,4,opt,name=wear_slot_id,json=wearSlotId,proto3" json:"wear_slot_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WearChange) Reset() {
	*x = WearChange{}
	mi := &file_EQMessage_proto_msgTypes[69]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WearChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WearChange) ProtoMessage() {}

func (x *WearChange) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[69]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WearChange.ProtoReflect.Descriptor instead.
func (*WearChange) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{69}
}

func (x *WearChange) GetSpawnId() int32 {
	if x != nil {
		return x.SpawnId
	}
	return 0
}

func (x *WearChange) GetMaterial() int32 {
	if x != nil {
		return x.Material
	}
	return 0
}

func (x *WearChange) GetColor() int32 {
	if x != nil {
		return x.Color
	}
	return 0
}

func (x *WearChange) GetWearSlotId() int32 {
	if x != nil {
		return x.WearSlotId
	}
	return 0
}

type BindWound struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	To            int32                  `protobuf:"varint,1,opt,name=to,proto3" json:"to,omitempty"`
	Type          int32                  `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BindWound) Reset() {
	*x = BindWound{}
	mi := &file_EQMessage_proto_msgTypes[70]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BindWound) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindWound) ProtoMessage() {}

func (x *BindWound) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[70]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindWound.ProtoReflect.Descriptor instead.
func (*BindWound) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{70}
}

func (x *BindWound) GetTo() int32 {
	if x != nil {
		return x.To
	}
	return 0
}

func (x *BindWound) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type ZoneChange struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CharName      string                 `protobuf:"bytes,1,opt,name=char_name,json=charName,proto3" json:"char_name,omitempty"`
	ZoneId        int32                  `protobuf:"varint,2,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	InstanceId    int32                  `protobuf:"varint,3,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	Y             float32                `protobuf:"fixed32,4,opt,name=y,proto3" json:"y,omitempty"`
	X             float32                `protobuf:"fixed32,5,opt,name=x,proto3" json:"x,omitempty"`
	Z             float32                `protobuf:"fixed32,6,opt,name=z,proto3" json:"z,omitempty"`
	ZoneReason    int32                  `protobuf:"varint,7,opt,name=zone_reason,json=zoneReason,proto3" json:"zone_reason,omitempty"`
	Success       int32                  `protobuf:"varint,8,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ZoneChange) Reset() {
	*x = ZoneChange{}
	mi := &file_EQMessage_proto_msgTypes[71]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ZoneChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZoneChange) ProtoMessage() {}

func (x *ZoneChange) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[71]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZoneChange.ProtoReflect.Descriptor instead.
func (*ZoneChange) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{71}
}

func (x *ZoneChange) GetCharName() string {
	if x != nil {
		return x.CharName
	}
	return ""
}

func (x *ZoneChange) GetZoneId() int32 {
	if x != nil {
		return x.ZoneId
	}
	return 0
}

func (x *ZoneChange) GetInstanceId() int32 {
	if x != nil {
		return x.InstanceId
	}
	return 0
}

func (x *ZoneChange) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *ZoneChange) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *ZoneChange) GetZ() float32 {
	if x != nil {
		return x.Z
	}
	return 0
}

func (x *ZoneChange) GetZoneReason() int32 {
	if x != nil {
		return x.ZoneReason
	}
	return 0
}

func (x *ZoneChange) GetSuccess() int32 {
	if x != nil {
		return x.Success
	}
	return 0
}

type RequestClientZoneChange struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ZoneId        int32                  `protobuf:"varint,1,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	InstanceId    int32                  `protobuf:"varint,2,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	Y             float32                `protobuf:"fixed32,3,opt,name=y,proto3" json:"y,omitempty"`
	X             float32                `protobuf:"fixed32,4,opt,name=x,proto3" json:"x,omitempty"`
	Z             float32                `protobuf:"fixed32,5,opt,name=z,proto3" json:"z,omitempty"`
	Heading       float32                `protobuf:"fixed32,6,opt,name=heading,proto3" json:"heading,omitempty"`
	Type          int32                  `protobuf:"varint,7,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestClientZoneChange) Reset() {
	*x = RequestClientZoneChange{}
	mi := &file_EQMessage_proto_msgTypes[72]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestClientZoneChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestClientZoneChange) ProtoMessage() {}

func (x *RequestClientZoneChange) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[72]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestClientZoneChange.ProtoReflect.Descriptor instead.
func (*RequestClientZoneChange) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{72}
}

func (x *RequestClientZoneChange) GetZoneId() int32 {
	if x != nil {
		return x.ZoneId
	}
	return 0
}

func (x *RequestClientZoneChange) GetInstanceId() int32 {
	if x != nil {
		return x.InstanceId
	}
	return 0
}

func (x *RequestClientZoneChange) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *RequestClientZoneChange) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *RequestClientZoneChange) GetZ() float32 {
	if x != nil {
		return x.Z
	}
	return 0
}

func (x *RequestClientZoneChange) GetHeading() float32 {
	if x != nil {
		return x.Heading
	}
	return 0
}

func (x *RequestClientZoneChange) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type Animation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Spawnid       int32                  `protobuf:"varint,1,opt,name=spawnid,proto3" json:"spawnid,omitempty"`
	Speed         int32                  `protobuf:"varint,2,opt,name=speed,proto3" json:"speed,omitempty"`
	Action        int32                  `protobuf:"varint,3,opt,name=action,proto3" json:"action,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Animation) Reset() {
	*x = Animation{}
	mi := &file_EQMessage_proto_msgTypes[73]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Animation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Animation) ProtoMessage() {}

func (x *Animation) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[73]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Animation.ProtoReflect.Descriptor instead.
func (*Animation) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{73}
}

func (x *Animation) GetSpawnid() int32 {
	if x != nil {
		return x.Spawnid
	}
	return 0
}

func (x *Animation) GetSpeed() int32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *Animation) GetAction() int32 {
	if x != nil {
		return x.Action
	}
	return 0
}

type Action struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Target        int32                  `protobuf:"varint,1,opt,name=target,proto3" json:"target,omitempty"`
	Source        int32                  `protobuf:"varint,2,opt,name=source,proto3" json:"source,omitempty"`
	Level         int32                  `protobuf:"varint,3,opt,name=level,proto3" json:"level,omitempty"`
	InstrumentMod int32                  `protobuf:"varint,4,opt,name=instrument_mod,json=instrumentMod,proto3" json:"instrument_mod,omitempty"`
	Force         float32                `protobuf:"fixed32,5,opt,name=force,proto3" json:"force,omitempty"`
	HitHeading    float32                `protobuf:"fixed32,6,opt,name=hit_heading,json=hitHeading,proto3" json:"hit_heading,omitempty"`
	HitPitch      float32                `protobuf:"fixed32,7,opt,name=hit_pitch,json=hitPitch,proto3" json:"hit_pitch,omitempty"`
	Type          int32                  `protobuf:"varint,8,opt,name=type,proto3" json:"type,omitempty"`
	Spell         int32                  `protobuf:"varint,9,opt,name=spell,proto3" json:"spell,omitempty"`
	SpellLevel    int32                  `protobuf:"varint,10,opt,name=spell_level,json=spellLevel,proto3" json:"spell_level,omitempty"`
	EffectFlag    int32                  `protobuf:"varint,11,opt,name=effect_flag,json=effectFlag,proto3" json:"effect_flag,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Action) Reset() {
	*x = Action{}
	mi := &file_EQMessage_proto_msgTypes[74]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Action) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action) ProtoMessage() {}

func (x *Action) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[74]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action.ProtoReflect.Descriptor instead.
func (*Action) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{74}
}

func (x *Action) GetTarget() int32 {
	if x != nil {
		return x.Target
	}
	return 0
}

func (x *Action) GetSource() int32 {
	if x != nil {
		return x.Source
	}
	return 0
}

func (x *Action) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *Action) GetInstrumentMod() int32 {
	if x != nil {
		return x.InstrumentMod
	}
	return 0
}

func (x *Action) GetForce() float32 {
	if x != nil {
		return x.Force
	}
	return 0
}

func (x *Action) GetHitHeading() float32 {
	if x != nil {
		return x.HitHeading
	}
	return 0
}

func (x *Action) GetHitPitch() float32 {
	if x != nil {
		return x.HitPitch
	}
	return 0
}

func (x *Action) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Action) GetSpell() int32 {
	if x != nil {
		return x.Spell
	}
	return 0
}

func (x *Action) GetSpellLevel() int32 {
	if x != nil {
		return x.SpellLevel
	}
	return 0
}

func (x *Action) GetEffectFlag() int32 {
	if x != nil {
		return x.EffectFlag
	}
	return 0
}

type CombatDamage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Target        int32                  `protobuf:"varint,1,opt,name=target,proto3" json:"target,omitempty"`
	Source        int32                  `protobuf:"varint,2,opt,name=source,proto3" json:"source,omitempty"`
	Type          int32                  `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	Spellid       int32                  `protobuf:"varint,4,opt,name=spellid,proto3" json:"spellid,omitempty"`
	Damage        int32                  `protobuf:"varint,5,opt,name=damage,proto3" json:"damage,omitempty"`
	Force         float32                `protobuf:"fixed32,6,opt,name=force,proto3" json:"force,omitempty"`
	HitHeading    float32                `protobuf:"fixed32,7,opt,name=hit_heading,json=hitHeading,proto3" json:"hit_heading,omitempty"`
	HitPitch      float32                `protobuf:"fixed32,8,opt,name=hit_pitch,json=hitPitch,proto3" json:"hit_pitch,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CombatDamage) Reset() {
	*x = CombatDamage{}
	mi := &file_EQMessage_proto_msgTypes[75]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CombatDamage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CombatDamage) ProtoMessage() {}

func (x *CombatDamage) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[75]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CombatDamage.ProtoReflect.Descriptor instead.
func (*CombatDamage) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{75}
}

func (x *CombatDamage) GetTarget() int32 {
	if x != nil {
		return x.Target
	}
	return 0
}

func (x *CombatDamage) GetSource() int32 {
	if x != nil {
		return x.Source
	}
	return 0
}

func (x *CombatDamage) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *CombatDamage) GetSpellid() int32 {
	if x != nil {
		return x.Spellid
	}
	return 0
}

func (x *CombatDamage) GetDamage() int32 {
	if x != nil {
		return x.Damage
	}
	return 0
}

func (x *CombatDamage) GetForce() float32 {
	if x != nil {
		return x.Force
	}
	return 0
}

func (x *CombatDamage) GetHitHeading() float32 {
	if x != nil {
		return x.HitHeading
	}
	return 0
}

func (x *CombatDamage) GetHitPitch() float32 {
	if x != nil {
		return x.HitPitch
	}
	return 0
}

type Consider struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Playerid      int32                  `protobuf:"varint,1,opt,name=playerid,proto3" json:"playerid,omitempty"`
	Targetid      int32                  `protobuf:"varint,2,opt,name=targetid,proto3" json:"targetid,omitempty"`
	Faction       int32                  `protobuf:"varint,3,opt,name=faction,proto3" json:"faction,omitempty"`
	Level         int32                  `protobuf:"varint,4,opt,name=level,proto3" json:"level,omitempty"`
	CurHp         int32                  `protobuf:"varint,5,opt,name=cur_hp,json=curHp,proto3" json:"cur_hp,omitempty"`
	MaxHp         int32                  `protobuf:"varint,6,opt,name=max_hp,json=maxHp,proto3" json:"max_hp,omitempty"`
	Pvpcon        int32                  `protobuf:"varint,7,opt,name=pvpcon,proto3" json:"pvpcon,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Consider) Reset() {
	*x = Consider{}
	mi := &file_EQMessage_proto_msgTypes[76]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Consider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Consider) ProtoMessage() {}

func (x *Consider) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[76]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Consider.ProtoReflect.Descriptor instead.
func (*Consider) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{76}
}

func (x *Consider) GetPlayerid() int32 {
	if x != nil {
		return x.Playerid
	}
	return 0
}

func (x *Consider) GetTargetid() int32 {
	if x != nil {
		return x.Targetid
	}
	return 0
}

func (x *Consider) GetFaction() int32 {
	if x != nil {
		return x.Faction
	}
	return 0
}

func (x *Consider) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *Consider) GetCurHp() int32 {
	if x != nil {
		return x.CurHp
	}
	return 0
}

func (x *Consider) GetMaxHp() int32 {
	if x != nil {
		return x.MaxHp
	}
	return 0
}

func (x *Consider) GetPvpcon() int32 {
	if x != nil {
		return x.Pvpcon
	}
	return 0
}

type Death struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpawnId       int32                  `protobuf:"varint,1,opt,name=spawn_id,json=spawnId,proto3" json:"spawn_id,omitempty"`
	KillerId      int32                  `protobuf:"varint,2,opt,name=killer_id,json=killerId,proto3" json:"killer_id,omitempty"`
	Corpseid      int32                  `protobuf:"varint,3,opt,name=corpseid,proto3" json:"corpseid,omitempty"`
	AttackSkill   int32                  `protobuf:"varint,4,opt,name=attack_skill,json=attackSkill,proto3" json:"attack_skill,omitempty"`
	SpellId       int32                  `protobuf:"varint,5,opt,name=spell_id,json=spellId,proto3" json:"spell_id,omitempty"`
	Bindzoneid    int32                  `protobuf:"varint,6,opt,name=bindzoneid,proto3" json:"bindzoneid,omitempty"`
	Damage        int32                  `protobuf:"varint,7,opt,name=damage,proto3" json:"damage,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Death) Reset() {
	*x = Death{}
	mi := &file_EQMessage_proto_msgTypes[77]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Death) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Death) ProtoMessage() {}

func (x *Death) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[77]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Death.ProtoReflect.Descriptor instead.
func (*Death) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{77}
}

func (x *Death) GetSpawnId() int32 {
	if x != nil {
		return x.SpawnId
	}
	return 0
}

func (x *Death) GetKillerId() int32 {
	if x != nil {
		return x.KillerId
	}
	return 0
}

func (x *Death) GetCorpseid() int32 {
	if x != nil {
		return x.Corpseid
	}
	return 0
}

func (x *Death) GetAttackSkill() int32 {
	if x != nil {
		return x.AttackSkill
	}
	return 0
}

func (x *Death) GetSpellId() int32 {
	if x != nil {
		return x.SpellId
	}
	return 0
}

func (x *Death) GetBindzoneid() int32 {
	if x != nil {
		return x.Bindzoneid
	}
	return 0
}

func (x *Death) GetDamage() int32 {
	if x != nil {
		return x.Damage
	}
	return 0
}

type BecomeCorpse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpawnId       int32                  `protobuf:"varint,1,opt,name=spawn_id,json=spawnId,proto3" json:"spawn_id,omitempty"`
	Y             float32                `protobuf:"fixed32,2,opt,name=y,proto3" json:"y,omitempty"`
	X             float32                `protobuf:"fixed32,3,opt,name=x,proto3" json:"x,omitempty"`
	Z             float32                `protobuf:"fixed32,4,opt,name=z,proto3" json:"z,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BecomeCorpse) Reset() {
	*x = BecomeCorpse{}
	mi := &file_EQMessage_proto_msgTypes[78]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BecomeCorpse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BecomeCorpse) ProtoMessage() {}

func (x *BecomeCorpse) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[78]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BecomeCorpse.ProtoReflect.Descriptor instead.
func (*BecomeCorpse) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{78}
}

func (x *BecomeCorpse) GetSpawnId() int32 {
	if x != nil {
		return x.SpawnId
	}
	return 0
}

func (x *BecomeCorpse) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *BecomeCorpse) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *BecomeCorpse) GetZ() float32 {
	if x != nil {
		return x.Z
	}
	return 0
}

type PlayerPositionUpdateServer struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpawnId       int32                  `protobuf:"varint,1,opt,name=spawn_id,json=spawnId,proto3" json:"spawn_id,omitempty"`
	DeltaHeading  int32                  `protobuf:"varint,2,opt,name=delta_heading,json=deltaHeading,proto3" json:"delta_heading,omitempty"`
	XPos          int32                  `protobuf:"varint,3,opt,name=x_pos,json=xPos,proto3" json:"x_pos,omitempty"`
	YPos          int32                  `protobuf:"varint,4,opt,name=y_pos,json=yPos,proto3" json:"y_pos,omitempty"`
	Animation     int32                  `protobuf:"varint,5,opt,name=animation,proto3" json:"animation,omitempty"`
	ZPos          int32                  `protobuf:"varint,6,opt,name=z_pos,json=zPos,proto3" json:"z_pos,omitempty"`
	DeltaY        int32                  `protobuf:"varint,7,opt,name=delta_y,json=deltaY,proto3" json:"delta_y,omitempty"`
	DeltaX        int32                  `protobuf:"varint,8,opt,name=delta_x,json=deltaX,proto3" json:"delta_x,omitempty"`
	Heading       int32                  `protobuf:"varint,9,opt,name=heading,proto3" json:"heading,omitempty"`
	DeltaZ        int32                  `protobuf:"varint,10,opt,name=delta_z,json=deltaZ,proto3" json:"delta_z,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlayerPositionUpdateServer) Reset() {
	*x = PlayerPositionUpdateServer{}
	mi := &file_EQMessage_proto_msgTypes[79]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerPositionUpdateServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerPositionUpdateServer) ProtoMessage() {}

func (x *PlayerPositionUpdateServer) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[79]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerPositionUpdateServer.ProtoReflect.Descriptor instead.
func (*PlayerPositionUpdateServer) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{79}
}

func (x *PlayerPositionUpdateServer) GetSpawnId() int32 {
	if x != nil {
		return x.SpawnId
	}
	return 0
}

func (x *PlayerPositionUpdateServer) GetDeltaHeading() int32 {
	if x != nil {
		return x.DeltaHeading
	}
	return 0
}

func (x *PlayerPositionUpdateServer) GetXPos() int32 {
	if x != nil {
		return x.XPos
	}
	return 0
}

func (x *PlayerPositionUpdateServer) GetYPos() int32 {
	if x != nil {
		return x.YPos
	}
	return 0
}

func (x *PlayerPositionUpdateServer) GetAnimation() int32 {
	if x != nil {
		return x.Animation
	}
	return 0
}

func (x *PlayerPositionUpdateServer) GetZPos() int32 {
	if x != nil {
		return x.ZPos
	}
	return 0
}

func (x *PlayerPositionUpdateServer) GetDeltaY() int32 {
	if x != nil {
		return x.DeltaY
	}
	return 0
}

func (x *PlayerPositionUpdateServer) GetDeltaX() int32 {
	if x != nil {
		return x.DeltaX
	}
	return 0
}

func (x *PlayerPositionUpdateServer) GetHeading() int32 {
	if x != nil {
		return x.Heading
	}
	return 0
}

func (x *PlayerPositionUpdateServer) GetDeltaZ() int32 {
	if x != nil {
		return x.DeltaZ
	}
	return 0
}

type PlayerPositionUpdateClient struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpawnId       int32                  `protobuf:"varint,1,opt,name=spawn_id,json=spawnId,proto3" json:"spawn_id,omitempty"`
	Sequence      int32                  `protobuf:"varint,2,opt,name=sequence,proto3" json:"sequence,omitempty"`
	YPos          float32                `protobuf:"fixed32,3,opt,name=y_pos,json=yPos,proto3" json:"y_pos,omitempty"`
	DeltaZ        float32                `protobuf:"fixed32,4,opt,name=delta_z,json=deltaZ,proto3" json:"delta_z,omitempty"`
	DeltaX        float32                `protobuf:"fixed32,5,opt,name=delta_x,json=deltaX,proto3" json:"delta_x,omitempty"`
	DeltaY        float32                `protobuf:"fixed32,6,opt,name=delta_y,json=deltaY,proto3" json:"delta_y,omitempty"`
	Animation     int32                  `protobuf:"varint,7,opt,name=animation,proto3" json:"animation,omitempty"`
	DeltaHeading  int32                  `protobuf:"varint,8,opt,name=delta_heading,json=deltaHeading,proto3" json:"delta_heading,omitempty"`
	XPos          float32                `protobuf:"fixed32,9,opt,name=x_pos,json=xPos,proto3" json:"x_pos,omitempty"`
	ZPos          float32                `protobuf:"fixed32,10,opt,name=z_pos,json=zPos,proto3" json:"z_pos,omitempty"`
	Heading       int32                  `protobuf:"varint,11,opt,name=heading,proto3" json:"heading,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlayerPositionUpdateClient) Reset() {
	*x = PlayerPositionUpdateClient{}
	mi := &file_EQMessage_proto_msgTypes[80]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerPositionUpdateClient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerPositionUpdateClient) ProtoMessage() {}

func (x *PlayerPositionUpdateClient) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[80]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerPositionUpdateClient.ProtoReflect.Descriptor instead.
func (*PlayerPositionUpdateClient) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{80}
}

func (x *PlayerPositionUpdateClient) GetSpawnId() int32 {
	if x != nil {
		return x.SpawnId
	}
	return 0
}

func (x *PlayerPositionUpdateClient) GetSequence() int32 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *PlayerPositionUpdateClient) GetYPos() float32 {
	if x != nil {
		return x.YPos
	}
	return 0
}

func (x *PlayerPositionUpdateClient) GetDeltaZ() float32 {
	if x != nil {
		return x.DeltaZ
	}
	return 0
}

func (x *PlayerPositionUpdateClient) GetDeltaX() float32 {
	if x != nil {
		return x.DeltaX
	}
	return 0
}

func (x *PlayerPositionUpdateClient) GetDeltaY() float32 {
	if x != nil {
		return x.DeltaY
	}
	return 0
}

func (x *PlayerPositionUpdateClient) GetAnimation() int32 {
	if x != nil {
		return x.Animation
	}
	return 0
}

func (x *PlayerPositionUpdateClient) GetDeltaHeading() int32 {
	if x != nil {
		return x.DeltaHeading
	}
	return 0
}

func (x *PlayerPositionUpdateClient) GetXPos() float32 {
	if x != nil {
		return x.XPos
	}
	return 0
}

func (x *PlayerPositionUpdateClient) GetZPos() float32 {
	if x != nil {
		return x.ZPos
	}
	return 0
}

func (x *PlayerPositionUpdateClient) GetHeading() int32 {
	if x != nil {
		return x.Heading
	}
	return 0
}

type SpawnHPUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CurHp         int32                  `protobuf:"varint,1,opt,name=cur_hp,json=curHp,proto3" json:"cur_hp,omitempty"`
	MaxHp         int32                  `protobuf:"varint,2,opt,name=max_hp,json=maxHp,proto3" json:"max_hp,omitempty"`
	SpawnId       int32                  `protobuf:"varint,3,opt,name=spawn_id,json=spawnId,proto3" json:"spawn_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpawnHPUpdate) Reset() {
	*x = SpawnHPUpdate{}
	mi := &file_EQMessage_proto_msgTypes[81]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpawnHPUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpawnHPUpdate) ProtoMessage() {}

func (x *SpawnHPUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[81]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpawnHPUpdate.ProtoReflect.Descriptor instead.
func (*SpawnHPUpdate) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{81}
}

func (x *SpawnHPUpdate) GetCurHp() int32 {
	if x != nil {
		return x.CurHp
	}
	return 0
}

func (x *SpawnHPUpdate) GetMaxHp() int32 {
	if x != nil {
		return x.MaxHp
	}
	return 0
}

func (x *SpawnHPUpdate) GetSpawnId() int32 {
	if x != nil {
		return x.SpawnId
	}
	return 0
}

type SpawnHPUpdate2 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpawnId       int32                  `protobuf:"varint,1,opt,name=spawn_id,json=spawnId,proto3" json:"spawn_id,omitempty"`
	Hp            int32                  `protobuf:"varint,2,opt,name=hp,proto3" json:"hp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpawnHPUpdate2) Reset() {
	*x = SpawnHPUpdate2{}
	mi := &file_EQMessage_proto_msgTypes[82]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpawnHPUpdate2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpawnHPUpdate2) ProtoMessage() {}

func (x *SpawnHPUpdate2) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[82]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpawnHPUpdate2.ProtoReflect.Descriptor instead.
func (*SpawnHPUpdate2) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{82}
}

func (x *SpawnHPUpdate2) GetSpawnId() int32 {
	if x != nil {
		return x.SpawnId
	}
	return 0
}

func (x *SpawnHPUpdate2) GetHp() int32 {
	if x != nil {
		return x.Hp
	}
	return 0
}

type Stamina struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Food          int32                  `protobuf:"varint,1,opt,name=food,proto3" json:"food,omitempty"`
	Water         int32                  `protobuf:"varint,2,opt,name=water,proto3" json:"water,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Stamina) Reset() {
	*x = Stamina{}
	mi := &file_EQMessage_proto_msgTypes[83]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Stamina) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stamina) ProtoMessage() {}

func (x *Stamina) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[83]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stamina.ProtoReflect.Descriptor instead.
func (*Stamina) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{83}
}

func (x *Stamina) GetFood() int32 {
	if x != nil {
		return x.Food
	}
	return 0
}

func (x *Stamina) GetWater() int32 {
	if x != nil {
		return x.Water
	}
	return 0
}

type LevelUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Level         int32                  `protobuf:"varint,1,opt,name=level,proto3" json:"level,omitempty"`
	LevelOld      int32                  `protobuf:"varint,2,opt,name=level_old,json=levelOld,proto3" json:"level_old,omitempty"`
	Exp           int32                  `protobuf:"varint,3,opt,name=exp,proto3" json:"exp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LevelUpdate) Reset() {
	*x = LevelUpdate{}
	mi := &file_EQMessage_proto_msgTypes[84]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LevelUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LevelUpdate) ProtoMessage() {}

func (x *LevelUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[84]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LevelUpdate.ProtoReflect.Descriptor instead.
func (*LevelUpdate) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{84}
}

func (x *LevelUpdate) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *LevelUpdate) GetLevelOld() int32 {
	if x != nil {
		return x.LevelOld
	}
	return 0
}

func (x *LevelUpdate) GetExp() int32 {
	if x != nil {
		return x.Exp
	}
	return 0
}

type ExpUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Exp           int32                  `protobuf:"varint,1,opt,name=exp,proto3" json:"exp,omitempty"`
	Aaxp          int32                  `protobuf:"varint,2,opt,name=aaxp,proto3" json:"aaxp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExpUpdate) Reset() {
	*x = ExpUpdate{}
	mi := &file_EQMessage_proto_msgTypes[85]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExpUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpUpdate) ProtoMessage() {}

func (x *ExpUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[85]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpUpdate.ProtoReflect.Descriptor instead.
func (*ExpUpdate) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{85}
}

func (x *ExpUpdate) GetExp() int32 {
	if x != nil {
		return x.Exp
	}
	return 0
}

func (x *ExpUpdate) GetAaxp() int32 {
	if x != nil {
		return x.Aaxp
	}
	return 0
}

type ItemPacket struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	PacketType     ItemPacketType         `protobuf:"varint,1,opt,name=packet_type,json=packetType,proto3,enum=eq.ItemPacketType" json:"packet_type,omitempty"`
	SerializedItem string                 `protobuf:"bytes,2,opt,name=serialized_item,json=serializedItem,proto3" json:"serialized_item,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ItemPacket) Reset() {
	*x = ItemPacket{}
	mi := &file_EQMessage_proto_msgTypes[86]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ItemPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemPacket) ProtoMessage() {}

func (x *ItemPacket) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[86]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemPacket.ProtoReflect.Descriptor instead.
func (*ItemPacket) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{86}
}

func (x *ItemPacket) GetPacketType() ItemPacketType {
	if x != nil {
		return x.PacketType
	}
	return ItemPacketType_ItemPacketViewLink
}

func (x *ItemPacket) GetSerializedItem() string {
	if x != nil {
		return x.SerializedItem
	}
	return ""
}

type BulkItemPacket struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SerializedItem string                 `protobuf:"bytes,1,opt,name=serialized_item,json=serializedItem,proto3" json:"serialized_item,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *BulkItemPacket) Reset() {
	*x = BulkItemPacket{}
	mi := &file_EQMessage_proto_msgTypes[87]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BulkItemPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkItemPacket) ProtoMessage() {}

func (x *BulkItemPacket) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[87]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkItemPacket.ProtoReflect.Descriptor instead.
func (*BulkItemPacket) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{87}
}

func (x *BulkItemPacket) GetSerializedItem() string {
	if x != nil {
		return x.SerializedItem
	}
	return ""
}

type Consume struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Slot          int32                  `protobuf:"varint,1,opt,name=slot,proto3" json:"slot,omitempty"`
	AutoConsumed  int32                  `protobuf:"varint,2,opt,name=auto_consumed,json=autoConsumed,proto3" json:"auto_consumed,omitempty"`
	Type          int32                  `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Consume) Reset() {
	*x = Consume{}
	mi := &file_EQMessage_proto_msgTypes[88]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Consume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Consume) ProtoMessage() {}

func (x *Consume) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[88]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Consume.ProtoReflect.Descriptor instead.
func (*Consume) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{88}
}

func (x *Consume) GetSlot() int32 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *Consume) GetAutoConsumed() int32 {
	if x != nil {
		return x.AutoConsumed
	}
	return 0
}

func (x *Consume) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type DeleteItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FromSlot      int32                  `protobuf:"varint,1,opt,name=from_slot,json=fromSlot,proto3" json:"from_slot,omitempty"`
	ToSlot        int32                  `protobuf:"varint,2,opt,name=to_slot,json=toSlot,proto3" json:"to_slot,omitempty"`
	NumberInStack int32                  `protobuf:"varint,3,opt,name=number_in_stack,json=numberInStack,proto3" json:"number_in_stack,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteItem) Reset() {
	*x = DeleteItem{}
	mi := &file_EQMessage_proto_msgTypes[89]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteItem) ProtoMessage() {}

func (x *DeleteItem) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[89]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteItem.ProtoReflect.Descriptor instead.
func (*DeleteItem) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{89}
}

func (x *DeleteItem) GetFromSlot() int32 {
	if x != nil {
		return x.FromSlot
	}
	return 0
}

func (x *DeleteItem) GetToSlot() int32 {
	if x != nil {
		return x.ToSlot
	}
	return 0
}

func (x *DeleteItem) GetNumberInStack() int32 {
	if x != nil {
		return x.NumberInStack
	}
	return 0
}

type MoveItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FromSlot      int32                  `protobuf:"varint,1,opt,name=from_slot,json=fromSlot,proto3" json:"from_slot,omitempty"`
	ToSlot        int32                  `protobuf:"varint,2,opt,name=to_slot,json=toSlot,proto3" json:"to_slot,omitempty"`
	NumberInStack int32                  `protobuf:"varint,3,opt,name=number_in_stack,json=numberInStack,proto3" json:"number_in_stack,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MoveItem) Reset() {
	*x = MoveItem{}
	mi := &file_EQMessage_proto_msgTypes[90]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MoveItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveItem) ProtoMessage() {}

func (x *MoveItem) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[90]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveItem.ProtoReflect.Descriptor instead.
func (*MoveItem) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{90}
}

func (x *MoveItem) GetFromSlot() int32 {
	if x != nil {
		return x.FromSlot
	}
	return 0
}

func (x *MoveItem) GetToSlot() int32 {
	if x != nil {
		return x.ToSlot
	}
	return 0
}

func (x *MoveItem) GetNumberInStack() int32 {
	if x != nil {
		return x.NumberInStack
	}
	return 0
}

type MultiMoveItemSub struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FromSlot      *InventorySlot         `protobuf:"bytes,1,opt,name=from_slot,json=fromSlot,proto3" json:"from_slot,omitempty"`
	NumberInStack int32                  `protobuf:"varint,2,opt,name=number_in_stack,json=numberInStack,proto3" json:"number_in_stack,omitempty"`
	ToSlot        *InventorySlot         `protobuf:"bytes,3,opt,name=to_slot,json=toSlot,proto3" json:"to_slot,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MultiMoveItemSub) Reset() {
	*x = MultiMoveItemSub{}
	mi := &file_EQMessage_proto_msgTypes[91]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MultiMoveItemSub) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiMoveItemSub) ProtoMessage() {}

func (x *MultiMoveItemSub) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[91]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiMoveItemSub.ProtoReflect.Descriptor instead.
func (*MultiMoveItemSub) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{91}
}

func (x *MultiMoveItemSub) GetFromSlot() *InventorySlot {
	if x != nil {
		return x.FromSlot
	}
	return nil
}

func (x *MultiMoveItemSub) GetNumberInStack() int32 {
	if x != nil {
		return x.NumberInStack
	}
	return 0
}

func (x *MultiMoveItemSub) GetToSlot() *InventorySlot {
	if x != nil {
		return x.ToSlot
	}
	return nil
}

type MultiMoveItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         int32                  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Moves         []*MultiMoveItemSub    `protobuf:"bytes,2,rep,name=moves,proto3" json:"moves,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MultiMoveItem) Reset() {
	*x = MultiMoveItem{}
	mi := &file_EQMessage_proto_msgTypes[92]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MultiMoveItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiMoveItem) ProtoMessage() {}

func (x *MultiMoveItem) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[92]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiMoveItem.ProtoReflect.Descriptor instead.
func (*MultiMoveItem) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{92}
}

func (x *MultiMoveItem) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *MultiMoveItem) GetMoves() []*MultiMoveItemSub {
	if x != nil {
		return x.Moves
	}
	return nil
}

type MoveCoin struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FromSlot      int32                  `protobuf:"varint,1,opt,name=from_slot,json=fromSlot,proto3" json:"from_slot,omitempty"`
	ToSlot        int32                  `protobuf:"varint,2,opt,name=to_slot,json=toSlot,proto3" json:"to_slot,omitempty"`
	Cointype1     int32                  `protobuf:"varint,3,opt,name=cointype1,proto3" json:"cointype1,omitempty"`
	Cointype2     int32                  `protobuf:"varint,4,opt,name=cointype2,proto3" json:"cointype2,omitempty"`
	Amount        int32                  `protobuf:"varint,5,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MoveCoin) Reset() {
	*x = MoveCoin{}
	mi := &file_EQMessage_proto_msgTypes[93]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MoveCoin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveCoin) ProtoMessage() {}

func (x *MoveCoin) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[93]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveCoin.ProtoReflect.Descriptor instead.
func (*MoveCoin) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{93}
}

func (x *MoveCoin) GetFromSlot() int32 {
	if x != nil {
		return x.FromSlot
	}
	return 0
}

func (x *MoveCoin) GetToSlot() int32 {
	if x != nil {
		return x.ToSlot
	}
	return 0
}

func (x *MoveCoin) GetCointype1() int32 {
	if x != nil {
		return x.Cointype1
	}
	return 0
}

func (x *MoveCoin) GetCointype2() int32 {
	if x != nil {
		return x.Cointype2
	}
	return 0
}

func (x *MoveCoin) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type TradeBusy struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ToMobId       int32                  `protobuf:"varint,1,opt,name=to_mob_id,json=toMobId,proto3" json:"to_mob_id,omitempty"`
	FromMobId     int32                  `protobuf:"varint,2,opt,name=from_mob_id,json=fromMobId,proto3" json:"from_mob_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TradeBusy) Reset() {
	*x = TradeBusy{}
	mi := &file_EQMessage_proto_msgTypes[94]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TradeBusy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeBusy) ProtoMessage() {}

func (x *TradeBusy) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[94]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeBusy.ProtoReflect.Descriptor instead.
func (*TradeBusy) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{94}
}

func (x *TradeBusy) GetToMobId() int32 {
	if x != nil {
		return x.ToMobId
	}
	return 0
}

func (x *TradeBusy) GetFromMobId() int32 {
	if x != nil {
		return x.FromMobId
	}
	return 0
}

type TradeCoin struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Trader        int32                  `protobuf:"varint,1,opt,name=trader,proto3" json:"trader,omitempty"`
	Slot          int32                  `protobuf:"varint,2,opt,name=slot,proto3" json:"slot,omitempty"`
	Amount        int32                  `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TradeCoin) Reset() {
	*x = TradeCoin{}
	mi := &file_EQMessage_proto_msgTypes[95]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TradeCoin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeCoin) ProtoMessage() {}

func (x *TradeCoin) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[95]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeCoin.ProtoReflect.Descriptor instead.
func (*TradeCoin) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{95}
}

func (x *TradeCoin) GetTrader() int32 {
	if x != nil {
		return x.Trader
	}
	return 0
}

func (x *TradeCoin) GetSlot() int32 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *TradeCoin) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type TradeMoneyUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Trader        int32                  `protobuf:"varint,1,opt,name=trader,proto3" json:"trader,omitempty"`
	Type          int32                  `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	Amount        int32                  `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TradeMoneyUpdate) Reset() {
	*x = TradeMoneyUpdate{}
	mi := &file_EQMessage_proto_msgTypes[96]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TradeMoneyUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeMoneyUpdate) ProtoMessage() {}

func (x *TradeMoneyUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[96]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeMoneyUpdate.ProtoReflect.Descriptor instead.
func (*TradeMoneyUpdate) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{96}
}

func (x *TradeMoneyUpdate) GetTrader() int32 {
	if x != nil {
		return x.Trader
	}
	return 0
}

func (x *TradeMoneyUpdate) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *TradeMoneyUpdate) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type Surname struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Lastname      string                 `protobuf:"bytes,2,opt,name=lastname,proto3" json:"lastname,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Surname) Reset() {
	*x = Surname{}
	mi := &file_EQMessage_proto_msgTypes[97]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Surname) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Surname) ProtoMessage() {}

func (x *Surname) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[97]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Surname.ProtoReflect.Descriptor instead.
func (*Surname) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{97}
}

func (x *Surname) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Surname) GetLastname() string {
	if x != nil {
		return x.Lastname
	}
	return ""
}

type GuildsList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Guilds        []*StringList          `protobuf:"bytes,1,rep,name=guilds,proto3" json:"guilds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GuildsList) Reset() {
	*x = GuildsList{}
	mi := &file_EQMessage_proto_msgTypes[98]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GuildsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildsList) ProtoMessage() {}

func (x *GuildsList) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[98]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildsList.ProtoReflect.Descriptor instead.
func (*GuildsList) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{98}
}

func (x *GuildsList) GetGuilds() []*StringList {
	if x != nil {
		return x.Guilds
	}
	return nil
}

type MoneyOnCorpse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Response      int32                  `protobuf:"varint,1,opt,name=response,proto3" json:"response,omitempty"`
	Platinum      int32                  `protobuf:"varint,2,opt,name=platinum,proto3" json:"platinum,omitempty"`
	Gold          int32                  `protobuf:"varint,3,opt,name=gold,proto3" json:"gold,omitempty"`
	Silver        int32                  `protobuf:"varint,4,opt,name=silver,proto3" json:"silver,omitempty"`
	Copper        int32                  `protobuf:"varint,5,opt,name=copper,proto3" json:"copper,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MoneyOnCorpse) Reset() {
	*x = MoneyOnCorpse{}
	mi := &file_EQMessage_proto_msgTypes[99]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MoneyOnCorpse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoneyOnCorpse) ProtoMessage() {}

func (x *MoneyOnCorpse) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[99]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoneyOnCorpse.ProtoReflect.Descriptor instead.
func (*MoneyOnCorpse) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{99}
}

func (x *MoneyOnCorpse) GetResponse() int32 {
	if x != nil {
		return x.Response
	}
	return 0
}

func (x *MoneyOnCorpse) GetPlatinum() int32 {
	if x != nil {
		return x.Platinum
	}
	return 0
}

func (x *MoneyOnCorpse) GetGold() int32 {
	if x != nil {
		return x.Gold
	}
	return 0
}

func (x *MoneyOnCorpse) GetSilver() int32 {
	if x != nil {
		return x.Silver
	}
	return 0
}

func (x *MoneyOnCorpse) GetCopper() int32 {
	if x != nil {
		return x.Copper
	}
	return 0
}

type LootingItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Lootee        int32                  `protobuf:"varint,1,opt,name=lootee,proto3" json:"lootee,omitempty"`
	Looter        int32                  `protobuf:"varint,2,opt,name=looter,proto3" json:"looter,omitempty"`
	SlotId        int32                  `protobuf:"varint,3,opt,name=slot_id,json=slotId,proto3" json:"slot_id,omitempty"`
	AutoLoot      int32                  `protobuf:"varint,4,opt,name=auto_loot,json=autoLoot,proto3" json:"auto_loot,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LootingItem) Reset() {
	*x = LootingItem{}
	mi := &file_EQMessage_proto_msgTypes[100]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LootingItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LootingItem) ProtoMessage() {}

func (x *LootingItem) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[100]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LootingItem.ProtoReflect.Descriptor instead.
func (*LootingItem) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{100}
}

func (x *LootingItem) GetLootee() int32 {
	if x != nil {
		return x.Lootee
	}
	return 0
}

func (x *LootingItem) GetLooter() int32 {
	if x != nil {
		return x.Looter
	}
	return 0
}

func (x *LootingItem) GetSlotId() int32 {
	if x != nil {
		return x.SlotId
	}
	return 0
}

func (x *LootingItem) GetAutoLoot() int32 {
	if x != nil {
		return x.AutoLoot
	}
	return 0
}

type GuildManageStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Guildid       int32                  `protobuf:"varint,1,opt,name=guildid,proto3" json:"guildid,omitempty"`
	Oldrank       int32                  `protobuf:"varint,2,opt,name=oldrank,proto3" json:"oldrank,omitempty"`
	Newrank       int32                  `protobuf:"varint,3,opt,name=newrank,proto3" json:"newrank,omitempty"`
	Name          string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GuildManageStatus) Reset() {
	*x = GuildManageStatus{}
	mi := &file_EQMessage_proto_msgTypes[101]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GuildManageStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildManageStatus) ProtoMessage() {}

func (x *GuildManageStatus) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[101]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildManageStatus.ProtoReflect.Descriptor instead.
func (*GuildManageStatus) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{101}
}

func (x *GuildManageStatus) GetGuildid() int32 {
	if x != nil {
		return x.Guildid
	}
	return 0
}

func (x *GuildManageStatus) GetOldrank() int32 {
	if x != nil {
		return x.Oldrank
	}
	return 0
}

func (x *GuildManageStatus) GetNewrank() int32 {
	if x != nil {
		return x.Newrank
	}
	return 0
}

func (x *GuildManageStatus) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GuildJoin struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Guildid       int32                  `protobuf:"varint,1,opt,name=guildid,proto3" json:"guildid,omitempty"`
	Level         int32                  `protobuf:"varint,2,opt,name=level,proto3" json:"level,omitempty"`
	CharClass     int32                  `protobuf:"varint,3,opt,name=char_class,json=charClass,proto3" json:"char_class,omitempty"`
	Rank          int32                  `protobuf:"varint,4,opt,name=rank,proto3" json:"rank,omitempty"`
	Zoneid        int32                  `protobuf:"varint,5,opt,name=zoneid,proto3" json:"zoneid,omitempty"`
	Name          string                 `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GuildJoin) Reset() {
	*x = GuildJoin{}
	mi := &file_EQMessage_proto_msgTypes[102]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GuildJoin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildJoin) ProtoMessage() {}

func (x *GuildJoin) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[102]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildJoin.ProtoReflect.Descriptor instead.
func (*GuildJoin) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{102}
}

func (x *GuildJoin) GetGuildid() int32 {
	if x != nil {
		return x.Guildid
	}
	return 0
}

func (x *GuildJoin) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *GuildJoin) GetCharClass() int32 {
	if x != nil {
		return x.CharClass
	}
	return 0
}

func (x *GuildJoin) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *GuildJoin) GetZoneid() int32 {
	if x != nil {
		return x.Zoneid
	}
	return 0
}

func (x *GuildJoin) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GuildInviteAccept struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Inviter       string                 `protobuf:"bytes,1,opt,name=inviter,proto3" json:"inviter,omitempty"`
	Newmember     string                 `protobuf:"bytes,2,opt,name=newmember,proto3" json:"newmember,omitempty"`
	Response      int32                  `protobuf:"varint,3,opt,name=response,proto3" json:"response,omitempty"`
	Guildeqid     int32                  `protobuf:"varint,4,opt,name=guildeqid,proto3" json:"guildeqid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GuildInviteAccept) Reset() {
	*x = GuildInviteAccept{}
	mi := &file_EQMessage_proto_msgTypes[103]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GuildInviteAccept) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildInviteAccept) ProtoMessage() {}

func (x *GuildInviteAccept) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[103]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildInviteAccept.ProtoReflect.Descriptor instead.
func (*GuildInviteAccept) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{103}
}

func (x *GuildInviteAccept) GetInviter() string {
	if x != nil {
		return x.Inviter
	}
	return ""
}

func (x *GuildInviteAccept) GetNewmember() string {
	if x != nil {
		return x.Newmember
	}
	return ""
}

func (x *GuildInviteAccept) GetResponse() int32 {
	if x != nil {
		return x.Response
	}
	return 0
}

func (x *GuildInviteAccept) GetGuildeqid() int32 {
	if x != nil {
		return x.Guildeqid
	}
	return 0
}

type GuildManageRemove struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Guildeqid     int32                  `protobuf:"varint,1,opt,name=guildeqid,proto3" json:"guildeqid,omitempty"`
	Member        string                 `protobuf:"bytes,2,opt,name=member,proto3" json:"member,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GuildManageRemove) Reset() {
	*x = GuildManageRemove{}
	mi := &file_EQMessage_proto_msgTypes[104]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GuildManageRemove) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildManageRemove) ProtoMessage() {}

func (x *GuildManageRemove) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[104]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildManageRemove.ProtoReflect.Descriptor instead.
func (*GuildManageRemove) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{104}
}

func (x *GuildManageRemove) GetGuildeqid() int32 {
	if x != nil {
		return x.Guildeqid
	}
	return 0
}

func (x *GuildManageRemove) GetMember() string {
	if x != nil {
		return x.Member
	}
	return ""
}

type Guildcommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Othername     string                 `protobuf:"bytes,1,opt,name=othername,proto3" json:"othername,omitempty"`
	Myname        string                 `protobuf:"bytes,2,opt,name=myname,proto3" json:"myname,omitempty"`
	Guildeqid     int32                  `protobuf:"varint,3,opt,name=guildeqid,proto3" json:"guildeqid,omitempty"`
	Officer       int32                  `protobuf:"varint,4,opt,name=officer,proto3" json:"officer,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Guildcommand) Reset() {
	*x = Guildcommand{}
	mi := &file_EQMessage_proto_msgTypes[105]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Guildcommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Guildcommand) ProtoMessage() {}

func (x *Guildcommand) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[105]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Guildcommand.ProtoReflect.Descriptor instead.
func (*Guildcommand) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{105}
}

func (x *Guildcommand) GetOthername() string {
	if x != nil {
		return x.Othername
	}
	return ""
}

func (x *Guildcommand) GetMyname() string {
	if x != nil {
		return x.Myname
	}
	return ""
}

func (x *Guildcommand) GetGuildeqid() int32 {
	if x != nil {
		return x.Guildeqid
	}
	return 0
}

func (x *Guildcommand) GetOfficer() int32 {
	if x != nil {
		return x.Officer
	}
	return 0
}

type OnLevelMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Text          string                 `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	Buttons       int32                  `protobuf:"varint,3,opt,name=buttons,proto3" json:"buttons,omitempty"`
	Duration      int32                  `protobuf:"varint,4,opt,name=duration,proto3" json:"duration,omitempty"`
	PopupId       int32                  `protobuf:"varint,5,opt,name=popup_id,json=popupId,proto3" json:"popup_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OnLevelMessage) Reset() {
	*x = OnLevelMessage{}
	mi := &file_EQMessage_proto_msgTypes[106]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OnLevelMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnLevelMessage) ProtoMessage() {}

func (x *OnLevelMessage) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[106]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnLevelMessage.ProtoReflect.Descriptor instead.
func (*OnLevelMessage) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{106}
}

func (x *OnLevelMessage) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *OnLevelMessage) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *OnLevelMessage) GetButtons() int32 {
	if x != nil {
		return x.Buttons
	}
	return 0
}

func (x *OnLevelMessage) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *OnLevelMessage) GetPopupId() int32 {
	if x != nil {
		return x.PopupId
	}
	return 0
}

type GMZoneRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Charname      string                 `protobuf:"bytes,1,opt,name=charname,proto3" json:"charname,omitempty"`
	ZoneId        int32                  `protobuf:"varint,2,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	X             float32                `protobuf:"fixed32,3,opt,name=x,proto3" json:"x,omitempty"`
	Y             float32                `protobuf:"fixed32,4,opt,name=y,proto3" json:"y,omitempty"`
	Z             float32                `protobuf:"fixed32,5,opt,name=z,proto3" json:"z,omitempty"`
	Heading       float32                `protobuf:"fixed32,6,opt,name=heading,proto3" json:"heading,omitempty"`
	Success       int32                  `protobuf:"varint,7,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GMZoneRequest) Reset() {
	*x = GMZoneRequest{}
	mi := &file_EQMessage_proto_msgTypes[107]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GMZoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GMZoneRequest) ProtoMessage() {}

func (x *GMZoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[107]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GMZoneRequest.ProtoReflect.Descriptor instead.
func (*GMZoneRequest) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{107}
}

func (x *GMZoneRequest) GetCharname() string {
	if x != nil {
		return x.Charname
	}
	return ""
}

func (x *GMZoneRequest) GetZoneId() int32 {
	if x != nil {
		return x.ZoneId
	}
	return 0
}

func (x *GMZoneRequest) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *GMZoneRequest) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *GMZoneRequest) GetZ() float32 {
	if x != nil {
		return x.Z
	}
	return 0
}

func (x *GMZoneRequest) GetHeading() float32 {
	if x != nil {
		return x.Heading
	}
	return 0
}

func (x *GMZoneRequest) GetSuccess() int32 {
	if x != nil {
		return x.Success
	}
	return 0
}

type GMSummon struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Charname      string                 `protobuf:"bytes,1,opt,name=charname,proto3" json:"charname,omitempty"`
	Gmname        string                 `protobuf:"bytes,2,opt,name=gmname,proto3" json:"gmname,omitempty"`
	Success       int32                  `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
	ZoneId        int32                  `protobuf:"varint,4,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	Y             int32                  `protobuf:"varint,5,opt,name=y,proto3" json:"y,omitempty"`
	X             int32                  `protobuf:"varint,6,opt,name=x,proto3" json:"x,omitempty"`
	Z             int32                  `protobuf:"varint,7,opt,name=z,proto3" json:"z,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GMSummon) Reset() {
	*x = GMSummon{}
	mi := &file_EQMessage_proto_msgTypes[108]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GMSummon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GMSummon) ProtoMessage() {}

func (x *GMSummon) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[108]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GMSummon.ProtoReflect.Descriptor instead.
func (*GMSummon) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{108}
}

func (x *GMSummon) GetCharname() string {
	if x != nil {
		return x.Charname
	}
	return ""
}

func (x *GMSummon) GetGmname() string {
	if x != nil {
		return x.Gmname
	}
	return ""
}

func (x *GMSummon) GetSuccess() int32 {
	if x != nil {
		return x.Success
	}
	return 0
}

func (x *GMSummon) GetZoneId() int32 {
	if x != nil {
		return x.ZoneId
	}
	return 0
}

func (x *GMSummon) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *GMSummon) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *GMSummon) GetZ() int32 {
	if x != nil {
		return x.Z
	}
	return 0
}

type GMGoto struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Charname      string                 `protobuf:"bytes,1,opt,name=charname,proto3" json:"charname,omitempty"`
	Gmname        string                 `protobuf:"bytes,2,opt,name=gmname,proto3" json:"gmname,omitempty"`
	Success       int32                  `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
	ZoneId        int32                  `protobuf:"varint,4,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	Y             int32                  `protobuf:"varint,5,opt,name=y,proto3" json:"y,omitempty"`
	X             int32                  `protobuf:"varint,6,opt,name=x,proto3" json:"x,omitempty"`
	Z             int32                  `protobuf:"varint,7,opt,name=z,proto3" json:"z,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GMGoto) Reset() {
	*x = GMGoto{}
	mi := &file_EQMessage_proto_msgTypes[109]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GMGoto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GMGoto) ProtoMessage() {}

func (x *GMGoto) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[109]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GMGoto.ProtoReflect.Descriptor instead.
func (*GMGoto) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{109}
}

func (x *GMGoto) GetCharname() string {
	if x != nil {
		return x.Charname
	}
	return ""
}

func (x *GMGoto) GetGmname() string {
	if x != nil {
		return x.Gmname
	}
	return ""
}

func (x *GMGoto) GetSuccess() int32 {
	if x != nil {
		return x.Success
	}
	return 0
}

func (x *GMGoto) GetZoneId() int32 {
	if x != nil {
		return x.ZoneId
	}
	return 0
}

func (x *GMGoto) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *GMGoto) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *GMGoto) GetZ() int32 {
	if x != nil {
		return x.Z
	}
	return 0
}

type GMLastName struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Gmname        string                 `protobuf:"bytes,2,opt,name=gmname,proto3" json:"gmname,omitempty"`
	Lastname      string                 `protobuf:"bytes,3,opt,name=lastname,proto3" json:"lastname,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GMLastName) Reset() {
	*x = GMLastName{}
	mi := &file_EQMessage_proto_msgTypes[110]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GMLastName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GMLastName) ProtoMessage() {}

func (x *GMLastName) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[110]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GMLastName.ProtoReflect.Descriptor instead.
func (*GMLastName) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{110}
}

func (x *GMLastName) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GMLastName) GetGmname() string {
	if x != nil {
		return x.Gmname
	}
	return ""
}

func (x *GMLastName) GetLastname() string {
	if x != nil {
		return x.Lastname
	}
	return ""
}

type CombatAbility struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MTarget       int32                  `protobuf:"varint,1,opt,name=m_target,json=mTarget,proto3" json:"m_target,omitempty"`
	MAtk          int32                  `protobuf:"varint,2,opt,name=m_atk,json=mAtk,proto3" json:"m_atk,omitempty"`
	MSkill        int32                  `protobuf:"varint,3,opt,name=m_skill,json=mSkill,proto3" json:"m_skill,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CombatAbility) Reset() {
	*x = CombatAbility{}
	mi := &file_EQMessage_proto_msgTypes[111]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CombatAbility) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CombatAbility) ProtoMessage() {}

func (x *CombatAbility) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[111]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CombatAbility.ProtoReflect.Descriptor instead.
func (*CombatAbility) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{111}
}

func (x *CombatAbility) GetMTarget() int32 {
	if x != nil {
		return x.MTarget
	}
	return 0
}

func (x *CombatAbility) GetMAtk() int32 {
	if x != nil {
		return x.MAtk
	}
	return 0
}

func (x *CombatAbility) GetMSkill() int32 {
	if x != nil {
		return x.MSkill
	}
	return 0
}

type Instill_Doubt struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IId           int32                  `protobuf:"varint,1,opt,name=i_id,json=iId,proto3" json:"i_id,omitempty"`
	IAtk          int32                  `protobuf:"varint,2,opt,name=i_atk,json=iAtk,proto3" json:"i_atk,omitempty"`
	IType         int32                  `protobuf:"varint,3,opt,name=i_type,json=iType,proto3" json:"i_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Instill_Doubt) Reset() {
	*x = Instill_Doubt{}
	mi := &file_EQMessage_proto_msgTypes[112]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Instill_Doubt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Instill_Doubt) ProtoMessage() {}

func (x *Instill_Doubt) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[112]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Instill_Doubt.ProtoReflect.Descriptor instead.
func (*Instill_Doubt) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{112}
}

func (x *Instill_Doubt) GetIId() int32 {
	if x != nil {
		return x.IId
	}
	return 0
}

func (x *Instill_Doubt) GetIAtk() int32 {
	if x != nil {
		return x.IAtk
	}
	return 0
}

func (x *Instill_Doubt) GetIType() int32 {
	if x != nil {
		return x.IType
	}
	return 0
}

type GiveItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ToEntity      int32                  `protobuf:"varint,1,opt,name=to_entity,json=toEntity,proto3" json:"to_entity,omitempty"`
	ToEquipSlot   int32                  `protobuf:"varint,2,opt,name=to_equip_slot,json=toEquipSlot,proto3" json:"to_equip_slot,omitempty"`
	FromEntity    int32                  `protobuf:"varint,3,opt,name=from_entity,json=fromEntity,proto3" json:"from_entity,omitempty"`
	FromEquipSlot int32                  `protobuf:"varint,4,opt,name=from_equip_slot,json=fromEquipSlot,proto3" json:"from_equip_slot,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GiveItem) Reset() {
	*x = GiveItem{}
	mi := &file_EQMessage_proto_msgTypes[113]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GiveItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GiveItem) ProtoMessage() {}

func (x *GiveItem) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[113]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GiveItem.ProtoReflect.Descriptor instead.
func (*GiveItem) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{113}
}

func (x *GiveItem) GetToEntity() int32 {
	if x != nil {
		return x.ToEntity
	}
	return 0
}

func (x *GiveItem) GetToEquipSlot() int32 {
	if x != nil {
		return x.ToEquipSlot
	}
	return 0
}

func (x *GiveItem) GetFromEntity() int32 {
	if x != nil {
		return x.FromEntity
	}
	return 0
}

func (x *GiveItem) GetFromEquipSlot() int32 {
	if x != nil {
		return x.FromEquipSlot
	}
	return 0
}

type RandomReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Low           int32                  `protobuf:"varint,1,opt,name=low,proto3" json:"low,omitempty"`
	High          int32                  `protobuf:"varint,2,opt,name=high,proto3" json:"high,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RandomReq) Reset() {
	*x = RandomReq{}
	mi := &file_EQMessage_proto_msgTypes[114]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RandomReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RandomReq) ProtoMessage() {}

func (x *RandomReq) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[114]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RandomReq.ProtoReflect.Descriptor instead.
func (*RandomReq) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{114}
}

func (x *RandomReq) GetLow() int32 {
	if x != nil {
		return x.Low
	}
	return 0
}

func (x *RandomReq) GetHigh() int32 {
	if x != nil {
		return x.High
	}
	return 0
}

type RandomReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Low           int32                  `protobuf:"varint,1,opt,name=low,proto3" json:"low,omitempty"`
	High          int32                  `protobuf:"varint,2,opt,name=high,proto3" json:"high,omitempty"`
	Result        int32                  `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	Name          string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RandomReply) Reset() {
	*x = RandomReply{}
	mi := &file_EQMessage_proto_msgTypes[115]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RandomReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RandomReply) ProtoMessage() {}

func (x *RandomReply) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[115]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RandomReply.ProtoReflect.Descriptor instead.
func (*RandomReply) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{115}
}

func (x *RandomReply) GetLow() int32 {
	if x != nil {
		return x.Low
	}
	return 0
}

func (x *RandomReply) GetHigh() int32 {
	if x != nil {
		return x.High
	}
	return 0
}

func (x *RandomReply) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *RandomReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type LFG struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         int32                  `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LFG) Reset() {
	*x = LFG{}
	mi := &file_EQMessage_proto_msgTypes[116]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LFG) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LFG) ProtoMessage() {}

func (x *LFG) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[116]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LFG.ProtoReflect.Descriptor instead.
func (*LFG) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{116}
}

func (x *LFG) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *LFG) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type LFG_Appearance struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpawnId       int32                  `protobuf:"varint,1,opt,name=spawn_id,json=spawnId,proto3" json:"spawn_id,omitempty"`
	Lfg           int32                  `protobuf:"varint,2,opt,name=lfg,proto3" json:"lfg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LFG_Appearance) Reset() {
	*x = LFG_Appearance{}
	mi := &file_EQMessage_proto_msgTypes[117]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LFG_Appearance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LFG_Appearance) ProtoMessage() {}

func (x *LFG_Appearance) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[117]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LFG_Appearance.ProtoReflect.Descriptor instead.
func (*LFG_Appearance) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{117}
}

func (x *LFG_Appearance) GetSpawnId() int32 {
	if x != nil {
		return x.SpawnId
	}
	return 0
}

func (x *LFG_Appearance) GetLfg() int32 {
	if x != nil {
		return x.Lfg
	}
	return 0
}

type TimeOfDay struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hour          int32                  `protobuf:"varint,1,opt,name=hour,proto3" json:"hour,omitempty"`
	Minute        int32                  `protobuf:"varint,2,opt,name=minute,proto3" json:"minute,omitempty"`
	Day           int32                  `protobuf:"varint,3,opt,name=day,proto3" json:"day,omitempty"`
	Month         int32                  `protobuf:"varint,4,opt,name=month,proto3" json:"month,omitempty"`
	Year          int32                  `protobuf:"varint,5,opt,name=year,proto3" json:"year,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TimeOfDay) Reset() {
	*x = TimeOfDay{}
	mi := &file_EQMessage_proto_msgTypes[118]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimeOfDay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeOfDay) ProtoMessage() {}

func (x *TimeOfDay) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[118]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeOfDay.ProtoReflect.Descriptor instead.
func (*TimeOfDay) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{118}
}

func (x *TimeOfDay) GetHour() int32 {
	if x != nil {
		return x.Hour
	}
	return 0
}

func (x *TimeOfDay) GetMinute() int32 {
	if x != nil {
		return x.Minute
	}
	return 0
}

func (x *TimeOfDay) GetDay() int32 {
	if x != nil {
		return x.Day
	}
	return 0
}

func (x *TimeOfDay) GetMonth() int32 {
	if x != nil {
		return x.Month
	}
	return 0
}

func (x *TimeOfDay) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

type Merchant_Click struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Npcid         int32                  `protobuf:"varint,1,opt,name=npcid,proto3" json:"npcid,omitempty"`
	Playerid      int32                  `protobuf:"varint,2,opt,name=playerid,proto3" json:"playerid,omitempty"`
	Command       int32                  `protobuf:"varint,3,opt,name=command,proto3" json:"command,omitempty"`
	Rate          float32                `protobuf:"fixed32,4,opt,name=rate,proto3" json:"rate,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Merchant_Click) Reset() {
	*x = Merchant_Click{}
	mi := &file_EQMessage_proto_msgTypes[119]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Merchant_Click) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Merchant_Click) ProtoMessage() {}

func (x *Merchant_Click) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[119]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Merchant_Click.ProtoReflect.Descriptor instead.
func (*Merchant_Click) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{119}
}

func (x *Merchant_Click) GetNpcid() int32 {
	if x != nil {
		return x.Npcid
	}
	return 0
}

func (x *Merchant_Click) GetPlayerid() int32 {
	if x != nil {
		return x.Playerid
	}
	return 0
}

func (x *Merchant_Click) GetCommand() int32 {
	if x != nil {
		return x.Command
	}
	return 0
}

func (x *Merchant_Click) GetRate() float32 {
	if x != nil {
		return x.Rate
	}
	return 0
}

type Merchant_Sell struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Npcid         int32                  `protobuf:"varint,1,opt,name=npcid,proto3" json:"npcid,omitempty"`
	Playerid      int32                  `protobuf:"varint,2,opt,name=playerid,proto3" json:"playerid,omitempty"`
	Itemslot      int32                  `protobuf:"varint,3,opt,name=itemslot,proto3" json:"itemslot,omitempty"`
	Quantity      int32                  `protobuf:"varint,4,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Price         int32                  `protobuf:"varint,5,opt,name=price,proto3" json:"price,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Merchant_Sell) Reset() {
	*x = Merchant_Sell{}
	mi := &file_EQMessage_proto_msgTypes[120]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Merchant_Sell) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Merchant_Sell) ProtoMessage() {}

func (x *Merchant_Sell) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[120]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Merchant_Sell.ProtoReflect.Descriptor instead.
func (*Merchant_Sell) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{120}
}

func (x *Merchant_Sell) GetNpcid() int32 {
	if x != nil {
		return x.Npcid
	}
	return 0
}

func (x *Merchant_Sell) GetPlayerid() int32 {
	if x != nil {
		return x.Playerid
	}
	return 0
}

func (x *Merchant_Sell) GetItemslot() int32 {
	if x != nil {
		return x.Itemslot
	}
	return 0
}

func (x *Merchant_Sell) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *Merchant_Sell) GetPrice() int32 {
	if x != nil {
		return x.Price
	}
	return 0
}

type Merchant_Purchase struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Npcid         int32                  `protobuf:"varint,1,opt,name=npcid,proto3" json:"npcid,omitempty"`
	Itemslot      int32                  `protobuf:"varint,2,opt,name=itemslot,proto3" json:"itemslot,omitempty"`
	Quantity      int32                  `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Price         int32                  `protobuf:"varint,4,opt,name=price,proto3" json:"price,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Merchant_Purchase) Reset() {
	*x = Merchant_Purchase{}
	mi := &file_EQMessage_proto_msgTypes[121]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Merchant_Purchase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Merchant_Purchase) ProtoMessage() {}

func (x *Merchant_Purchase) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[121]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Merchant_Purchase.ProtoReflect.Descriptor instead.
func (*Merchant_Purchase) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{121}
}

func (x *Merchant_Purchase) GetNpcid() int32 {
	if x != nil {
		return x.Npcid
	}
	return 0
}

func (x *Merchant_Purchase) GetItemslot() int32 {
	if x != nil {
		return x.Itemslot
	}
	return 0
}

func (x *Merchant_Purchase) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *Merchant_Purchase) GetPrice() int32 {
	if x != nil {
		return x.Price
	}
	return 0
}

type Merchant_DelItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Npcid         int32                  `protobuf:"varint,1,opt,name=npcid,proto3" json:"npcid,omitempty"`
	Playerid      int32                  `protobuf:"varint,2,opt,name=playerid,proto3" json:"playerid,omitempty"`
	Itemslot      int32                  `protobuf:"varint,3,opt,name=itemslot,proto3" json:"itemslot,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Merchant_DelItem) Reset() {
	*x = Merchant_DelItem{}
	mi := &file_EQMessage_proto_msgTypes[122]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Merchant_DelItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Merchant_DelItem) ProtoMessage() {}

func (x *Merchant_DelItem) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[122]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Merchant_DelItem.ProtoReflect.Descriptor instead.
func (*Merchant_DelItem) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{122}
}

func (x *Merchant_DelItem) GetNpcid() int32 {
	if x != nil {
		return x.Npcid
	}
	return 0
}

func (x *Merchant_DelItem) GetPlayerid() int32 {
	if x != nil {
		return x.Playerid
	}
	return 0
}

func (x *Merchant_DelItem) GetItemslot() int32 {
	if x != nil {
		return x.Itemslot
	}
	return 0
}

type Adventure_Purchase struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SomeFlag      int32                  `protobuf:"varint,1,opt,name=some_flag,json=someFlag,proto3" json:"some_flag,omitempty"`
	Npcid         int32                  `protobuf:"varint,2,opt,name=npcid,proto3" json:"npcid,omitempty"`
	Itemid        int32                  `protobuf:"varint,3,opt,name=itemid,proto3" json:"itemid,omitempty"`
	Variable      int32                  `protobuf:"varint,4,opt,name=variable,proto3" json:"variable,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Adventure_Purchase) Reset() {
	*x = Adventure_Purchase{}
	mi := &file_EQMessage_proto_msgTypes[123]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Adventure_Purchase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Adventure_Purchase) ProtoMessage() {}

func (x *Adventure_Purchase) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[123]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Adventure_Purchase.ProtoReflect.Descriptor instead.
func (*Adventure_Purchase) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{123}
}

func (x *Adventure_Purchase) GetSomeFlag() int32 {
	if x != nil {
		return x.SomeFlag
	}
	return 0
}

func (x *Adventure_Purchase) GetNpcid() int32 {
	if x != nil {
		return x.Npcid
	}
	return 0
}

func (x *Adventure_Purchase) GetItemid() int32 {
	if x != nil {
		return x.Itemid
	}
	return 0
}

func (x *Adventure_Purchase) GetVariable() int32 {
	if x != nil {
		return x.Variable
	}
	return 0
}

type Adventure_Sell struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Npcid         int32                  `protobuf:"varint,1,opt,name=npcid,proto3" json:"npcid,omitempty"`
	Slot          int32                  `protobuf:"varint,2,opt,name=slot,proto3" json:"slot,omitempty"`
	Charges       int32                  `protobuf:"varint,3,opt,name=charges,proto3" json:"charges,omitempty"`
	SellPrice     int32                  `protobuf:"varint,4,opt,name=sell_price,json=sellPrice,proto3" json:"sell_price,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Adventure_Sell) Reset() {
	*x = Adventure_Sell{}
	mi := &file_EQMessage_proto_msgTypes[124]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Adventure_Sell) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Adventure_Sell) ProtoMessage() {}

func (x *Adventure_Sell) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[124]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Adventure_Sell.ProtoReflect.Descriptor instead.
func (*Adventure_Sell) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{124}
}

func (x *Adventure_Sell) GetNpcid() int32 {
	if x != nil {
		return x.Npcid
	}
	return 0
}

func (x *Adventure_Sell) GetSlot() int32 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *Adventure_Sell) GetCharges() int32 {
	if x != nil {
		return x.Charges
	}
	return 0
}

func (x *Adventure_Sell) GetSellPrice() int32 {
	if x != nil {
		return x.SellPrice
	}
	return 0
}

type AdventurePoints_Update struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	LdonAvailablePoints int32                  `protobuf:"varint,1,opt,name=ldon_available_points,json=ldonAvailablePoints,proto3" json:"ldon_available_points,omitempty"`
	UnkownApu           []int32                `protobuf:"varint,2,rep,packed,name=unkown_apu,json=unkownApu,proto3" json:"unkown_apu,omitempty"`
	LdonGukPoints       int32                  `protobuf:"varint,3,opt,name=ldon_guk_points,json=ldonGukPoints,proto3" json:"ldon_guk_points,omitempty"`
	LdonMirugalPoints   int32                  `protobuf:"varint,4,opt,name=ldon_mirugal_points,json=ldonMirugalPoints,proto3" json:"ldon_mirugal_points,omitempty"`
	LdonMistmoorePoints int32                  `protobuf:"varint,5,opt,name=ldon_mistmoore_points,json=ldonMistmoorePoints,proto3" json:"ldon_mistmoore_points,omitempty"`
	LdonRujarkianPoints int32                  `protobuf:"varint,6,opt,name=ldon_rujarkian_points,json=ldonRujarkianPoints,proto3" json:"ldon_rujarkian_points,omitempty"`
	LdonTakishPoints    int32                  `protobuf:"varint,7,opt,name=ldon_takish_points,json=ldonTakishPoints,proto3" json:"ldon_takish_points,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *AdventurePoints_Update) Reset() {
	*x = AdventurePoints_Update{}
	mi := &file_EQMessage_proto_msgTypes[125]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdventurePoints_Update) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdventurePoints_Update) ProtoMessage() {}

func (x *AdventurePoints_Update) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[125]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdventurePoints_Update.ProtoReflect.Descriptor instead.
func (*AdventurePoints_Update) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{125}
}

func (x *AdventurePoints_Update) GetLdonAvailablePoints() int32 {
	if x != nil {
		return x.LdonAvailablePoints
	}
	return 0
}

func (x *AdventurePoints_Update) GetUnkownApu() []int32 {
	if x != nil {
		return x.UnkownApu
	}
	return nil
}

func (x *AdventurePoints_Update) GetLdonGukPoints() int32 {
	if x != nil {
		return x.LdonGukPoints
	}
	return 0
}

func (x *AdventurePoints_Update) GetLdonMirugalPoints() int32 {
	if x != nil {
		return x.LdonMirugalPoints
	}
	return 0
}

func (x *AdventurePoints_Update) GetLdonMistmoorePoints() int32 {
	if x != nil {
		return x.LdonMistmoorePoints
	}
	return 0
}

func (x *AdventurePoints_Update) GetLdonRujarkianPoints() int32 {
	if x != nil {
		return x.LdonRujarkianPoints
	}
	return 0
}

func (x *AdventurePoints_Update) GetLdonTakishPoints() int32 {
	if x != nil {
		return x.LdonTakishPoints
	}
	return 0
}

type AdventureFinish struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WinLose       int32                  `protobuf:"varint,1,opt,name=win_lose,json=winLose,proto3" json:"win_lose,omitempty"`
	Points        int32                  `protobuf:"varint,2,opt,name=points,proto3" json:"points,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AdventureFinish) Reset() {
	*x = AdventureFinish{}
	mi := &file_EQMessage_proto_msgTypes[126]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdventureFinish) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdventureFinish) ProtoMessage() {}

func (x *AdventureFinish) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[126]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdventureFinish.ProtoReflect.Descriptor instead.
func (*AdventureFinish) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{126}
}

func (x *AdventureFinish) GetWinLose() int32 {
	if x != nil {
		return x.WinLose
	}
	return 0
}

func (x *AdventureFinish) GetPoints() int32 {
	if x != nil {
		return x.Points
	}
	return 0
}

type AdventureRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Risk          int32                  `protobuf:"varint,1,opt,name=risk,proto3" json:"risk,omitempty"`
	EntityId      int32                  `protobuf:"varint,2,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AdventureRequest) Reset() {
	*x = AdventureRequest{}
	mi := &file_EQMessage_proto_msgTypes[127]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdventureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdventureRequest) ProtoMessage() {}

func (x *AdventureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[127]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdventureRequest.ProtoReflect.Descriptor instead.
func (*AdventureRequest) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{127}
}

func (x *AdventureRequest) GetRisk() int32 {
	if x != nil {
		return x.Risk
	}
	return 0
}

func (x *AdventureRequest) GetEntityId() int32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

type AdventureRequestResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Text          string                 `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Timetoenter   int32                  `protobuf:"varint,2,opt,name=timetoenter,proto3" json:"timetoenter,omitempty"`
	Timeleft      int32                  `protobuf:"varint,3,opt,name=timeleft,proto3" json:"timeleft,omitempty"`
	Risk          int32                  `protobuf:"varint,4,opt,name=risk,proto3" json:"risk,omitempty"`
	X             float32                `protobuf:"fixed32,5,opt,name=x,proto3" json:"x,omitempty"`
	Y             float32                `protobuf:"fixed32,6,opt,name=y,proto3" json:"y,omitempty"`
	Z             float32                `protobuf:"fixed32,7,opt,name=z,proto3" json:"z,omitempty"`
	Showcompass   int32                  `protobuf:"varint,8,opt,name=showcompass,proto3" json:"showcompass,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AdventureRequestResponse) Reset() {
	*x = AdventureRequestResponse{}
	mi := &file_EQMessage_proto_msgTypes[128]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdventureRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdventureRequestResponse) ProtoMessage() {}

func (x *AdventureRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[128]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdventureRequestResponse.ProtoReflect.Descriptor instead.
func (*AdventureRequestResponse) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{128}
}

func (x *AdventureRequestResponse) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *AdventureRequestResponse) GetTimetoenter() int32 {
	if x != nil {
		return x.Timetoenter
	}
	return 0
}

func (x *AdventureRequestResponse) GetTimeleft() int32 {
	if x != nil {
		return x.Timeleft
	}
	return 0
}

func (x *AdventureRequestResponse) GetRisk() int32 {
	if x != nil {
		return x.Risk
	}
	return 0
}

func (x *AdventureRequestResponse) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *AdventureRequestResponse) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *AdventureRequestResponse) GetZ() float32 {
	if x != nil {
		return x.Z
	}
	return 0
}

func (x *AdventureRequestResponse) GetShowcompass() int32 {
	if x != nil {
		return x.Showcompass
	}
	return 0
}

type Illusion struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Spawnid       int32                  `protobuf:"varint,1,opt,name=spawnid,proto3" json:"spawnid,omitempty"`
	Charname      string                 `protobuf:"bytes,2,opt,name=charname,proto3" json:"charname,omitempty"`
	Race          int32                  `protobuf:"varint,3,opt,name=race,proto3" json:"race,omitempty"`
	Gender        int32                  `protobuf:"varint,4,opt,name=gender,proto3" json:"gender,omitempty"`
	Texture       int32                  `protobuf:"varint,5,opt,name=texture,proto3" json:"texture,omitempty"`
	Helmtexture   int32                  `protobuf:"varint,6,opt,name=helmtexture,proto3" json:"helmtexture,omitempty"`
	Face          int32                  `protobuf:"varint,7,opt,name=face,proto3" json:"face,omitempty"`
	Hairstyle     int32                  `protobuf:"varint,8,opt,name=hairstyle,proto3" json:"hairstyle,omitempty"`
	Haircolor     int32                  `protobuf:"varint,9,opt,name=haircolor,proto3" json:"haircolor,omitempty"`
	Beard         int32                  `protobuf:"varint,10,opt,name=beard,proto3" json:"beard,omitempty"`
	Beardcolor    int32                  `protobuf:"varint,11,opt,name=beardcolor,proto3" json:"beardcolor,omitempty"`
	Size          float32                `protobuf:"fixed32,12,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Illusion) Reset() {
	*x = Illusion{}
	mi := &file_EQMessage_proto_msgTypes[129]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Illusion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Illusion) ProtoMessage() {}

func (x *Illusion) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[129]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Illusion.ProtoReflect.Descriptor instead.
func (*Illusion) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{129}
}

func (x *Illusion) GetSpawnid() int32 {
	if x != nil {
		return x.Spawnid
	}
	return 0
}

func (x *Illusion) GetCharname() string {
	if x != nil {
		return x.Charname
	}
	return ""
}

func (x *Illusion) GetRace() int32 {
	if x != nil {
		return x.Race
	}
	return 0
}

func (x *Illusion) GetGender() int32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *Illusion) GetTexture() int32 {
	if x != nil {
		return x.Texture
	}
	return 0
}

func (x *Illusion) GetHelmtexture() int32 {
	if x != nil {
		return x.Helmtexture
	}
	return 0
}

func (x *Illusion) GetFace() int32 {
	if x != nil {
		return x.Face
	}
	return 0
}

func (x *Illusion) GetHairstyle() int32 {
	if x != nil {
		return x.Hairstyle
	}
	return 0
}

func (x *Illusion) GetHaircolor() int32 {
	if x != nil {
		return x.Haircolor
	}
	return 0
}

func (x *Illusion) GetBeard() int32 {
	if x != nil {
		return x.Beard
	}
	return 0
}

func (x *Illusion) GetBeardcolor() int32 {
	if x != nil {
		return x.Beardcolor
	}
	return 0
}

func (x *Illusion) GetSize() float32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type ZonePoint_Entry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Iterator      int32                  `protobuf:"varint,1,opt,name=iterator,proto3" json:"iterator,omitempty"`
	Y             float32                `protobuf:"fixed32,2,opt,name=y,proto3" json:"y,omitempty"`
	X             float32                `protobuf:"fixed32,3,opt,name=x,proto3" json:"x,omitempty"`
	Z             float32                `protobuf:"fixed32,4,opt,name=z,proto3" json:"z,omitempty"`
	Heading       float32                `protobuf:"fixed32,5,opt,name=heading,proto3" json:"heading,omitempty"`
	Zoneid        int32                  `protobuf:"varint,6,opt,name=zoneid,proto3" json:"zoneid,omitempty"`
	Zoneinstance  int32                  `protobuf:"varint,7,opt,name=zoneinstance,proto3" json:"zoneinstance,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ZonePoint_Entry) Reset() {
	*x = ZonePoint_Entry{}
	mi := &file_EQMessage_proto_msgTypes[130]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ZonePoint_Entry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZonePoint_Entry) ProtoMessage() {}

func (x *ZonePoint_Entry) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[130]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZonePoint_Entry.ProtoReflect.Descriptor instead.
func (*ZonePoint_Entry) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{130}
}

func (x *ZonePoint_Entry) GetIterator() int32 {
	if x != nil {
		return x.Iterator
	}
	return 0
}

func (x *ZonePoint_Entry) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *ZonePoint_Entry) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *ZonePoint_Entry) GetZ() float32 {
	if x != nil {
		return x.Z
	}
	return 0
}

func (x *ZonePoint_Entry) GetHeading() float32 {
	if x != nil {
		return x.Heading
	}
	return 0
}

func (x *ZonePoint_Entry) GetZoneid() int32 {
	if x != nil {
		return x.Zoneid
	}
	return 0
}

func (x *ZonePoint_Entry) GetZoneinstance() int32 {
	if x != nil {
		return x.Zoneinstance
	}
	return 0
}

type ZonePoints struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         int32                  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Zpe           []*ZonePoint_Entry     `protobuf:"bytes,2,rep,name=zpe,proto3" json:"zpe,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ZonePoints) Reset() {
	*x = ZonePoints{}
	mi := &file_EQMessage_proto_msgTypes[131]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ZonePoints) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZonePoints) ProtoMessage() {}

func (x *ZonePoints) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[131]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZonePoints.ProtoReflect.Descriptor instead.
func (*ZonePoints) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{131}
}

func (x *ZonePoints) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ZonePoints) GetZpe() []*ZonePoint_Entry {
	if x != nil {
		return x.Zpe
	}
	return nil
}

type SkillUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SkillId       int32                  `protobuf:"varint,1,opt,name=skill_id,json=skillId,proto3" json:"skill_id,omitempty"`
	Value         int32                  `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SkillUpdate) Reset() {
	*x = SkillUpdate{}
	mi := &file_EQMessage_proto_msgTypes[132]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SkillUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkillUpdate) ProtoMessage() {}

func (x *SkillUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[132]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkillUpdate.ProtoReflect.Descriptor instead.
func (*SkillUpdate) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{132}
}

func (x *SkillUpdate) GetSkillId() int32 {
	if x != nil {
		return x.SkillId
	}
	return 0
}

func (x *SkillUpdate) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type ZoneUnavail struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Zonename      string                 `protobuf:"bytes,1,opt,name=zonename,proto3" json:"zonename,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ZoneUnavail) Reset() {
	*x = ZoneUnavail{}
	mi := &file_EQMessage_proto_msgTypes[133]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ZoneUnavail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZoneUnavail) ProtoMessage() {}

func (x *ZoneUnavail) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[133]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZoneUnavail.ProtoReflect.Descriptor instead.
func (*ZoneUnavail) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{133}
}

func (x *ZoneUnavail) GetZonename() string {
	if x != nil {
		return x.Zonename
	}
	return ""
}

type GroupGeneric struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name1         string                 `protobuf:"bytes,1,opt,name=name1,proto3" json:"name1,omitempty"`
	Name2         string                 `protobuf:"bytes,2,opt,name=name2,proto3" json:"name2,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GroupGeneric) Reset() {
	*x = GroupGeneric{}
	mi := &file_EQMessage_proto_msgTypes[134]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroupGeneric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupGeneric) ProtoMessage() {}

func (x *GroupGeneric) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[134]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupGeneric.ProtoReflect.Descriptor instead.
func (*GroupGeneric) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{134}
}

func (x *GroupGeneric) GetName1() string {
	if x != nil {
		return x.Name1
	}
	return ""
}

func (x *GroupGeneric) GetName2() string {
	if x != nil {
		return x.Name2
	}
	return ""
}

type GroupCancel struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name1         string                 `protobuf:"bytes,1,opt,name=name1,proto3" json:"name1,omitempty"`
	Name2         string                 `protobuf:"bytes,2,opt,name=name2,proto3" json:"name2,omitempty"`
	Toggle        int32                  `protobuf:"varint,3,opt,name=toggle,proto3" json:"toggle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GroupCancel) Reset() {
	*x = GroupCancel{}
	mi := &file_EQMessage_proto_msgTypes[135]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroupCancel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupCancel) ProtoMessage() {}

func (x *GroupCancel) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[135]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupCancel.ProtoReflect.Descriptor instead.
func (*GroupCancel) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{135}
}

func (x *GroupCancel) GetName1() string {
	if x != nil {
		return x.Name1
	}
	return ""
}

func (x *GroupCancel) GetName2() string {
	if x != nil {
		return x.Name2
	}
	return ""
}

func (x *GroupCancel) GetToggle() int32 {
	if x != nil {
		return x.Toggle
	}
	return 0
}

type GroupUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Action        int32                  `protobuf:"varint,1,opt,name=action,proto3" json:"action,omitempty"`
	Yourname      string                 `protobuf:"bytes,2,opt,name=yourname,proto3" json:"yourname,omitempty"`
	Membername    []*StringList          `protobuf:"bytes,3,rep,name=membername,proto3" json:"membername,omitempty"`
	Leadersname   string                 `protobuf:"bytes,4,opt,name=leadersname,proto3" json:"leadersname,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GroupUpdate) Reset() {
	*x = GroupUpdate{}
	mi := &file_EQMessage_proto_msgTypes[136]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroupUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupUpdate) ProtoMessage() {}

func (x *GroupUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[136]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupUpdate.ProtoReflect.Descriptor instead.
func (*GroupUpdate) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{136}
}

func (x *GroupUpdate) GetAction() int32 {
	if x != nil {
		return x.Action
	}
	return 0
}

func (x *GroupUpdate) GetYourname() string {
	if x != nil {
		return x.Yourname
	}
	return ""
}

func (x *GroupUpdate) GetMembername() []*StringList {
	if x != nil {
		return x.Membername
	}
	return nil
}

func (x *GroupUpdate) GetLeadersname() string {
	if x != nil {
		return x.Leadersname
	}
	return ""
}

type GroupUpdate2 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Action        int32                  `protobuf:"varint,1,opt,name=action,proto3" json:"action,omitempty"`
	Yourname      string                 `protobuf:"bytes,2,opt,name=yourname,proto3" json:"yourname,omitempty"`
	Membername    []*StringList          `protobuf:"bytes,3,rep,name=membername,proto3" json:"membername,omitempty"`
	Leadersname   string                 `protobuf:"bytes,4,opt,name=leadersname,proto3" json:"leadersname,omitempty"`
	LeaderAas     *GroupLeadershipAA     `protobuf:"bytes,5,opt,name=leader_aas,json=leaderAas,proto3" json:"leader_aas,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GroupUpdate2) Reset() {
	*x = GroupUpdate2{}
	mi := &file_EQMessage_proto_msgTypes[137]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroupUpdate2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupUpdate2) ProtoMessage() {}

func (x *GroupUpdate2) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[137]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupUpdate2.ProtoReflect.Descriptor instead.
func (*GroupUpdate2) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{137}
}

func (x *GroupUpdate2) GetAction() int32 {
	if x != nil {
		return x.Action
	}
	return 0
}

func (x *GroupUpdate2) GetYourname() string {
	if x != nil {
		return x.Yourname
	}
	return ""
}

func (x *GroupUpdate2) GetMembername() []*StringList {
	if x != nil {
		return x.Membername
	}
	return nil
}

func (x *GroupUpdate2) GetLeadersname() string {
	if x != nil {
		return x.Leadersname
	}
	return ""
}

func (x *GroupUpdate2) GetLeaderAas() *GroupLeadershipAA {
	if x != nil {
		return x.LeaderAas
	}
	return nil
}

type GroupJoin struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Action        int32                  `protobuf:"varint,1,opt,name=action,proto3" json:"action,omitempty"`
	Yourname      string                 `protobuf:"bytes,2,opt,name=yourname,proto3" json:"yourname,omitempty"`
	Membername    string                 `protobuf:"bytes,3,opt,name=membername,proto3" json:"membername,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GroupJoin) Reset() {
	*x = GroupJoin{}
	mi := &file_EQMessage_proto_msgTypes[138]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroupJoin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupJoin) ProtoMessage() {}

func (x *GroupJoin) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[138]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupJoin.ProtoReflect.Descriptor instead.
func (*GroupJoin) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{138}
}

func (x *GroupJoin) GetAction() int32 {
	if x != nil {
		return x.Action
	}
	return 0
}

func (x *GroupJoin) GetYourname() string {
	if x != nil {
		return x.Yourname
	}
	return ""
}

func (x *GroupJoin) GetMembername() string {
	if x != nil {
		return x.Membername
	}
	return ""
}

type FaceChange struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Haircolor     int32                  `protobuf:"varint,1,opt,name=haircolor,proto3" json:"haircolor,omitempty"`
	Beardcolor    int32                  `protobuf:"varint,2,opt,name=beardcolor,proto3" json:"beardcolor,omitempty"`
	Eyecolor1     int32                  `protobuf:"varint,3,opt,name=eyecolor1,proto3" json:"eyecolor1,omitempty"`
	Eyecolor2     int32                  `protobuf:"varint,4,opt,name=eyecolor2,proto3" json:"eyecolor2,omitempty"`
	Hairstyle     int32                  `protobuf:"varint,5,opt,name=hairstyle,proto3" json:"hairstyle,omitempty"`
	Beard         int32                  `protobuf:"varint,6,opt,name=beard,proto3" json:"beard,omitempty"`
	Face          int32                  `protobuf:"varint,7,opt,name=face,proto3" json:"face,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FaceChange) Reset() {
	*x = FaceChange{}
	mi := &file_EQMessage_proto_msgTypes[139]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FaceChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FaceChange) ProtoMessage() {}

func (x *FaceChange) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[139]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FaceChange.ProtoReflect.Descriptor instead.
func (*FaceChange) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{139}
}

func (x *FaceChange) GetHaircolor() int32 {
	if x != nil {
		return x.Haircolor
	}
	return 0
}

func (x *FaceChange) GetBeardcolor() int32 {
	if x != nil {
		return x.Beardcolor
	}
	return 0
}

func (x *FaceChange) GetEyecolor1() int32 {
	if x != nil {
		return x.Eyecolor1
	}
	return 0
}

func (x *FaceChange) GetEyecolor2() int32 {
	if x != nil {
		return x.Eyecolor2
	}
	return 0
}

func (x *FaceChange) GetHairstyle() int32 {
	if x != nil {
		return x.Hairstyle
	}
	return 0
}

func (x *FaceChange) GetBeard() int32 {
	if x != nil {
		return x.Beard
	}
	return 0
}

func (x *FaceChange) GetFace() int32 {
	if x != nil {
		return x.Face
	}
	return 0
}

type TradeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ToMobId       int32                  `protobuf:"varint,1,opt,name=to_mob_id,json=toMobId,proto3" json:"to_mob_id,omitempty"`
	FromMobId     int32                  `protobuf:"varint,2,opt,name=from_mob_id,json=fromMobId,proto3" json:"from_mob_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TradeRequest) Reset() {
	*x = TradeRequest{}
	mi := &file_EQMessage_proto_msgTypes[140]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TradeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeRequest) ProtoMessage() {}

func (x *TradeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[140]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeRequest.ProtoReflect.Descriptor instead.
func (*TradeRequest) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{140}
}

func (x *TradeRequest) GetToMobId() int32 {
	if x != nil {
		return x.ToMobId
	}
	return 0
}

func (x *TradeRequest) GetFromMobId() int32 {
	if x != nil {
		return x.FromMobId
	}
	return 0
}

type TradeAccept struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FromMobId     int32                  `protobuf:"varint,1,opt,name=from_mob_id,json=fromMobId,proto3" json:"from_mob_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TradeAccept) Reset() {
	*x = TradeAccept{}
	mi := &file_EQMessage_proto_msgTypes[141]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TradeAccept) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeAccept) ProtoMessage() {}

func (x *TradeAccept) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[141]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeAccept.ProtoReflect.Descriptor instead.
func (*TradeAccept) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{141}
}

func (x *TradeAccept) GetFromMobId() int32 {
	if x != nil {
		return x.FromMobId
	}
	return 0
}

type CancelTrade struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Fromid        int32                  `protobuf:"varint,1,opt,name=fromid,proto3" json:"fromid,omitempty"`
	Action        int32                  `protobuf:"varint,2,opt,name=action,proto3" json:"action,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelTrade) Reset() {
	*x = CancelTrade{}
	mi := &file_EQMessage_proto_msgTypes[142]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelTrade) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelTrade) ProtoMessage() {}

func (x *CancelTrade) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[142]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelTrade.ProtoReflect.Descriptor instead.
func (*CancelTrade) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{142}
}

func (x *CancelTrade) GetFromid() int32 {
	if x != nil {
		return x.Fromid
	}
	return 0
}

func (x *CancelTrade) GetAction() int32 {
	if x != nil {
		return x.Action
	}
	return 0
}

type PetitionUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Petnumber     int32                  `protobuf:"varint,1,opt,name=petnumber,proto3" json:"petnumber,omitempty"`
	Color         int32                  `protobuf:"varint,2,opt,name=color,proto3" json:"color,omitempty"`
	Status        int32                  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	Senttime      int32                  `protobuf:"varint,4,opt,name=senttime,proto3" json:"senttime,omitempty"`
	Accountid     string                 `protobuf:"bytes,5,opt,name=accountid,proto3" json:"accountid,omitempty"`
	Gmsenttoo     string                 `protobuf:"bytes,6,opt,name=gmsenttoo,proto3" json:"gmsenttoo,omitempty"`
	Quetotal      int32                  `protobuf:"varint,7,opt,name=quetotal,proto3" json:"quetotal,omitempty"`
	Charname      string                 `protobuf:"bytes,8,opt,name=charname,proto3" json:"charname,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PetitionUpdate) Reset() {
	*x = PetitionUpdate{}
	mi := &file_EQMessage_proto_msgTypes[143]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PetitionUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PetitionUpdate) ProtoMessage() {}

func (x *PetitionUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[143]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PetitionUpdate.ProtoReflect.Descriptor instead.
func (*PetitionUpdate) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{143}
}

func (x *PetitionUpdate) GetPetnumber() int32 {
	if x != nil {
		return x.Petnumber
	}
	return 0
}

func (x *PetitionUpdate) GetColor() int32 {
	if x != nil {
		return x.Color
	}
	return 0
}

func (x *PetitionUpdate) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *PetitionUpdate) GetSenttime() int32 {
	if x != nil {
		return x.Senttime
	}
	return 0
}

func (x *PetitionUpdate) GetAccountid() string {
	if x != nil {
		return x.Accountid
	}
	return ""
}

func (x *PetitionUpdate) GetGmsenttoo() string {
	if x != nil {
		return x.Gmsenttoo
	}
	return ""
}

func (x *PetitionUpdate) GetQuetotal() int32 {
	if x != nil {
		return x.Quetotal
	}
	return 0
}

func (x *PetitionUpdate) GetCharname() string {
	if x != nil {
		return x.Charname
	}
	return ""
}

type Petition struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Petnumber     int32                  `protobuf:"varint,1,opt,name=petnumber,proto3" json:"petnumber,omitempty"`
	Urgency       int32                  `protobuf:"varint,2,opt,name=urgency,proto3" json:"urgency,omitempty"`
	Accountid     string                 `protobuf:"bytes,3,opt,name=accountid,proto3" json:"accountid,omitempty"`
	Lastgm        string                 `protobuf:"bytes,4,opt,name=lastgm,proto3" json:"lastgm,omitempty"`
	Zone          int32                  `protobuf:"varint,5,opt,name=zone,proto3" json:"zone,omitempty"`
	Charname      string                 `protobuf:"bytes,6,opt,name=charname,proto3" json:"charname,omitempty"`
	Charlevel     int32                  `protobuf:"varint,7,opt,name=charlevel,proto3" json:"charlevel,omitempty"`
	Charclass     int32                  `protobuf:"varint,8,opt,name=charclass,proto3" json:"charclass,omitempty"`
	Charrace      int32                  `protobuf:"varint,9,opt,name=charrace,proto3" json:"charrace,omitempty"`
	Checkouts     int32                  `protobuf:"varint,10,opt,name=checkouts,proto3" json:"checkouts,omitempty"`
	Unavail       int32                  `protobuf:"varint,11,opt,name=unavail,proto3" json:"unavail,omitempty"`
	Senttime      int32                  `protobuf:"varint,12,opt,name=senttime,proto3" json:"senttime,omitempty"`
	Petitiontext  string                 `protobuf:"bytes,13,opt,name=petitiontext,proto3" json:"petitiontext,omitempty"`
	Gmtext        string                 `protobuf:"bytes,14,opt,name=gmtext,proto3" json:"gmtext,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Petition) Reset() {
	*x = Petition{}
	mi := &file_EQMessage_proto_msgTypes[144]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Petition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Petition) ProtoMessage() {}

func (x *Petition) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[144]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Petition.ProtoReflect.Descriptor instead.
func (*Petition) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{144}
}

func (x *Petition) GetPetnumber() int32 {
	if x != nil {
		return x.Petnumber
	}
	return 0
}

func (x *Petition) GetUrgency() int32 {
	if x != nil {
		return x.Urgency
	}
	return 0
}

func (x *Petition) GetAccountid() string {
	if x != nil {
		return x.Accountid
	}
	return ""
}

func (x *Petition) GetLastgm() string {
	if x != nil {
		return x.Lastgm
	}
	return ""
}

func (x *Petition) GetZone() int32 {
	if x != nil {
		return x.Zone
	}
	return 0
}

func (x *Petition) GetCharname() string {
	if x != nil {
		return x.Charname
	}
	return ""
}

func (x *Petition) GetCharlevel() int32 {
	if x != nil {
		return x.Charlevel
	}
	return 0
}

func (x *Petition) GetCharclass() int32 {
	if x != nil {
		return x.Charclass
	}
	return 0
}

func (x *Petition) GetCharrace() int32 {
	if x != nil {
		return x.Charrace
	}
	return 0
}

func (x *Petition) GetCheckouts() int32 {
	if x != nil {
		return x.Checkouts
	}
	return 0
}

func (x *Petition) GetUnavail() int32 {
	if x != nil {
		return x.Unavail
	}
	return 0
}

func (x *Petition) GetSenttime() int32 {
	if x != nil {
		return x.Senttime
	}
	return 0
}

func (x *Petition) GetPetitiontext() string {
	if x != nil {
		return x.Petitiontext
	}
	return ""
}

func (x *Petition) GetGmtext() string {
	if x != nil {
		return x.Gmtext
	}
	return ""
}

type Who_All struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Whom          string                 `protobuf:"bytes,1,opt,name=whom,proto3" json:"whom,omitempty"`
	Wrace         int32                  `protobuf:"varint,2,opt,name=wrace,proto3" json:"wrace,omitempty"`
	Wclass        int32                  `protobuf:"varint,3,opt,name=wclass,proto3" json:"wclass,omitempty"`
	Lvllow        int32                  `protobuf:"varint,4,opt,name=lvllow,proto3" json:"lvllow,omitempty"`
	Lvlhigh       int32                  `protobuf:"varint,5,opt,name=lvlhigh,proto3" json:"lvlhigh,omitempty"`
	Gmlookup      int32                  `protobuf:"varint,6,opt,name=gmlookup,proto3" json:"gmlookup,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Who_All) Reset() {
	*x = Who_All{}
	mi := &file_EQMessage_proto_msgTypes[145]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Who_All) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Who_All) ProtoMessage() {}

func (x *Who_All) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[145]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Who_All.ProtoReflect.Descriptor instead.
func (*Who_All) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{145}
}

func (x *Who_All) GetWhom() string {
	if x != nil {
		return x.Whom
	}
	return ""
}

func (x *Who_All) GetWrace() int32 {
	if x != nil {
		return x.Wrace
	}
	return 0
}

func (x *Who_All) GetWclass() int32 {
	if x != nil {
		return x.Wclass
	}
	return 0
}

func (x *Who_All) GetLvllow() int32 {
	if x != nil {
		return x.Lvllow
	}
	return 0
}

func (x *Who_All) GetLvlhigh() int32 {
	if x != nil {
		return x.Lvlhigh
	}
	return 0
}

func (x *Who_All) GetGmlookup() int32 {
	if x != nil {
		return x.Gmlookup
	}
	return 0
}

type Stun struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Duration      int32                  `protobuf:"varint,1,opt,name=duration,proto3" json:"duration,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Stun) Reset() {
	*x = Stun{}
	mi := &file_EQMessage_proto_msgTypes[146]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Stun) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stun) ProtoMessage() {}

func (x *Stun) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[146]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stun.ProtoReflect.Descriptor instead.
func (*Stun) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{146}
}

func (x *Stun) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

type AugmentItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContainerSlot int32                  `protobuf:"varint,1,opt,name=container_slot,json=containerSlot,proto3" json:"container_slot,omitempty"`
	AugmentSlot   int32                  `protobuf:"varint,2,opt,name=augment_slot,json=augmentSlot,proto3" json:"augment_slot,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AugmentItem) Reset() {
	*x = AugmentItem{}
	mi := &file_EQMessage_proto_msgTypes[147]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AugmentItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AugmentItem) ProtoMessage() {}

func (x *AugmentItem) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[147]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AugmentItem.ProtoReflect.Descriptor instead.
func (*AugmentItem) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{147}
}

func (x *AugmentItem) GetContainerSlot() int32 {
	if x != nil {
		return x.ContainerSlot
	}
	return 0
}

func (x *AugmentItem) GetAugmentSlot() int32 {
	if x != nil {
		return x.AugmentSlot
	}
	return 0
}

type Emote struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Emote) Reset() {
	*x = Emote{}
	mi := &file_EQMessage_proto_msgTypes[148]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Emote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Emote) ProtoMessage() {}

func (x *Emote) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[148]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Emote.ProtoReflect.Descriptor instead.
func (*Emote) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{148}
}

func (x *Emote) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Inspect struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TargetId      int32                  `protobuf:"varint,1,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	PlayerId      int32                  `protobuf:"varint,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Inspect) Reset() {
	*x = Inspect{}
	mi := &file_EQMessage_proto_msgTypes[149]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Inspect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Inspect) ProtoMessage() {}

func (x *Inspect) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[149]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Inspect.ProtoReflect.Descriptor instead.
func (*Inspect) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{149}
}

func (x *Inspect) GetTargetId() int32 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *Inspect) GetPlayerId() int32 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

type InspectResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TargetId      int32                  `protobuf:"varint,1,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	Playerid      int32                  `protobuf:"varint,2,opt,name=playerid,proto3" json:"playerid,omitempty"`
	Itemnames     []*StringList          `protobuf:"bytes,3,rep,name=itemnames,proto3" json:"itemnames,omitempty"`
	Itemicons     []int32                `protobuf:"varint,4,rep,packed,name=itemicons,proto3" json:"itemicons,omitempty"`
	Text          string                 `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InspectResponse) Reset() {
	*x = InspectResponse{}
	mi := &file_EQMessage_proto_msgTypes[150]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InspectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InspectResponse) ProtoMessage() {}

func (x *InspectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[150]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InspectResponse.ProtoReflect.Descriptor instead.
func (*InspectResponse) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{150}
}

func (x *InspectResponse) GetTargetId() int32 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *InspectResponse) GetPlayerid() int32 {
	if x != nil {
		return x.Playerid
	}
	return 0
}

func (x *InspectResponse) GetItemnames() []*StringList {
	if x != nil {
		return x.Itemnames
	}
	return nil
}

func (x *InspectResponse) GetItemicons() []int32 {
	if x != nil {
		return x.Itemicons
	}
	return nil
}

func (x *InspectResponse) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type SetDataRate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Newdatarate   float32                `protobuf:"fixed32,1,opt,name=newdatarate,proto3" json:"newdatarate,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetDataRate) Reset() {
	*x = SetDataRate{}
	mi := &file_EQMessage_proto_msgTypes[151]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetDataRate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDataRate) ProtoMessage() {}

func (x *SetDataRate) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[151]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDataRate.ProtoReflect.Descriptor instead.
func (*SetDataRate) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{151}
}

func (x *SetDataRate) GetNewdatarate() float32 {
	if x != nil {
		return x.Newdatarate
	}
	return 0
}

type SetServerFilter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filters       []int32                `protobuf:"varint,1,rep,packed,name=filters,proto3" json:"filters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetServerFilter) Reset() {
	*x = SetServerFilter{}
	mi := &file_EQMessage_proto_msgTypes[152]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetServerFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetServerFilter) ProtoMessage() {}

func (x *SetServerFilter) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[152]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetServerFilter.ProtoReflect.Descriptor instead.
func (*SetServerFilter) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{152}
}

func (x *SetServerFilter) GetFilters() []int32 {
	if x != nil {
		return x.Filters
	}
	return nil
}

type SetServerFilterAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Blank         []int32                `protobuf:"varint,1,rep,packed,name=blank,proto3" json:"blank,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetServerFilterAck) Reset() {
	*x = SetServerFilterAck{}
	mi := &file_EQMessage_proto_msgTypes[153]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetServerFilterAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetServerFilterAck) ProtoMessage() {}

func (x *SetServerFilterAck) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[153]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetServerFilterAck.ProtoReflect.Descriptor instead.
func (*SetServerFilterAck) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{153}
}

func (x *SetServerFilterAck) GetBlank() []int32 {
	if x != nil {
		return x.Blank
	}
	return nil
}

type IncreaseStat struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Str           int32                  `protobuf:"varint,1,opt,name=str,proto3" json:"str,omitempty"`
	Sta           int32                  `protobuf:"varint,2,opt,name=sta,proto3" json:"sta,omitempty"`
	Agi           int32                  `protobuf:"varint,3,opt,name=agi,proto3" json:"agi,omitempty"`
	Dex           int32                  `protobuf:"varint,4,opt,name=dex,proto3" json:"dex,omitempty"`
	Int_          int32                  `protobuf:"varint,5,opt,name=int_,json=int,proto3" json:"int_,omitempty"`
	Wis           int32                  `protobuf:"varint,6,opt,name=wis,proto3" json:"wis,omitempty"`
	Cha           int32                  `protobuf:"varint,7,opt,name=cha,proto3" json:"cha,omitempty"`
	Fire          int32                  `protobuf:"varint,8,opt,name=fire,proto3" json:"fire,omitempty"`
	Cold          int32                  `protobuf:"varint,9,opt,name=cold,proto3" json:"cold,omitempty"`
	Magic         int32                  `protobuf:"varint,10,opt,name=magic,proto3" json:"magic,omitempty"`
	Poison        int32                  `protobuf:"varint,11,opt,name=poison,proto3" json:"poison,omitempty"`
	Disease       int32                  `protobuf:"varint,12,opt,name=disease,proto3" json:"disease,omitempty"`
	Str2          int32                  `protobuf:"varint,13,opt,name=str2,proto3" json:"str2,omitempty"`
	Sta2          int32                  `protobuf:"varint,14,opt,name=sta2,proto3" json:"sta2,omitempty"`
	Agi2          int32                  `protobuf:"varint,15,opt,name=agi2,proto3" json:"agi2,omitempty"`
	Dex2          int32                  `protobuf:"varint,16,opt,name=dex2,proto3" json:"dex2,omitempty"`
	Int2_         int32                  `protobuf:"varint,17,opt,name=int2_,json=int2,proto3" json:"int2_,omitempty"`
	Wis2          int32                  `protobuf:"varint,18,opt,name=wis2,proto3" json:"wis2,omitempty"`
	Cha2          int32                  `protobuf:"varint,19,opt,name=cha2,proto3" json:"cha2,omitempty"`
	Fire2         int32                  `protobuf:"varint,20,opt,name=fire2,proto3" json:"fire2,omitempty"`
	Cold2         int32                  `protobuf:"varint,21,opt,name=cold2,proto3" json:"cold2,omitempty"`
	Magic2        int32                  `protobuf:"varint,22,opt,name=magic2,proto3" json:"magic2,omitempty"`
	Poison2       int32                  `protobuf:"varint,23,opt,name=poison2,proto3" json:"poison2,omitempty"`
	Disease2      int32                  `protobuf:"varint,24,opt,name=disease2,proto3" json:"disease2,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IncreaseStat) Reset() {
	*x = IncreaseStat{}
	mi := &file_EQMessage_proto_msgTypes[154]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IncreaseStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncreaseStat) ProtoMessage() {}

func (x *IncreaseStat) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[154]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncreaseStat.ProtoReflect.Descriptor instead.
func (*IncreaseStat) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{154}
}

func (x *IncreaseStat) GetStr() int32 {
	if x != nil {
		return x.Str
	}
	return 0
}

func (x *IncreaseStat) GetSta() int32 {
	if x != nil {
		return x.Sta
	}
	return 0
}

func (x *IncreaseStat) GetAgi() int32 {
	if x != nil {
		return x.Agi
	}
	return 0
}

func (x *IncreaseStat) GetDex() int32 {
	if x != nil {
		return x.Dex
	}
	return 0
}

func (x *IncreaseStat) GetInt_() int32 {
	if x != nil {
		return x.Int_
	}
	return 0
}

func (x *IncreaseStat) GetWis() int32 {
	if x != nil {
		return x.Wis
	}
	return 0
}

func (x *IncreaseStat) GetCha() int32 {
	if x != nil {
		return x.Cha
	}
	return 0
}

func (x *IncreaseStat) GetFire() int32 {
	if x != nil {
		return x.Fire
	}
	return 0
}

func (x *IncreaseStat) GetCold() int32 {
	if x != nil {
		return x.Cold
	}
	return 0
}

func (x *IncreaseStat) GetMagic() int32 {
	if x != nil {
		return x.Magic
	}
	return 0
}

func (x *IncreaseStat) GetPoison() int32 {
	if x != nil {
		return x.Poison
	}
	return 0
}

func (x *IncreaseStat) GetDisease() int32 {
	if x != nil {
		return x.Disease
	}
	return 0
}

func (x *IncreaseStat) GetStr2() int32 {
	if x != nil {
		return x.Str2
	}
	return 0
}

func (x *IncreaseStat) GetSta2() int32 {
	if x != nil {
		return x.Sta2
	}
	return 0
}

func (x *IncreaseStat) GetAgi2() int32 {
	if x != nil {
		return x.Agi2
	}
	return 0
}

func (x *IncreaseStat) GetDex2() int32 {
	if x != nil {
		return x.Dex2
	}
	return 0
}

func (x *IncreaseStat) GetInt2_() int32 {
	if x != nil {
		return x.Int2_
	}
	return 0
}

func (x *IncreaseStat) GetWis2() int32 {
	if x != nil {
		return x.Wis2
	}
	return 0
}

func (x *IncreaseStat) GetCha2() int32 {
	if x != nil {
		return x.Cha2
	}
	return 0
}

func (x *IncreaseStat) GetFire2() int32 {
	if x != nil {
		return x.Fire2
	}
	return 0
}

func (x *IncreaseStat) GetCold2() int32 {
	if x != nil {
		return x.Cold2
	}
	return 0
}

func (x *IncreaseStat) GetMagic2() int32 {
	if x != nil {
		return x.Magic2
	}
	return 0
}

func (x *IncreaseStat) GetPoison2() int32 {
	if x != nil {
		return x.Poison2
	}
	return 0
}

func (x *IncreaseStat) GetDisease2() int32 {
	if x != nil {
		return x.Disease2
	}
	return 0
}

type GMName struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Oldname       string                 `protobuf:"bytes,1,opt,name=oldname,proto3" json:"oldname,omitempty"`
	Gmname        string                 `protobuf:"bytes,2,opt,name=gmname,proto3" json:"gmname,omitempty"`
	Newname       string                 `protobuf:"bytes,3,opt,name=newname,proto3" json:"newname,omitempty"`
	Badname       int32                  `protobuf:"varint,4,opt,name=badname,proto3" json:"badname,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GMName) Reset() {
	*x = GMName{}
	mi := &file_EQMessage_proto_msgTypes[155]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GMName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GMName) ProtoMessage() {}

func (x *GMName) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[155]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GMName.ProtoReflect.Descriptor instead.
func (*GMName) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{155}
}

func (x *GMName) GetOldname() string {
	if x != nil {
		return x.Oldname
	}
	return ""
}

func (x *GMName) GetGmname() string {
	if x != nil {
		return x.Gmname
	}
	return ""
}

func (x *GMName) GetNewname() string {
	if x != nil {
		return x.Newname
	}
	return ""
}

func (x *GMName) GetBadname() int32 {
	if x != nil {
		return x.Badname
	}
	return 0
}

type GMDelCorpse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Corpsename    string                 `protobuf:"bytes,1,opt,name=corpsename,proto3" json:"corpsename,omitempty"`
	Gmname        string                 `protobuf:"bytes,2,opt,name=gmname,proto3" json:"gmname,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GMDelCorpse) Reset() {
	*x = GMDelCorpse{}
	mi := &file_EQMessage_proto_msgTypes[156]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GMDelCorpse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GMDelCorpse) ProtoMessage() {}

func (x *GMDelCorpse) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[156]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GMDelCorpse.ProtoReflect.Descriptor instead.
func (*GMDelCorpse) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{156}
}

func (x *GMDelCorpse) GetCorpsename() string {
	if x != nil {
		return x.Corpsename
	}
	return ""
}

func (x *GMDelCorpse) GetGmname() string {
	if x != nil {
		return x.Gmname
	}
	return ""
}

type GMKick struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Gmname        string                 `protobuf:"bytes,2,opt,name=gmname,proto3" json:"gmname,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GMKick) Reset() {
	*x = GMKick{}
	mi := &file_EQMessage_proto_msgTypes[157]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GMKick) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GMKick) ProtoMessage() {}

func (x *GMKick) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[157]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GMKick.ProtoReflect.Descriptor instead.
func (*GMKick) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{157}
}

func (x *GMKick) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GMKick) GetGmname() string {
	if x != nil {
		return x.Gmname
	}
	return ""
}

type GMKill struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Gmname        string                 `protobuf:"bytes,2,opt,name=gmname,proto3" json:"gmname,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GMKill) Reset() {
	*x = GMKill{}
	mi := &file_EQMessage_proto_msgTypes[158]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GMKill) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GMKill) ProtoMessage() {}

func (x *GMKill) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[158]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GMKill.ProtoReflect.Descriptor instead.
func (*GMKill) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{158}
}

func (x *GMKill) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GMKill) GetGmname() string {
	if x != nil {
		return x.Gmname
	}
	return ""
}

type GMEmoteZone struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Text          string                 `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GMEmoteZone) Reset() {
	*x = GMEmoteZone{}
	mi := &file_EQMessage_proto_msgTypes[159]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GMEmoteZone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GMEmoteZone) ProtoMessage() {}

func (x *GMEmoteZone) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[159]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GMEmoteZone.ProtoReflect.Descriptor instead.
func (*GMEmoteZone) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{159}
}

func (x *GMEmoteZone) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type BookText struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Window        int32                  `protobuf:"varint,1,opt,name=window,proto3" json:"window,omitempty"`
	Type          int32                  `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	Booktext      string                 `protobuf:"bytes,3,opt,name=booktext,proto3" json:"booktext,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BookText) Reset() {
	*x = BookText{}
	mi := &file_EQMessage_proto_msgTypes[160]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BookText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookText) ProtoMessage() {}

func (x *BookText) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[160]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookText.ProtoReflect.Descriptor instead.
func (*BookText) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{160}
}

func (x *BookText) GetWindow() int32 {
	if x != nil {
		return x.Window
	}
	return 0
}

func (x *BookText) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *BookText) GetBooktext() string {
	if x != nil {
		return x.Booktext
	}
	return ""
}

type BookRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Window        int32                  `protobuf:"varint,1,opt,name=window,proto3" json:"window,omitempty"`
	Type          int32                  `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	Txtfile       string                 `protobuf:"bytes,3,opt,name=txtfile,proto3" json:"txtfile,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BookRequest) Reset() {
	*x = BookRequest{}
	mi := &file_EQMessage_proto_msgTypes[161]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookRequest) ProtoMessage() {}

func (x *BookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[161]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookRequest.ProtoReflect.Descriptor instead.
func (*BookRequest) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{161}
}

func (x *BookRequest) GetWindow() int32 {
	if x != nil {
		return x.Window
	}
	return 0
}

func (x *BookRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *BookRequest) GetTxtfile() string {
	if x != nil {
		return x.Txtfile
	}
	return ""
}

type Object struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	LinkedListAddr []int32                `protobuf:"varint,1,rep,packed,name=linked_list_addr,json=linkedListAddr,proto3" json:"linked_list_addr,omitempty"`
	DropId         int32                  `protobuf:"varint,2,opt,name=drop_id,json=dropId,proto3" json:"drop_id,omitempty"`
	ZoneId         int32                  `protobuf:"varint,3,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	ZoneInstance   int32                  `protobuf:"varint,4,opt,name=zone_instance,json=zoneInstance,proto3" json:"zone_instance,omitempty"`
	Heading        float32                `protobuf:"fixed32,5,opt,name=heading,proto3" json:"heading,omitempty"`
	Z              float32                `protobuf:"fixed32,6,opt,name=z,proto3" json:"z,omitempty"`
	X              float32                `protobuf:"fixed32,7,opt,name=x,proto3" json:"x,omitempty"`
	Y              float32                `protobuf:"fixed32,8,opt,name=y,proto3" json:"y,omitempty"`
	ObjectName     string                 `protobuf:"bytes,9,opt,name=object_name,json=objectName,proto3" json:"object_name,omitempty"`
	ObjectType     int32                  `protobuf:"varint,10,opt,name=object_type,json=objectType,proto3" json:"object_type,omitempty"`
	SpawnId        int32                  `protobuf:"varint,11,opt,name=spawn_id,json=spawnId,proto3" json:"spawn_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Object) Reset() {
	*x = Object{}
	mi := &file_EQMessage_proto_msgTypes[162]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Object) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Object) ProtoMessage() {}

func (x *Object) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[162]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Object.ProtoReflect.Descriptor instead.
func (*Object) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{162}
}

func (x *Object) GetLinkedListAddr() []int32 {
	if x != nil {
		return x.LinkedListAddr
	}
	return nil
}

func (x *Object) GetDropId() int32 {
	if x != nil {
		return x.DropId
	}
	return 0
}

func (x *Object) GetZoneId() int32 {
	if x != nil {
		return x.ZoneId
	}
	return 0
}

func (x *Object) GetZoneInstance() int32 {
	if x != nil {
		return x.ZoneInstance
	}
	return 0
}

func (x *Object) GetHeading() float32 {
	if x != nil {
		return x.Heading
	}
	return 0
}

func (x *Object) GetZ() float32 {
	if x != nil {
		return x.Z
	}
	return 0
}

func (x *Object) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Object) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Object) GetObjectName() string {
	if x != nil {
		return x.ObjectName
	}
	return ""
}

func (x *Object) GetObjectType() int32 {
	if x != nil {
		return x.ObjectType
	}
	return 0
}

func (x *Object) GetSpawnId() int32 {
	if x != nil {
		return x.SpawnId
	}
	return 0
}

type ClickObject struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DropId        int32                  `protobuf:"varint,1,opt,name=drop_id,json=dropId,proto3" json:"drop_id,omitempty"`
	PlayerId      int32                  `protobuf:"varint,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClickObject) Reset() {
	*x = ClickObject{}
	mi := &file_EQMessage_proto_msgTypes[163]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClickObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClickObject) ProtoMessage() {}

func (x *ClickObject) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[163]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClickObject.ProtoReflect.Descriptor instead.
func (*ClickObject) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{163}
}

func (x *ClickObject) GetDropId() int32 {
	if x != nil {
		return x.DropId
	}
	return 0
}

func (x *ClickObject) GetPlayerId() int32 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

type ClickObjectAction struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      int32                  `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	DropId        int32                  `protobuf:"varint,2,opt,name=drop_id,json=dropId,proto3" json:"drop_id,omitempty"`
	Open          int32                  `protobuf:"varint,3,opt,name=open,proto3" json:"open,omitempty"`
	Type          int32                  `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	Icon          int32                  `protobuf:"varint,5,opt,name=icon,proto3" json:"icon,omitempty"`
	ObjectName    string                 `protobuf:"bytes,6,opt,name=object_name,json=objectName,proto3" json:"object_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClickObjectAction) Reset() {
	*x = ClickObjectAction{}
	mi := &file_EQMessage_proto_msgTypes[164]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClickObjectAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClickObjectAction) ProtoMessage() {}

func (x *ClickObjectAction) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[164]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClickObjectAction.ProtoReflect.Descriptor instead.
func (*ClickObjectAction) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{164}
}

func (x *ClickObjectAction) GetPlayerId() int32 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *ClickObjectAction) GetDropId() int32 {
	if x != nil {
		return x.DropId
	}
	return 0
}

func (x *ClickObjectAction) GetOpen() int32 {
	if x != nil {
		return x.Open
	}
	return 0
}

func (x *ClickObjectAction) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ClickObjectAction) GetIcon() int32 {
	if x != nil {
		return x.Icon
	}
	return 0
}

func (x *ClickObjectAction) GetObjectName() string {
	if x != nil {
		return x.ObjectName
	}
	return ""
}

type Shielding struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TargetId      int32                  `protobuf:"varint,1,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Shielding) Reset() {
	*x = Shielding{}
	mi := &file_EQMessage_proto_msgTypes[165]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Shielding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Shielding) ProtoMessage() {}

func (x *Shielding) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[165]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Shielding.ProtoReflect.Descriptor instead.
func (*Shielding) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{165}
}

func (x *Shielding) GetTargetId() int32 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

type ClickObjectAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      int32                  `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	DropId        int32                  `protobuf:"varint,2,opt,name=drop_id,json=dropId,proto3" json:"drop_id,omitempty"`
	Open          int32                  `protobuf:"varint,3,opt,name=open,proto3" json:"open,omitempty"`
	Type          int32                  `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	Icon          int32                  `protobuf:"varint,5,opt,name=icon,proto3" json:"icon,omitempty"`
	ObjectName    string                 `protobuf:"bytes,6,opt,name=object_name,json=objectName,proto3" json:"object_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClickObjectAck) Reset() {
	*x = ClickObjectAck{}
	mi := &file_EQMessage_proto_msgTypes[166]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClickObjectAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClickObjectAck) ProtoMessage() {}

func (x *ClickObjectAck) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[166]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClickObjectAck.ProtoReflect.Descriptor instead.
func (*ClickObjectAck) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{166}
}

func (x *ClickObjectAck) GetPlayerId() int32 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *ClickObjectAck) GetDropId() int32 {
	if x != nil {
		return x.DropId
	}
	return 0
}

func (x *ClickObjectAck) GetOpen() int32 {
	if x != nil {
		return x.Open
	}
	return 0
}

func (x *ClickObjectAck) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ClickObjectAck) GetIcon() int32 {
	if x != nil {
		return x.Icon
	}
	return 0
}

func (x *ClickObjectAck) GetObjectName() string {
	if x != nil {
		return x.ObjectName
	}
	return ""
}

type CloseContainer struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      int32                  `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	DropId        int32                  `protobuf:"varint,2,opt,name=drop_id,json=dropId,proto3" json:"drop_id,omitempty"`
	Open          int32                  `protobuf:"varint,3,opt,name=open,proto3" json:"open,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloseContainer) Reset() {
	*x = CloseContainer{}
	mi := &file_EQMessage_proto_msgTypes[167]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloseContainer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseContainer) ProtoMessage() {}

func (x *CloseContainer) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[167]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseContainer.ProtoReflect.Descriptor instead.
func (*CloseContainer) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{167}
}

func (x *CloseContainer) GetPlayerId() int32 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *CloseContainer) GetDropId() int32 {
	if x != nil {
		return x.DropId
	}
	return 0
}

func (x *CloseContainer) GetOpen() int32 {
	if x != nil {
		return x.Open
	}
	return 0
}

type Door struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	YPos          float32                `protobuf:"fixed32,2,opt,name=y_pos,json=yPos,proto3" json:"y_pos,omitempty"`
	XPos          float32                `protobuf:"fixed32,3,opt,name=x_pos,json=xPos,proto3" json:"x_pos,omitempty"`
	ZPos          float32                `protobuf:"fixed32,4,opt,name=z_pos,json=zPos,proto3" json:"z_pos,omitempty"`
	Heading       float32                `protobuf:"fixed32,5,opt,name=heading,proto3" json:"heading,omitempty"`
	Incline       int32                  `protobuf:"varint,6,opt,name=incline,proto3" json:"incline,omitempty"`
	Size          int32                  `protobuf:"varint,7,opt,name=size,proto3" json:"size,omitempty"`
	DoorId        int32                  `protobuf:"varint,8,opt,name=door_id,json=doorId,proto3" json:"door_id,omitempty"`
	Opentype      int32                  `protobuf:"varint,9,opt,name=opentype,proto3" json:"opentype,omitempty"`
	StateAtSpawn  int32                  `protobuf:"varint,10,opt,name=state_at_spawn,json=stateAtSpawn,proto3" json:"state_at_spawn,omitempty"`
	InvertState   int32                  `protobuf:"varint,11,opt,name=invert_state,json=invertState,proto3" json:"invert_state,omitempty"`
	DoorParam     int32                  `protobuf:"varint,12,opt,name=door_param,json=doorParam,proto3" json:"door_param,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Door) Reset() {
	*x = Door{}
	mi := &file_EQMessage_proto_msgTypes[168]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Door) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Door) ProtoMessage() {}

func (x *Door) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[168]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Door.ProtoReflect.Descriptor instead.
func (*Door) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{168}
}

func (x *Door) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Door) GetYPos() float32 {
	if x != nil {
		return x.YPos
	}
	return 0
}

func (x *Door) GetXPos() float32 {
	if x != nil {
		return x.XPos
	}
	return 0
}

func (x *Door) GetZPos() float32 {
	if x != nil {
		return x.ZPos
	}
	return 0
}

func (x *Door) GetHeading() float32 {
	if x != nil {
		return x.Heading
	}
	return 0
}

func (x *Door) GetIncline() int32 {
	if x != nil {
		return x.Incline
	}
	return 0
}

func (x *Door) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Door) GetDoorId() int32 {
	if x != nil {
		return x.DoorId
	}
	return 0
}

func (x *Door) GetOpentype() int32 {
	if x != nil {
		return x.Opentype
	}
	return 0
}

func (x *Door) GetStateAtSpawn() int32 {
	if x != nil {
		return x.StateAtSpawn
	}
	return 0
}

func (x *Door) GetInvertState() int32 {
	if x != nil {
		return x.InvertState
	}
	return 0
}

func (x *Door) GetDoorParam() int32 {
	if x != nil {
		return x.DoorParam
	}
	return 0
}

type DoorSpawns struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         int32                  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Doors         []*Door                `protobuf:"bytes,2,rep,name=doors,proto3" json:"doors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DoorSpawns) Reset() {
	*x = DoorSpawns{}
	mi := &file_EQMessage_proto_msgTypes[169]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DoorSpawns) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoorSpawns) ProtoMessage() {}

func (x *DoorSpawns) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[169]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoorSpawns.ProtoReflect.Descriptor instead.
func (*DoorSpawns) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{169}
}

func (x *DoorSpawns) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *DoorSpawns) GetDoors() []*Door {
	if x != nil {
		return x.Doors
	}
	return nil
}

type ClickDoor struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Doorid        int32                  `protobuf:"varint,1,opt,name=doorid,proto3" json:"doorid,omitempty"`
	Picklockskill int32                  `protobuf:"varint,2,opt,name=picklockskill,proto3" json:"picklockskill,omitempty"`
	ItemId        int32                  `protobuf:"varint,3,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	PlayerId      int32                  `protobuf:"varint,4,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClickDoor) Reset() {
	*x = ClickDoor{}
	mi := &file_EQMessage_proto_msgTypes[170]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClickDoor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClickDoor) ProtoMessage() {}

func (x *ClickDoor) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[170]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClickDoor.ProtoReflect.Descriptor instead.
func (*ClickDoor) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{170}
}

func (x *ClickDoor) GetDoorid() int32 {
	if x != nil {
		return x.Doorid
	}
	return 0
}

func (x *ClickDoor) GetPicklockskill() int32 {
	if x != nil {
		return x.Picklockskill
	}
	return 0
}

func (x *ClickDoor) GetItemId() int32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *ClickDoor) GetPlayerId() int32 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

type MoveDoor struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Doorid        int32                  `protobuf:"varint,1,opt,name=doorid,proto3" json:"doorid,omitempty"`
	Action        int32                  `protobuf:"varint,2,opt,name=action,proto3" json:"action,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MoveDoor) Reset() {
	*x = MoveDoor{}
	mi := &file_EQMessage_proto_msgTypes[171]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MoveDoor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveDoor) ProtoMessage() {}

func (x *MoveDoor) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[171]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveDoor.ProtoReflect.Descriptor instead.
func (*MoveDoor) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{171}
}

func (x *MoveDoor) GetDoorid() int32 {
	if x != nil {
		return x.Doorid
	}
	return 0
}

func (x *MoveDoor) GetAction() int32 {
	if x != nil {
		return x.Action
	}
	return 0
}

type ControlBoat struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BoatId        int32                  `protobuf:"varint,1,opt,name=boat_id,json=boatId,proto3" json:"boat_id,omitempty"`
	TakeControl   bool                   `protobuf:"varint,2,opt,name=take_control,json=takeControl,proto3" json:"take_control,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ControlBoat) Reset() {
	*x = ControlBoat{}
	mi := &file_EQMessage_proto_msgTypes[172]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ControlBoat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlBoat) ProtoMessage() {}

func (x *ControlBoat) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[172]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlBoat.ProtoReflect.Descriptor instead.
func (*ControlBoat) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{172}
}

func (x *ControlBoat) GetBoatId() int32 {
	if x != nil {
		return x.BoatId
	}
	return 0
}

func (x *ControlBoat) GetTakeControl() bool {
	if x != nil {
		return x.TakeControl
	}
	return false
}

type BecomeNPC struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Maxlevel      int32                  `protobuf:"varint,2,opt,name=maxlevel,proto3" json:"maxlevel,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BecomeNPC) Reset() {
	*x = BecomeNPC{}
	mi := &file_EQMessage_proto_msgTypes[173]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BecomeNPC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BecomeNPC) ProtoMessage() {}

func (x *BecomeNPC) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[173]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BecomeNPC.ProtoReflect.Descriptor instead.
func (*BecomeNPC) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{173}
}

func (x *BecomeNPC) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BecomeNPC) GetMaxlevel() int32 {
	if x != nil {
		return x.Maxlevel
	}
	return 0
}

type Underworld struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Speed         float32                `protobuf:"fixed32,1,opt,name=speed,proto3" json:"speed,omitempty"`
	Y             float32                `protobuf:"fixed32,2,opt,name=y,proto3" json:"y,omitempty"`
	X             float32                `protobuf:"fixed32,3,opt,name=x,proto3" json:"x,omitempty"`
	Z             float32                `protobuf:"fixed32,4,opt,name=z,proto3" json:"z,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Underworld) Reset() {
	*x = Underworld{}
	mi := &file_EQMessage_proto_msgTypes[174]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Underworld) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Underworld) ProtoMessage() {}

func (x *Underworld) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[174]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Underworld.ProtoReflect.Descriptor instead.
func (*Underworld) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{174}
}

func (x *Underworld) GetSpeed() float32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *Underworld) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Underworld) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Underworld) GetZ() float32 {
	if x != nil {
		return x.Z
	}
	return 0
}

type Resurrect struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ZoneId        int32                  `protobuf:"varint,1,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	InstanceId    int32                  `protobuf:"varint,2,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	Y             float32                `protobuf:"fixed32,3,opt,name=y,proto3" json:"y,omitempty"`
	X             float32                `protobuf:"fixed32,4,opt,name=x,proto3" json:"x,omitempty"`
	Z             float32                `protobuf:"fixed32,5,opt,name=z,proto3" json:"z,omitempty"`
	YourName      string                 `protobuf:"bytes,6,opt,name=your_name,json=yourName,proto3" json:"your_name,omitempty"`
	RezzerName    string                 `protobuf:"bytes,7,opt,name=rezzer_name,json=rezzerName,proto3" json:"rezzer_name,omitempty"`
	Spellid       int32                  `protobuf:"varint,8,opt,name=spellid,proto3" json:"spellid,omitempty"`
	CorpseName    string                 `protobuf:"bytes,9,opt,name=corpse_name,json=corpseName,proto3" json:"corpse_name,omitempty"`
	Action        int32                  `protobuf:"varint,10,opt,name=action,proto3" json:"action,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Resurrect) Reset() {
	*x = Resurrect{}
	mi := &file_EQMessage_proto_msgTypes[175]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Resurrect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resurrect) ProtoMessage() {}

func (x *Resurrect) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[175]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resurrect.ProtoReflect.Descriptor instead.
func (*Resurrect) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{175}
}

func (x *Resurrect) GetZoneId() int32 {
	if x != nil {
		return x.ZoneId
	}
	return 0
}

func (x *Resurrect) GetInstanceId() int32 {
	if x != nil {
		return x.InstanceId
	}
	return 0
}

func (x *Resurrect) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Resurrect) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Resurrect) GetZ() float32 {
	if x != nil {
		return x.Z
	}
	return 0
}

func (x *Resurrect) GetYourName() string {
	if x != nil {
		return x.YourName
	}
	return ""
}

func (x *Resurrect) GetRezzerName() string {
	if x != nil {
		return x.RezzerName
	}
	return ""
}

func (x *Resurrect) GetSpellid() int32 {
	if x != nil {
		return x.Spellid
	}
	return 0
}

func (x *Resurrect) GetCorpseName() string {
	if x != nil {
		return x.CorpseName
	}
	return ""
}

func (x *Resurrect) GetAction() int32 {
	if x != nil {
		return x.Action
	}
	return 0
}

type SetRunMode struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Mode          int32                  `protobuf:"varint,1,opt,name=mode,proto3" json:"mode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetRunMode) Reset() {
	*x = SetRunMode{}
	mi := &file_EQMessage_proto_msgTypes[176]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetRunMode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRunMode) ProtoMessage() {}

func (x *SetRunMode) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[176]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRunMode.ProtoReflect.Descriptor instead.
func (*SetRunMode) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{176}
}

func (x *SetRunMode) GetMode() int32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

type EnvDamage2 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Damage        int32                  `protobuf:"varint,2,opt,name=damage,proto3" json:"damage,omitempty"`
	Dmgtype       int32                  `protobuf:"varint,3,opt,name=dmgtype,proto3" json:"dmgtype,omitempty"`
	Constant      int32                  `protobuf:"varint,4,opt,name=constant,proto3" json:"constant,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnvDamage2) Reset() {
	*x = EnvDamage2{}
	mi := &file_EQMessage_proto_msgTypes[177]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnvDamage2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvDamage2) ProtoMessage() {}

func (x *EnvDamage2) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[177]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvDamage2.ProtoReflect.Descriptor instead.
func (*EnvDamage2) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{177}
}

func (x *EnvDamage2) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EnvDamage2) GetDamage() int32 {
	if x != nil {
		return x.Damage
	}
	return 0
}

func (x *EnvDamage2) GetDmgtype() int32 {
	if x != nil {
		return x.Dmgtype
	}
	return 0
}

func (x *EnvDamage2) GetConstant() int32 {
	if x != nil {
		return x.Constant
	}
	return 0
}

type BazaarWindowStart struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Action        int32                  `protobuf:"varint,1,opt,name=action,proto3" json:"action,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BazaarWindowStart) Reset() {
	*x = BazaarWindowStart{}
	mi := &file_EQMessage_proto_msgTypes[178]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BazaarWindowStart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BazaarWindowStart) ProtoMessage() {}

func (x *BazaarWindowStart) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[178]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BazaarWindowStart.ProtoReflect.Descriptor instead.
func (*BazaarWindowStart) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{178}
}

func (x *BazaarWindowStart) GetAction() int32 {
	if x != nil {
		return x.Action
	}
	return 0
}

type BazaarWelcome struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Beginning     *BazaarWindowStart     `protobuf:"bytes,1,opt,name=beginning,proto3" json:"beginning,omitempty"`
	Traders       int32                  `protobuf:"varint,2,opt,name=traders,proto3" json:"traders,omitempty"`
	Items         int32                  `protobuf:"varint,3,opt,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BazaarWelcome) Reset() {
	*x = BazaarWelcome{}
	mi := &file_EQMessage_proto_msgTypes[179]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BazaarWelcome) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BazaarWelcome) ProtoMessage() {}

func (x *BazaarWelcome) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[179]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BazaarWelcome.ProtoReflect.Descriptor instead.
func (*BazaarWelcome) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{179}
}

func (x *BazaarWelcome) GetBeginning() *BazaarWindowStart {
	if x != nil {
		return x.Beginning
	}
	return nil
}

func (x *BazaarWelcome) GetTraders() int32 {
	if x != nil {
		return x.Traders
	}
	return 0
}

func (x *BazaarWelcome) GetItems() int32 {
	if x != nil {
		return x.Items
	}
	return 0
}

type BazaarSearch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Beginning     *BazaarWindowStart     `protobuf:"bytes,1,opt,name=beginning,proto3" json:"beginning,omitempty"`
	Traderid      int32                  `protobuf:"varint,2,opt,name=traderid,proto3" json:"traderid,omitempty"`
	CharClass     int32                  `protobuf:"varint,3,opt,name=char_class,json=charClass,proto3" json:"char_class,omitempty"`
	Race          int32                  `protobuf:"varint,4,opt,name=race,proto3" json:"race,omitempty"`
	Stat          int32                  `protobuf:"varint,5,opt,name=stat,proto3" json:"stat,omitempty"`
	Slot          int32                  `protobuf:"varint,6,opt,name=slot,proto3" json:"slot,omitempty"`
	Type          int32                  `protobuf:"varint,7,opt,name=type,proto3" json:"type,omitempty"`
	Name          string                 `protobuf:"bytes,8,opt,name=name,proto3" json:"name,omitempty"`
	Minprice      int32                  `protobuf:"varint,9,opt,name=minprice,proto3" json:"minprice,omitempty"`
	Maxprice      int32                  `protobuf:"varint,10,opt,name=maxprice,proto3" json:"maxprice,omitempty"`
	Minlevel      int32                  `protobuf:"varint,11,opt,name=minlevel,proto3" json:"minlevel,omitempty"`
	Maxlevel      int32                  `protobuf:"varint,12,opt,name=maxlevel,proto3" json:"maxlevel,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BazaarSearch) Reset() {
	*x = BazaarSearch{}
	mi := &file_EQMessage_proto_msgTypes[180]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BazaarSearch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BazaarSearch) ProtoMessage() {}

func (x *BazaarSearch) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[180]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BazaarSearch.ProtoReflect.Descriptor instead.
func (*BazaarSearch) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{180}
}

func (x *BazaarSearch) GetBeginning() *BazaarWindowStart {
	if x != nil {
		return x.Beginning
	}
	return nil
}

func (x *BazaarSearch) GetTraderid() int32 {
	if x != nil {
		return x.Traderid
	}
	return 0
}

func (x *BazaarSearch) GetCharClass() int32 {
	if x != nil {
		return x.CharClass
	}
	return 0
}

func (x *BazaarSearch) GetRace() int32 {
	if x != nil {
		return x.Race
	}
	return 0
}

func (x *BazaarSearch) GetStat() int32 {
	if x != nil {
		return x.Stat
	}
	return 0
}

func (x *BazaarSearch) GetSlot() int32 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *BazaarSearch) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *BazaarSearch) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BazaarSearch) GetMinprice() int32 {
	if x != nil {
		return x.Minprice
	}
	return 0
}

func (x *BazaarSearch) GetMaxprice() int32 {
	if x != nil {
		return x.Maxprice
	}
	return 0
}

func (x *BazaarSearch) GetMinlevel() int32 {
	if x != nil {
		return x.Minlevel
	}
	return 0
}

func (x *BazaarSearch) GetMaxlevel() int32 {
	if x != nil {
		return x.Maxlevel
	}
	return 0
}

type BazaarInspect struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ItemId        int32                  `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BazaarInspect) Reset() {
	*x = BazaarInspect{}
	mi := &file_EQMessage_proto_msgTypes[181]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BazaarInspect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BazaarInspect) ProtoMessage() {}

func (x *BazaarInspect) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[181]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BazaarInspect.ProtoReflect.Descriptor instead.
func (*BazaarInspect) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{181}
}

func (x *BazaarInspect) GetItemId() int32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *BazaarInspect) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type BazaarReturnDone struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          int32                  `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Traderid      int32                  `protobuf:"varint,2,opt,name=traderid,proto3" json:"traderid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BazaarReturnDone) Reset() {
	*x = BazaarReturnDone{}
	mi := &file_EQMessage_proto_msgTypes[182]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BazaarReturnDone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BazaarReturnDone) ProtoMessage() {}

func (x *BazaarReturnDone) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[182]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BazaarReturnDone.ProtoReflect.Descriptor instead.
func (*BazaarReturnDone) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{182}
}

func (x *BazaarReturnDone) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *BazaarReturnDone) GetTraderid() int32 {
	if x != nil {
		return x.Traderid
	}
	return 0
}

type BazaarSearchResults struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Beginning     *BazaarWindowStart     `protobuf:"bytes,1,opt,name=beginning,proto3" json:"beginning,omitempty"`
	SellerId      int32                  `protobuf:"varint,2,opt,name=seller_id,json=sellerId,proto3" json:"seller_id,omitempty"`
	NumItems      int32                  `protobuf:"varint,3,opt,name=num_items,json=numItems,proto3" json:"num_items,omitempty"`
	SerialNumber  int32                  `protobuf:"varint,4,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
	ItemName      string                 `protobuf:"bytes,5,opt,name=item_name,json=itemName,proto3" json:"item_name,omitempty"`
	Cost          int32                  `protobuf:"varint,6,opt,name=cost,proto3" json:"cost,omitempty"`
	ItemStat      int32                  `protobuf:"varint,7,opt,name=item_stat,json=itemStat,proto3" json:"item_stat,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BazaarSearchResults) Reset() {
	*x = BazaarSearchResults{}
	mi := &file_EQMessage_proto_msgTypes[183]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BazaarSearchResults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BazaarSearchResults) ProtoMessage() {}

func (x *BazaarSearchResults) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[183]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BazaarSearchResults.ProtoReflect.Descriptor instead.
func (*BazaarSearchResults) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{183}
}

func (x *BazaarSearchResults) GetBeginning() *BazaarWindowStart {
	if x != nil {
		return x.Beginning
	}
	return nil
}

func (x *BazaarSearchResults) GetSellerId() int32 {
	if x != nil {
		return x.SellerId
	}
	return 0
}

func (x *BazaarSearchResults) GetNumItems() int32 {
	if x != nil {
		return x.NumItems
	}
	return 0
}

func (x *BazaarSearchResults) GetSerialNumber() int32 {
	if x != nil {
		return x.SerialNumber
	}
	return 0
}

func (x *BazaarSearchResults) GetItemName() string {
	if x != nil {
		return x.ItemName
	}
	return ""
}

func (x *BazaarSearchResults) GetCost() int32 {
	if x != nil {
		return x.Cost
	}
	return 0
}

func (x *BazaarSearchResults) GetItemStat() int32 {
	if x != nil {
		return x.ItemStat
	}
	return 0
}

type ServerSideFilters struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Clientattackfilters int32                  `protobuf:"varint,1,opt,name=clientattackfilters,proto3" json:"clientattackfilters,omitempty"`
	Npcattackfilters    int32                  `protobuf:"varint,2,opt,name=npcattackfilters,proto3" json:"npcattackfilters,omitempty"`
	Clientcastfilters   int32                  `protobuf:"varint,3,opt,name=clientcastfilters,proto3" json:"clientcastfilters,omitempty"`
	Npccastfilters      int32                  `protobuf:"varint,4,opt,name=npccastfilters,proto3" json:"npccastfilters,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ServerSideFilters) Reset() {
	*x = ServerSideFilters{}
	mi := &file_EQMessage_proto_msgTypes[184]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerSideFilters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerSideFilters) ProtoMessage() {}

func (x *ServerSideFilters) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[184]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerSideFilters.ProtoReflect.Descriptor instead.
func (*ServerSideFilters) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{184}
}

func (x *ServerSideFilters) GetClientattackfilters() int32 {
	if x != nil {
		return x.Clientattackfilters
	}
	return 0
}

func (x *ServerSideFilters) GetNpcattackfilters() int32 {
	if x != nil {
		return x.Npcattackfilters
	}
	return 0
}

func (x *ServerSideFilters) GetClientcastfilters() int32 {
	if x != nil {
		return x.Clientcastfilters
	}
	return 0
}

func (x *ServerSideFilters) GetNpccastfilters() int32 {
	if x != nil {
		return x.Npccastfilters
	}
	return 0
}

type ItemViewRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ItemId        int32                  `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	Augments      []int32                `protobuf:"varint,2,rep,packed,name=augments,proto3" json:"augments,omitempty"`
	LinkHash      int32                  `protobuf:"varint,3,opt,name=link_hash,json=linkHash,proto3" json:"link_hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ItemViewRequest) Reset() {
	*x = ItemViewRequest{}
	mi := &file_EQMessage_proto_msgTypes[185]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ItemViewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemViewRequest) ProtoMessage() {}

func (x *ItemViewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[185]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemViewRequest.ProtoReflect.Descriptor instead.
func (*ItemViewRequest) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{185}
}

func (x *ItemViewRequest) GetItemId() int32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *ItemViewRequest) GetAugments() []int32 {
	if x != nil {
		return x.Augments
	}
	return nil
}

func (x *ItemViewRequest) GetLinkHash() int32 {
	if x != nil {
		return x.LinkHash
	}
	return 0
}

type ItemVerifyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Slot          int32                  `protobuf:"varint,1,opt,name=slot,proto3" json:"slot,omitempty"`
	Target        int32                  `protobuf:"varint,2,opt,name=target,proto3" json:"target,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ItemVerifyRequest) Reset() {
	*x = ItemVerifyRequest{}
	mi := &file_EQMessage_proto_msgTypes[186]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ItemVerifyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemVerifyRequest) ProtoMessage() {}

func (x *ItemVerifyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[186]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemVerifyRequest.ProtoReflect.Descriptor instead.
func (*ItemVerifyRequest) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{186}
}

func (x *ItemVerifyRequest) GetSlot() int32 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *ItemVerifyRequest) GetTarget() int32 {
	if x != nil {
		return x.Target
	}
	return 0
}

type PickPocket struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	To            int32                  `protobuf:"varint,1,opt,name=to,proto3" json:"to,omitempty"`
	From          int32                  `protobuf:"varint,2,opt,name=from,proto3" json:"from,omitempty"`
	Myskill       int32                  `protobuf:"varint,3,opt,name=myskill,proto3" json:"myskill,omitempty"`
	Type          int32                  `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	Coin          int32                  `protobuf:"varint,5,opt,name=coin,proto3" json:"coin,omitempty"`
	Lastsix       []int32                `protobuf:"varint,6,rep,packed,name=lastsix,proto3" json:"lastsix,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PickPocket) Reset() {
	*x = PickPocket{}
	mi := &file_EQMessage_proto_msgTypes[187]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PickPocket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PickPocket) ProtoMessage() {}

func (x *PickPocket) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[187]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PickPocket.ProtoReflect.Descriptor instead.
func (*PickPocket) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{187}
}

func (x *PickPocket) GetTo() int32 {
	if x != nil {
		return x.To
	}
	return 0
}

func (x *PickPocket) GetFrom() int32 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *PickPocket) GetMyskill() int32 {
	if x != nil {
		return x.Myskill
	}
	return 0
}

func (x *PickPocket) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *PickPocket) GetCoin() int32 {
	if x != nil {
		return x.Coin
	}
	return 0
}

func (x *PickPocket) GetLastsix() []int32 {
	if x != nil {
		return x.Lastsix
	}
	return nil
}

type SPickPocket struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	To            int32                  `protobuf:"varint,1,opt,name=to,proto3" json:"to,omitempty"`
	From          int32                  `protobuf:"varint,2,opt,name=from,proto3" json:"from,omitempty"`
	Myskill       int32                  `protobuf:"varint,3,opt,name=myskill,proto3" json:"myskill,omitempty"`
	Type          int32                  `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	Coin          int32                  `protobuf:"varint,5,opt,name=coin,proto3" json:"coin,omitempty"`
	Itemname      string                 `protobuf:"bytes,6,opt,name=itemname,proto3" json:"itemname,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SPickPocket) Reset() {
	*x = SPickPocket{}
	mi := &file_EQMessage_proto_msgTypes[188]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SPickPocket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SPickPocket) ProtoMessage() {}

func (x *SPickPocket) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[188]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SPickPocket.ProtoReflect.Descriptor instead.
func (*SPickPocket) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{188}
}

func (x *SPickPocket) GetTo() int32 {
	if x != nil {
		return x.To
	}
	return 0
}

func (x *SPickPocket) GetFrom() int32 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *SPickPocket) GetMyskill() int32 {
	if x != nil {
		return x.Myskill
	}
	return 0
}

func (x *SPickPocket) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *SPickPocket) GetCoin() int32 {
	if x != nil {
		return x.Coin
	}
	return 0
}

func (x *SPickPocket) GetItemname() string {
	if x != nil {
		return x.Itemname
	}
	return ""
}

type LogServer struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Worldshortname string                 `protobuf:"bytes,1,opt,name=worldshortname,proto3" json:"worldshortname,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *LogServer) Reset() {
	*x = LogServer{}
	mi := &file_EQMessage_proto_msgTypes[189]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogServer) ProtoMessage() {}

func (x *LogServer) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[189]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogServer.ProtoReflect.Descriptor instead.
func (*LogServer) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{189}
}

func (x *LogServer) GetWorldshortname() string {
	if x != nil {
		return x.Worldshortname
	}
	return ""
}

type ApproveWorld struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApproveWorld) Reset() {
	*x = ApproveWorld{}
	mi := &file_EQMessage_proto_msgTypes[190]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApproveWorld) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveWorld) ProtoMessage() {}

func (x *ApproveWorld) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[190]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveWorld.ProtoReflect.Descriptor instead.
func (*ApproveWorld) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{190}
}

type ClientError struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	CharacterName string                 `protobuf:"bytes,2,opt,name=character_name,json=characterName,proto3" json:"character_name,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientError) Reset() {
	*x = ClientError{}
	mi := &file_EQMessage_proto_msgTypes[191]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientError) ProtoMessage() {}

func (x *ClientError) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[191]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientError.ProtoReflect.Descriptor instead.
func (*ClientError) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{191}
}

func (x *ClientError) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ClientError) GetCharacterName() string {
	if x != nil {
		return x.CharacterName
	}
	return ""
}

func (x *ClientError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type MobHealth struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hp            int32                  `protobuf:"varint,1,opt,name=hp,proto3" json:"hp,omitempty"`
	Id            int32                  `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MobHealth) Reset() {
	*x = MobHealth{}
	mi := &file_EQMessage_proto_msgTypes[192]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MobHealth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MobHealth) ProtoMessage() {}

func (x *MobHealth) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[192]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MobHealth.ProtoReflect.Descriptor instead.
func (*MobHealth) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{192}
}

func (x *MobHealth) GetHp() int32 {
	if x != nil {
		return x.Hp
	}
	return 0
}

func (x *MobHealth) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Track struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Entityid      int32                  `protobuf:"varint,1,opt,name=entityid,proto3" json:"entityid,omitempty"`
	Distance      float32                `protobuf:"fixed32,2,opt,name=distance,proto3" json:"distance,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Track) Reset() {
	*x = Track{}
	mi := &file_EQMessage_proto_msgTypes[193]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Track) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Track) ProtoMessage() {}

func (x *Track) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[193]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Track.ProtoReflect.Descriptor instead.
func (*Track) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{193}
}

func (x *Track) GetEntityid() int32 {
	if x != nil {
		return x.Entityid
	}
	return 0
}

func (x *Track) GetDistance() float32 {
	if x != nil {
		return x.Distance
	}
	return 0
}

type TrackTarget struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Entityid      int32                  `protobuf:"varint,1,opt,name=entityid,proto3" json:"entityid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TrackTarget) Reset() {
	*x = TrackTarget{}
	mi := &file_EQMessage_proto_msgTypes[194]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrackTarget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackTarget) ProtoMessage() {}

func (x *TrackTarget) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[194]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackTarget.ProtoReflect.Descriptor instead.
func (*TrackTarget) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{194}
}

func (x *TrackTarget) GetEntityid() int32 {
	if x != nil {
		return x.Entityid
	}
	return 0
}

type Tracking struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         int32                  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Entries       []*Track               `protobuf:"bytes,2,rep,name=entries,proto3" json:"entries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Tracking) Reset() {
	*x = Tracking{}
	mi := &file_EQMessage_proto_msgTypes[195]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tracking) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tracking) ProtoMessage() {}

func (x *Tracking) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[195]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tracking.ProtoReflect.Descriptor instead.
func (*Tracking) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{195}
}

func (x *Tracking) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *Tracking) GetEntries() []*Track {
	if x != nil {
		return x.Entries
	}
	return nil
}

type ZoneServerInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ip            string                 `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Port          int32                  `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ZoneServerInfo) Reset() {
	*x = ZoneServerInfo{}
	mi := &file_EQMessage_proto_msgTypes[196]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ZoneServerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZoneServerInfo) ProtoMessage() {}

func (x *ZoneServerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[196]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZoneServerInfo.ProtoReflect.Descriptor instead.
func (*ZoneServerInfo) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{196}
}

func (x *ZoneServerInfo) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *ZoneServerInfo) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type WhoAllPlayer struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Formatstring  int32                  `protobuf:"varint,1,opt,name=formatstring,proto3" json:"formatstring,omitempty"`
	Pidstring     int32                  `protobuf:"varint,2,opt,name=pidstring,proto3" json:"pidstring,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Rankstring    int32                  `protobuf:"varint,4,opt,name=rankstring,proto3" json:"rankstring,omitempty"`
	Guild         string                 `protobuf:"bytes,5,opt,name=guild,proto3" json:"guild,omitempty"`
	Zonestring    int32                  `protobuf:"varint,6,opt,name=zonestring,proto3" json:"zonestring,omitempty"`
	Zone          int32                  `protobuf:"varint,7,opt,name=zone,proto3" json:"zone,omitempty"`
	CharClass     int32                  `protobuf:"varint,8,opt,name=char_class,json=charClass,proto3" json:"char_class,omitempty"`
	Level         int32                  `protobuf:"varint,9,opt,name=level,proto3" json:"level,omitempty"`
	Race          int32                  `protobuf:"varint,10,opt,name=race,proto3" json:"race,omitempty"`
	Account       string                 `protobuf:"bytes,11,opt,name=account,proto3" json:"account,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WhoAllPlayer) Reset() {
	*x = WhoAllPlayer{}
	mi := &file_EQMessage_proto_msgTypes[197]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WhoAllPlayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhoAllPlayer) ProtoMessage() {}

func (x *WhoAllPlayer) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[197]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhoAllPlayer.ProtoReflect.Descriptor instead.
func (*WhoAllPlayer) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{197}
}

func (x *WhoAllPlayer) GetFormatstring() int32 {
	if x != nil {
		return x.Formatstring
	}
	return 0
}

func (x *WhoAllPlayer) GetPidstring() int32 {
	if x != nil {
		return x.Pidstring
	}
	return 0
}

func (x *WhoAllPlayer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WhoAllPlayer) GetRankstring() int32 {
	if x != nil {
		return x.Rankstring
	}
	return 0
}

func (x *WhoAllPlayer) GetGuild() string {
	if x != nil {
		return x.Guild
	}
	return ""
}

func (x *WhoAllPlayer) GetZonestring() int32 {
	if x != nil {
		return x.Zonestring
	}
	return 0
}

func (x *WhoAllPlayer) GetZone() int32 {
	if x != nil {
		return x.Zone
	}
	return 0
}

func (x *WhoAllPlayer) GetCharClass() int32 {
	if x != nil {
		return x.CharClass
	}
	return 0
}

func (x *WhoAllPlayer) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *WhoAllPlayer) GetRace() int32 {
	if x != nil {
		return x.Race
	}
	return 0
}

func (x *WhoAllPlayer) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

type WhoAllReturn struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Id                  int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Playerineqstring    int32                  `protobuf:"varint,2,opt,name=playerineqstring,proto3" json:"playerineqstring,omitempty"`
	Line                string                 `protobuf:"bytes,3,opt,name=line,proto3" json:"line,omitempty"`
	Playersinzonestring int32                  `protobuf:"varint,4,opt,name=playersinzonestring,proto3" json:"playersinzonestring,omitempty"`
	Count               int32                  `protobuf:"varint,5,opt,name=count,proto3" json:"count,omitempty"`
	Player              []*WhoAllPlayer        `protobuf:"bytes,6,rep,name=player,proto3" json:"player,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *WhoAllReturn) Reset() {
	*x = WhoAllReturn{}
	mi := &file_EQMessage_proto_msgTypes[198]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WhoAllReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhoAllReturn) ProtoMessage() {}

func (x *WhoAllReturn) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[198]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhoAllReturn.ProtoReflect.Descriptor instead.
func (*WhoAllReturn) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{198}
}

func (x *WhoAllReturn) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WhoAllReturn) GetPlayerineqstring() int32 {
	if x != nil {
		return x.Playerineqstring
	}
	return 0
}

func (x *WhoAllReturn) GetLine() string {
	if x != nil {
		return x.Line
	}
	return ""
}

func (x *WhoAllReturn) GetPlayersinzonestring() int32 {
	if x != nil {
		return x.Playersinzonestring
	}
	return 0
}

func (x *WhoAllReturn) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *WhoAllReturn) GetPlayer() []*WhoAllPlayer {
	if x != nil {
		return x.Player
	}
	return nil
}

type Trader struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Itemid        []int32                `protobuf:"varint,2,rep,packed,name=itemid,proto3" json:"itemid,omitempty"`
	Itemcost      []int32                `protobuf:"varint,3,rep,packed,name=itemcost,proto3" json:"itemcost,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Trader) Reset() {
	*x = Trader{}
	mi := &file_EQMessage_proto_msgTypes[199]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Trader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trader) ProtoMessage() {}

func (x *Trader) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[199]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trader.ProtoReflect.Descriptor instead.
func (*Trader) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{199}
}

func (x *Trader) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Trader) GetItemid() []int32 {
	if x != nil {
		return x.Itemid
	}
	return nil
}

func (x *Trader) GetItemcost() []int32 {
	if x != nil {
		return x.Itemcost
	}
	return nil
}

type ClickTrader struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Itemcost      []int32                `protobuf:"varint,2,rep,packed,name=itemcost,proto3" json:"itemcost,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClickTrader) Reset() {
	*x = ClickTrader{}
	mi := &file_EQMessage_proto_msgTypes[200]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClickTrader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClickTrader) ProtoMessage() {}

func (x *ClickTrader) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[200]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClickTrader.ProtoReflect.Descriptor instead.
func (*ClickTrader) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{200}
}

func (x *ClickTrader) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ClickTrader) GetItemcost() []int32 {
	if x != nil {
		return x.Itemcost
	}
	return nil
}

type GetItems struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []int32                `protobuf:"varint,1,rep,packed,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetItems) Reset() {
	*x = GetItems{}
	mi := &file_EQMessage_proto_msgTypes[201]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetItems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetItems) ProtoMessage() {}

func (x *GetItems) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[201]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetItems.ProtoReflect.Descriptor instead.
func (*GetItems) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{201}
}

func (x *GetItems) GetItems() []int32 {
	if x != nil {
		return x.Items
	}
	return nil
}

type BecomeTrader struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Code          int32                  `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BecomeTrader) Reset() {
	*x = BecomeTrader{}
	mi := &file_EQMessage_proto_msgTypes[202]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BecomeTrader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BecomeTrader) ProtoMessage() {}

func (x *BecomeTrader) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[202]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BecomeTrader.ProtoReflect.Descriptor instead.
func (*BecomeTrader) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{202}
}

func (x *BecomeTrader) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BecomeTrader) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

type Trader_ShowItems struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	TraderId      int32                  `protobuf:"varint,2,opt,name=trader_id,json=traderId,proto3" json:"trader_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Trader_ShowItems) Reset() {
	*x = Trader_ShowItems{}
	mi := &file_EQMessage_proto_msgTypes[203]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Trader_ShowItems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trader_ShowItems) ProtoMessage() {}

func (x *Trader_ShowItems) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[203]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trader_ShowItems.ProtoReflect.Descriptor instead.
func (*Trader_ShowItems) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{203}
}

func (x *Trader_ShowItems) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Trader_ShowItems) GetTraderId() int32 {
	if x != nil {
		return x.TraderId
	}
	return 0
}

type TraderBuy struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Action        int32                  `protobuf:"varint,1,opt,name=action,proto3" json:"action,omitempty"`
	Price         int32                  `protobuf:"varint,2,opt,name=price,proto3" json:"price,omitempty"`
	TraderId      int32                  `protobuf:"varint,3,opt,name=trader_id,json=traderId,proto3" json:"trader_id,omitempty"`
	ItemName      string                 `protobuf:"bytes,4,opt,name=item_name,json=itemName,proto3" json:"item_name,omitempty"`
	ItemId        int32                  `protobuf:"varint,5,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	AlreadySold   int32                  `protobuf:"varint,6,opt,name=already_sold,json=alreadySold,proto3" json:"already_sold,omitempty"`
	Quantity      int32                  `protobuf:"varint,7,opt,name=quantity,proto3" json:"quantity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TraderBuy) Reset() {
	*x = TraderBuy{}
	mi := &file_EQMessage_proto_msgTypes[204]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TraderBuy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TraderBuy) ProtoMessage() {}

func (x *TraderBuy) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[204]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TraderBuy.ProtoReflect.Descriptor instead.
func (*TraderBuy) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{204}
}

func (x *TraderBuy) GetAction() int32 {
	if x != nil {
		return x.Action
	}
	return 0
}

func (x *TraderBuy) GetPrice() int32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *TraderBuy) GetTraderId() int32 {
	if x != nil {
		return x.TraderId
	}
	return 0
}

func (x *TraderBuy) GetItemName() string {
	if x != nil {
		return x.ItemName
	}
	return ""
}

func (x *TraderBuy) GetItemId() int32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *TraderBuy) GetAlreadySold() int32 {
	if x != nil {
		return x.AlreadySold
	}
	return 0
}

func (x *TraderBuy) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type TraderItemUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Traderid      int32                  `protobuf:"varint,1,opt,name=traderid,proto3" json:"traderid,omitempty"`
	Fromslot      int32                  `protobuf:"varint,2,opt,name=fromslot,proto3" json:"fromslot,omitempty"`
	Toslot        int32                  `protobuf:"varint,3,opt,name=toslot,proto3" json:"toslot,omitempty"`
	Charges       int32                  `protobuf:"varint,4,opt,name=charges,proto3" json:"charges,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TraderItemUpdate) Reset() {
	*x = TraderItemUpdate{}
	mi := &file_EQMessage_proto_msgTypes[205]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TraderItemUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TraderItemUpdate) ProtoMessage() {}

func (x *TraderItemUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[205]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TraderItemUpdate.ProtoReflect.Descriptor instead.
func (*TraderItemUpdate) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{205}
}

func (x *TraderItemUpdate) GetTraderid() int32 {
	if x != nil {
		return x.Traderid
	}
	return 0
}

func (x *TraderItemUpdate) GetFromslot() int32 {
	if x != nil {
		return x.Fromslot
	}
	return 0
}

func (x *TraderItemUpdate) GetToslot() int32 {
	if x != nil {
		return x.Toslot
	}
	return 0
}

func (x *TraderItemUpdate) GetCharges() int32 {
	if x != nil {
		return x.Charges
	}
	return 0
}

type MoneyUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Platinum      int32                  `protobuf:"varint,1,opt,name=platinum,proto3" json:"platinum,omitempty"`
	Gold          int32                  `protobuf:"varint,2,opt,name=gold,proto3" json:"gold,omitempty"`
	Silver        int32                  `protobuf:"varint,3,opt,name=silver,proto3" json:"silver,omitempty"`
	Copper        int32                  `protobuf:"varint,4,opt,name=copper,proto3" json:"copper,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MoneyUpdate) Reset() {
	*x = MoneyUpdate{}
	mi := &file_EQMessage_proto_msgTypes[206]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MoneyUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoneyUpdate) ProtoMessage() {}

func (x *MoneyUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[206]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoneyUpdate.ProtoReflect.Descriptor instead.
func (*MoneyUpdate) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{206}
}

func (x *MoneyUpdate) GetPlatinum() int32 {
	if x != nil {
		return x.Platinum
	}
	return 0
}

func (x *MoneyUpdate) GetGold() int32 {
	if x != nil {
		return x.Gold
	}
	return 0
}

func (x *MoneyUpdate) GetSilver() int32 {
	if x != nil {
		return x.Silver
	}
	return 0
}

func (x *MoneyUpdate) GetCopper() int32 {
	if x != nil {
		return x.Copper
	}
	return 0
}

type TraderDelItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Slotid        int32                  `protobuf:"varint,1,opt,name=slotid,proto3" json:"slotid,omitempty"`
	Quantity      int32                  `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TraderDelItem) Reset() {
	*x = TraderDelItem{}
	mi := &file_EQMessage_proto_msgTypes[207]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TraderDelItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TraderDelItem) ProtoMessage() {}

func (x *TraderDelItem) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[207]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TraderDelItem.ProtoReflect.Descriptor instead.
func (*TraderDelItem) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{207}
}

func (x *TraderDelItem) GetSlotid() int32 {
	if x != nil {
		return x.Slotid
	}
	return 0
}

func (x *TraderDelItem) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type TraderClick struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Traderid      int32                  `protobuf:"varint,1,opt,name=traderid,proto3" json:"traderid,omitempty"`
	Approval      int32                  `protobuf:"varint,2,opt,name=approval,proto3" json:"approval,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TraderClick) Reset() {
	*x = TraderClick{}
	mi := &file_EQMessage_proto_msgTypes[208]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TraderClick) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TraderClick) ProtoMessage() {}

func (x *TraderClick) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[208]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TraderClick.ProtoReflect.Descriptor instead.
func (*TraderClick) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{208}
}

func (x *TraderClick) GetTraderid() int32 {
	if x != nil {
		return x.Traderid
	}
	return 0
}

func (x *TraderClick) GetApproval() int32 {
	if x != nil {
		return x.Approval
	}
	return 0
}

type FormattedMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StringId      int32                  `protobuf:"varint,1,opt,name=string_id,json=stringId,proto3" json:"string_id,omitempty"`
	Type          int32                  `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FormattedMessage) Reset() {
	*x = FormattedMessage{}
	mi := &file_EQMessage_proto_msgTypes[209]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FormattedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FormattedMessage) ProtoMessage() {}

func (x *FormattedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[209]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FormattedMessage.ProtoReflect.Descriptor instead.
func (*FormattedMessage) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{209}
}

func (x *FormattedMessage) GetStringId() int32 {
	if x != nil {
		return x.StringId
	}
	return 0
}

func (x *FormattedMessage) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *FormattedMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type SimpleMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StringId      int32                  `protobuf:"varint,1,opt,name=string_id,json=stringId,proto3" json:"string_id,omitempty"`
	Color         int32                  `protobuf:"varint,2,opt,name=color,proto3" json:"color,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SimpleMessage) Reset() {
	*x = SimpleMessage{}
	mi := &file_EQMessage_proto_msgTypes[210]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SimpleMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleMessage) ProtoMessage() {}

func (x *SimpleMessage) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[210]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleMessage.ProtoReflect.Descriptor instead.
func (*SimpleMessage) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{210}
}

func (x *SimpleMessage) GetStringId() int32 {
	if x != nil {
		return x.StringId
	}
	return 0
}

func (x *SimpleMessage) GetColor() int32 {
	if x != nil {
		return x.Color
	}
	return 0
}

type GuildMemberEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Level         int32                  `protobuf:"varint,2,opt,name=level,proto3" json:"level,omitempty"`
	Banker        int32                  `protobuf:"varint,3,opt,name=banker,proto3" json:"banker,omitempty"`
	CharClass     int32                  `protobuf:"varint,4,opt,name=char_class,json=charClass,proto3" json:"char_class,omitempty"`
	Rank          int32                  `protobuf:"varint,5,opt,name=rank,proto3" json:"rank,omitempty"`
	TimeLastOn    int32                  `protobuf:"varint,6,opt,name=time_last_on,json=timeLastOn,proto3" json:"time_last_on,omitempty"`
	TributeEnable int32                  `protobuf:"varint,7,opt,name=tribute_enable,json=tributeEnable,proto3" json:"tribute_enable,omitempty"`
	TotalTribute  int32                  `protobuf:"varint,8,opt,name=total_tribute,json=totalTribute,proto3" json:"total_tribute,omitempty"`
	LastTribute   int32                  `protobuf:"varint,9,opt,name=last_tribute,json=lastTribute,proto3" json:"last_tribute,omitempty"`
	PublicNote    string                 `protobuf:"bytes,10,opt,name=public_note,json=publicNote,proto3" json:"public_note,omitempty"`
	Zoneinstance  int32                  `protobuf:"varint,11,opt,name=zoneinstance,proto3" json:"zoneinstance,omitempty"`
	ZoneId        int32                  `protobuf:"varint,12,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GuildMemberEntry) Reset() {
	*x = GuildMemberEntry{}
	mi := &file_EQMessage_proto_msgTypes[211]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GuildMemberEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildMemberEntry) ProtoMessage() {}

func (x *GuildMemberEntry) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[211]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildMemberEntry.ProtoReflect.Descriptor instead.
func (*GuildMemberEntry) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{211}
}

func (x *GuildMemberEntry) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GuildMemberEntry) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *GuildMemberEntry) GetBanker() int32 {
	if x != nil {
		return x.Banker
	}
	return 0
}

func (x *GuildMemberEntry) GetCharClass() int32 {
	if x != nil {
		return x.CharClass
	}
	return 0
}

func (x *GuildMemberEntry) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *GuildMemberEntry) GetTimeLastOn() int32 {
	if x != nil {
		return x.TimeLastOn
	}
	return 0
}

func (x *GuildMemberEntry) GetTributeEnable() int32 {
	if x != nil {
		return x.TributeEnable
	}
	return 0
}

func (x *GuildMemberEntry) GetTotalTribute() int32 {
	if x != nil {
		return x.TotalTribute
	}
	return 0
}

func (x *GuildMemberEntry) GetLastTribute() int32 {
	if x != nil {
		return x.LastTribute
	}
	return 0
}

func (x *GuildMemberEntry) GetPublicNote() string {
	if x != nil {
		return x.PublicNote
	}
	return ""
}

func (x *GuildMemberEntry) GetZoneinstance() int32 {
	if x != nil {
		return x.Zoneinstance
	}
	return 0
}

func (x *GuildMemberEntry) GetZoneId() int32 {
	if x != nil {
		return x.ZoneId
	}
	return 0
}

type GuildMembers struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerName    string                 `protobuf:"bytes,1,opt,name=player_name,json=playerName,proto3" json:"player_name,omitempty"`
	Count         int32                  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Member        []*GuildMemberEntry    `protobuf:"bytes,3,rep,name=member,proto3" json:"member,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GuildMembers) Reset() {
	*x = GuildMembers{}
	mi := &file_EQMessage_proto_msgTypes[212]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GuildMembers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildMembers) ProtoMessage() {}

func (x *GuildMembers) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[212]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildMembers.ProtoReflect.Descriptor instead.
func (*GuildMembers) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{212}
}

func (x *GuildMembers) GetPlayerName() string {
	if x != nil {
		return x.PlayerName
	}
	return ""
}

func (x *GuildMembers) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GuildMembers) GetMember() []*GuildMemberEntry {
	if x != nil {
		return x.Member
	}
	return nil
}

type GuildMOTD struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	SetbyName     string                 `protobuf:"bytes,2,opt,name=setby_name,json=setbyName,proto3" json:"setby_name,omitempty"`
	Motd          string                 `protobuf:"bytes,3,opt,name=motd,proto3" json:"motd,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GuildMOTD) Reset() {
	*x = GuildMOTD{}
	mi := &file_EQMessage_proto_msgTypes[213]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GuildMOTD) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildMOTD) ProtoMessage() {}

func (x *GuildMOTD) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[213]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildMOTD.ProtoReflect.Descriptor instead.
func (*GuildMOTD) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{213}
}

func (x *GuildMOTD) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GuildMOTD) GetSetbyName() string {
	if x != nil {
		return x.SetbyName
	}
	return ""
}

func (x *GuildMOTD) GetMotd() string {
	if x != nil {
		return x.Motd
	}
	return ""
}

type GuildUpdate_PublicNote struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Target        string                 `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	Note          string                 `protobuf:"bytes,3,opt,name=note,proto3" json:"note,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GuildUpdate_PublicNote) Reset() {
	*x = GuildUpdate_PublicNote{}
	mi := &file_EQMessage_proto_msgTypes[214]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GuildUpdate_PublicNote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildUpdate_PublicNote) ProtoMessage() {}

func (x *GuildUpdate_PublicNote) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[214]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildUpdate_PublicNote.ProtoReflect.Descriptor instead.
func (*GuildUpdate_PublicNote) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{214}
}

func (x *GuildUpdate_PublicNote) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GuildUpdate_PublicNote) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *GuildUpdate_PublicNote) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

type GuildDemote struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Target        string                 `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GuildDemote) Reset() {
	*x = GuildDemote{}
	mi := &file_EQMessage_proto_msgTypes[215]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GuildDemote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildDemote) ProtoMessage() {}

func (x *GuildDemote) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[215]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildDemote.ProtoReflect.Descriptor instead.
func (*GuildDemote) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{215}
}

func (x *GuildDemote) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GuildDemote) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

type GuildRemove struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Target        string                 `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Leaderstatus  int32                  `protobuf:"varint,3,opt,name=leaderstatus,proto3" json:"leaderstatus,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GuildRemove) Reset() {
	*x = GuildRemove{}
	mi := &file_EQMessage_proto_msgTypes[216]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GuildRemove) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildRemove) ProtoMessage() {}

func (x *GuildRemove) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[216]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildRemove.ProtoReflect.Descriptor instead.
func (*GuildRemove) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{216}
}

func (x *GuildRemove) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *GuildRemove) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GuildRemove) GetLeaderstatus() int32 {
	if x != nil {
		return x.Leaderstatus
	}
	return 0
}

type GuildMakeLeader struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Target        string                 `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GuildMakeLeader) Reset() {
	*x = GuildMakeLeader{}
	mi := &file_EQMessage_proto_msgTypes[217]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GuildMakeLeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildMakeLeader) ProtoMessage() {}

func (x *GuildMakeLeader) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[217]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildMakeLeader.ProtoReflect.Descriptor instead.
func (*GuildMakeLeader) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{217}
}

func (x *GuildMakeLeader) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GuildMakeLeader) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

type Make_Pet struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Level         int32                  `protobuf:"varint,1,opt,name=level,proto3" json:"level,omitempty"`
	CharClass     int32                  `protobuf:"varint,2,opt,name=char_class,json=charClass,proto3" json:"char_class,omitempty"`
	Race          int32                  `protobuf:"varint,3,opt,name=race,proto3" json:"race,omitempty"`
	Texture       int32                  `protobuf:"varint,4,opt,name=texture,proto3" json:"texture,omitempty"`
	Pettype       int32                  `protobuf:"varint,5,opt,name=pettype,proto3" json:"pettype,omitempty"`
	Size          float32                `protobuf:"fixed32,6,opt,name=size,proto3" json:"size,omitempty"`
	Type          int32                  `protobuf:"varint,7,opt,name=type,proto3" json:"type,omitempty"`
	MinDmg        int32                  `protobuf:"varint,8,opt,name=min_dmg,json=minDmg,proto3" json:"min_dmg,omitempty"`
	MaxDmg        int32                  `protobuf:"varint,9,opt,name=max_dmg,json=maxDmg,proto3" json:"max_dmg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Make_Pet) Reset() {
	*x = Make_Pet{}
	mi := &file_EQMessage_proto_msgTypes[218]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Make_Pet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Make_Pet) ProtoMessage() {}

func (x *Make_Pet) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[218]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Make_Pet.ProtoReflect.Descriptor instead.
func (*Make_Pet) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{218}
}

func (x *Make_Pet) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *Make_Pet) GetCharClass() int32 {
	if x != nil {
		return x.CharClass
	}
	return 0
}

func (x *Make_Pet) GetRace() int32 {
	if x != nil {
		return x.Race
	}
	return 0
}

func (x *Make_Pet) GetTexture() int32 {
	if x != nil {
		return x.Texture
	}
	return 0
}

func (x *Make_Pet) GetPettype() int32 {
	if x != nil {
		return x.Pettype
	}
	return 0
}

func (x *Make_Pet) GetSize() float32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Make_Pet) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Make_Pet) GetMinDmg() int32 {
	if x != nil {
		return x.MinDmg
	}
	return 0
}

func (x *Make_Pet) GetMaxDmg() int32 {
	if x != nil {
		return x.MaxDmg
	}
	return 0
}

type Ground_Spawn struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MaxX          float32                `protobuf:"fixed32,1,opt,name=max_x,json=maxX,proto3" json:"max_x,omitempty"`
	MaxY          float32                `protobuf:"fixed32,2,opt,name=max_y,json=maxY,proto3" json:"max_y,omitempty"`
	MinX          float32                `protobuf:"fixed32,3,opt,name=min_x,json=minX,proto3" json:"min_x,omitempty"`
	MinY          float32                `protobuf:"fixed32,4,opt,name=min_y,json=minY,proto3" json:"min_y,omitempty"`
	MaxZ          float32                `protobuf:"fixed32,5,opt,name=max_z,json=maxZ,proto3" json:"max_z,omitempty"`
	Heading       float32                `protobuf:"fixed32,6,opt,name=heading,proto3" json:"heading,omitempty"`
	Name          string                 `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	Item          int32                  `protobuf:"varint,8,opt,name=item,proto3" json:"item,omitempty"`
	MaxAllowed    int32                  `protobuf:"varint,9,opt,name=max_allowed,json=maxAllowed,proto3" json:"max_allowed,omitempty"`
	Respawntimer  int32                  `protobuf:"varint,10,opt,name=respawntimer,proto3" json:"respawntimer,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ground_Spawn) Reset() {
	*x = Ground_Spawn{}
	mi := &file_EQMessage_proto_msgTypes[219]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ground_Spawn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ground_Spawn) ProtoMessage() {}

func (x *Ground_Spawn) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[219]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ground_Spawn.ProtoReflect.Descriptor instead.
func (*Ground_Spawn) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{219}
}

func (x *Ground_Spawn) GetMaxX() float32 {
	if x != nil {
		return x.MaxX
	}
	return 0
}

func (x *Ground_Spawn) GetMaxY() float32 {
	if x != nil {
		return x.MaxY
	}
	return 0
}

func (x *Ground_Spawn) GetMinX() float32 {
	if x != nil {
		return x.MinX
	}
	return 0
}

func (x *Ground_Spawn) GetMinY() float32 {
	if x != nil {
		return x.MinY
	}
	return 0
}

func (x *Ground_Spawn) GetMaxZ() float32 {
	if x != nil {
		return x.MaxZ
	}
	return 0
}

func (x *Ground_Spawn) GetHeading() float32 {
	if x != nil {
		return x.Heading
	}
	return 0
}

func (x *Ground_Spawn) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Ground_Spawn) GetItem() int32 {
	if x != nil {
		return x.Item
	}
	return 0
}

func (x *Ground_Spawn) GetMaxAllowed() int32 {
	if x != nil {
		return x.MaxAllowed
	}
	return 0
}

func (x *Ground_Spawn) GetRespawntimer() int32 {
	if x != nil {
		return x.Respawntimer
	}
	return 0
}

type Ground_Spawns struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Spawn         []*Ground_Spawn        `protobuf:"bytes,1,rep,name=spawn,proto3" json:"spawn,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ground_Spawns) Reset() {
	*x = Ground_Spawns{}
	mi := &file_EQMessage_proto_msgTypes[220]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ground_Spawns) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ground_Spawns) ProtoMessage() {}

func (x *Ground_Spawns) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[220]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ground_Spawns.ProtoReflect.Descriptor instead.
func (*Ground_Spawns) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{220}
}

func (x *Ground_Spawns) GetSpawn() []*Ground_Spawn {
	if x != nil {
		return x.Spawn
	}
	return nil
}

type ApproveZone struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Zoneid        int32                  `protobuf:"varint,2,opt,name=zoneid,proto3" json:"zoneid,omitempty"`
	Approve       int32                  `protobuf:"varint,3,opt,name=approve,proto3" json:"approve,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApproveZone) Reset() {
	*x = ApproveZone{}
	mi := &file_EQMessage_proto_msgTypes[221]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApproveZone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveZone) ProtoMessage() {}

func (x *ApproveZone) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[221]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveZone.ProtoReflect.Descriptor instead.
func (*ApproveZone) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{221}
}

func (x *ApproveZone) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ApproveZone) GetZoneid() int32 {
	if x != nil {
		return x.Zoneid
	}
	return 0
}

func (x *ApproveZone) GetApprove() int32 {
	if x != nil {
		return x.Approve
	}
	return 0
}

type ZoneInSendName struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Name2         string                 `protobuf:"bytes,2,opt,name=name2,proto3" json:"name2,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ZoneInSendName) Reset() {
	*x = ZoneInSendName{}
	mi := &file_EQMessage_proto_msgTypes[222]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ZoneInSendName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZoneInSendName) ProtoMessage() {}

func (x *ZoneInSendName) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[222]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZoneInSendName.ProtoReflect.Descriptor instead.
func (*ZoneInSendName) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{222}
}

func (x *ZoneInSendName) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ZoneInSendName) GetName2() string {
	if x != nil {
		return x.Name2
	}
	return ""
}

type ZoneInSendName2 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ZoneInSendName2) Reset() {
	*x = ZoneInSendName2{}
	mi := &file_EQMessage_proto_msgTypes[223]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ZoneInSendName2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZoneInSendName2) ProtoMessage() {}

func (x *ZoneInSendName2) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[223]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZoneInSendName2.ProtoReflect.Descriptor instead.
func (*ZoneInSendName2) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{223}
}

func (x *ZoneInSendName2) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type StartTribute struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ClientId        int32                  `protobuf:"varint,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	TributeMasterId int32                  `protobuf:"varint,2,opt,name=tribute_master_id,json=tributeMasterId,proto3" json:"tribute_master_id,omitempty"`
	Response        int32                  `protobuf:"varint,3,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *StartTribute) Reset() {
	*x = StartTribute{}
	mi := &file_EQMessage_proto_msgTypes[224]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartTribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartTribute) ProtoMessage() {}

func (x *StartTribute) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[224]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartTribute.ProtoReflect.Descriptor instead.
func (*StartTribute) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{224}
}

func (x *StartTribute) GetClientId() int32 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

func (x *StartTribute) GetTributeMasterId() int32 {
	if x != nil {
		return x.TributeMasterId
	}
	return 0
}

func (x *StartTribute) GetResponse() int32 {
	if x != nil {
		return x.Response
	}
	return 0
}

type TributeLevel struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Level         int32                  `protobuf:"varint,1,opt,name=level,proto3" json:"level,omitempty"`
	TributeItemId int32                  `protobuf:"varint,2,opt,name=tribute_item_id,json=tributeItemId,proto3" json:"tribute_item_id,omitempty"`
	Cost          int32                  `protobuf:"varint,3,opt,name=cost,proto3" json:"cost,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TributeLevel) Reset() {
	*x = TributeLevel{}
	mi := &file_EQMessage_proto_msgTypes[225]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TributeLevel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TributeLevel) ProtoMessage() {}

func (x *TributeLevel) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[225]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TributeLevel.ProtoReflect.Descriptor instead.
func (*TributeLevel) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{225}
}

func (x *TributeLevel) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *TributeLevel) GetTributeItemId() int32 {
	if x != nil {
		return x.TributeItemId
	}
	return 0
}

func (x *TributeLevel) GetCost() int32 {
	if x != nil {
		return x.Cost
	}
	return 0
}

type TributeAbility struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TributeId     int32                  `protobuf:"varint,1,opt,name=tribute_id,json=tributeId,proto3" json:"tribute_id,omitempty"`
	TierCount     int32                  `protobuf:"varint,2,opt,name=tier_count,json=tierCount,proto3" json:"tier_count,omitempty"`
	Tiers         []*TributeLevel        `protobuf:"bytes,3,rep,name=tiers,proto3" json:"tiers,omitempty"`
	Name          string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TributeAbility) Reset() {
	*x = TributeAbility{}
	mi := &file_EQMessage_proto_msgTypes[226]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TributeAbility) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TributeAbility) ProtoMessage() {}

func (x *TributeAbility) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[226]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TributeAbility.ProtoReflect.Descriptor instead.
func (*TributeAbility) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{226}
}

func (x *TributeAbility) GetTributeId() int32 {
	if x != nil {
		return x.TributeId
	}
	return 0
}

func (x *TributeAbility) GetTierCount() int32 {
	if x != nil {
		return x.TierCount
	}
	return 0
}

func (x *TributeAbility) GetTiers() []*TributeLevel {
	if x != nil {
		return x.Tiers
	}
	return nil
}

func (x *TributeAbility) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GuildTributeAbility struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GuildId       int32                  `protobuf:"varint,1,opt,name=guild_id,json=guildId,proto3" json:"guild_id,omitempty"`
	Ability       *TributeAbility        `protobuf:"bytes,2,opt,name=ability,proto3" json:"ability,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GuildTributeAbility) Reset() {
	*x = GuildTributeAbility{}
	mi := &file_EQMessage_proto_msgTypes[227]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GuildTributeAbility) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildTributeAbility) ProtoMessage() {}

func (x *GuildTributeAbility) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[227]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildTributeAbility.ProtoReflect.Descriptor instead.
func (*GuildTributeAbility) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{227}
}

func (x *GuildTributeAbility) GetGuildId() int32 {
	if x != nil {
		return x.GuildId
	}
	return 0
}

func (x *GuildTributeAbility) GetAbility() *TributeAbility {
	if x != nil {
		return x.Ability
	}
	return nil
}

type SelectTributeReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      int32                  `protobuf:"varint,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	TributeId     int32                  `protobuf:"varint,2,opt,name=tribute_id,json=tributeId,proto3" json:"tribute_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SelectTributeReq) Reset() {
	*x = SelectTributeReq{}
	mi := &file_EQMessage_proto_msgTypes[228]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SelectTributeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectTributeReq) ProtoMessage() {}

func (x *SelectTributeReq) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[228]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectTributeReq.ProtoReflect.Descriptor instead.
func (*SelectTributeReq) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{228}
}

func (x *SelectTributeReq) GetClientId() int32 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

func (x *SelectTributeReq) GetTributeId() int32 {
	if x != nil {
		return x.TributeId
	}
	return 0
}

type SelectTributeReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      int32                  `protobuf:"varint,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	TributeId     int32                  `protobuf:"varint,2,opt,name=tribute_id,json=tributeId,proto3" json:"tribute_id,omitempty"`
	Desc          string                 `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SelectTributeReply) Reset() {
	*x = SelectTributeReply{}
	mi := &file_EQMessage_proto_msgTypes[229]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SelectTributeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectTributeReply) ProtoMessage() {}

func (x *SelectTributeReply) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[229]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectTributeReply.ProtoReflect.Descriptor instead.
func (*SelectTributeReply) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{229}
}

func (x *SelectTributeReply) GetClientId() int32 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

func (x *SelectTributeReply) GetTributeId() int32 {
	if x != nil {
		return x.TributeId
	}
	return 0
}

func (x *SelectTributeReply) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

type TributeInfo struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Active          int32                  `protobuf:"varint,1,opt,name=active,proto3" json:"active,omitempty"`
	Tributes        []int32                `protobuf:"varint,2,rep,packed,name=tributes,proto3" json:"tributes,omitempty"`
	Tiers           []int32                `protobuf:"varint,3,rep,packed,name=tiers,proto3" json:"tiers,omitempty"`
	TributeMasterId int32                  `protobuf:"varint,4,opt,name=tribute_master_id,json=tributeMasterId,proto3" json:"tribute_master_id,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *TributeInfo) Reset() {
	*x = TributeInfo{}
	mi := &file_EQMessage_proto_msgTypes[230]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TributeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TributeInfo) ProtoMessage() {}

func (x *TributeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[230]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TributeInfo.ProtoReflect.Descriptor instead.
func (*TributeInfo) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{230}
}

func (x *TributeInfo) GetActive() int32 {
	if x != nil {
		return x.Active
	}
	return 0
}

func (x *TributeInfo) GetTributes() []int32 {
	if x != nil {
		return x.Tributes
	}
	return nil
}

func (x *TributeInfo) GetTiers() []int32 {
	if x != nil {
		return x.Tiers
	}
	return nil
}

func (x *TributeInfo) GetTributeMasterId() int32 {
	if x != nil {
		return x.TributeMasterId
	}
	return 0
}

type TributeItem struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Slot            int32                  `protobuf:"varint,1,opt,name=slot,proto3" json:"slot,omitempty"`
	Quantity        int32                  `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	TributeMasterId int32                  `protobuf:"varint,3,opt,name=tribute_master_id,json=tributeMasterId,proto3" json:"tribute_master_id,omitempty"`
	TributePoints   int32                  `protobuf:"varint,4,opt,name=tribute_points,json=tributePoints,proto3" json:"tribute_points,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *TributeItem) Reset() {
	*x = TributeItem{}
	mi := &file_EQMessage_proto_msgTypes[231]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TributeItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TributeItem) ProtoMessage() {}

func (x *TributeItem) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[231]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TributeItem.ProtoReflect.Descriptor instead.
func (*TributeItem) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{231}
}

func (x *TributeItem) GetSlot() int32 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *TributeItem) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *TributeItem) GetTributeMasterId() int32 {
	if x != nil {
		return x.TributeMasterId
	}
	return 0
}

func (x *TributeItem) GetTributePoints() int32 {
	if x != nil {
		return x.TributePoints
	}
	return 0
}

type TributePoint struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	TributePoints       int32                  `protobuf:"varint,1,opt,name=tribute_points,json=tributePoints,proto3" json:"tribute_points,omitempty"`
	CareerTributePoints int32                  `protobuf:"varint,2,opt,name=career_tribute_points,json=careerTributePoints,proto3" json:"career_tribute_points,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *TributePoint) Reset() {
	*x = TributePoint{}
	mi := &file_EQMessage_proto_msgTypes[232]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TributePoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TributePoint) ProtoMessage() {}

func (x *TributePoint) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[232]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TributePoint.ProtoReflect.Descriptor instead.
func (*TributePoint) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{232}
}

func (x *TributePoint) GetTributePoints() int32 {
	if x != nil {
		return x.TributePoints
	}
	return 0
}

func (x *TributePoint) GetCareerTributePoints() int32 {
	if x != nil {
		return x.CareerTributePoints
	}
	return 0
}

type TributeMoney struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Platinum        int32                  `protobuf:"varint,1,opt,name=platinum,proto3" json:"platinum,omitempty"`
	TributeMasterId int32                  `protobuf:"varint,2,opt,name=tribute_master_id,json=tributeMasterId,proto3" json:"tribute_master_id,omitempty"`
	TributePoints   int32                  `protobuf:"varint,3,opt,name=tribute_points,json=tributePoints,proto3" json:"tribute_points,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *TributeMoney) Reset() {
	*x = TributeMoney{}
	mi := &file_EQMessage_proto_msgTypes[233]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TributeMoney) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TributeMoney) ProtoMessage() {}

func (x *TributeMoney) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[233]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TributeMoney.ProtoReflect.Descriptor instead.
func (*TributeMoney) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{233}
}

func (x *TributeMoney) GetPlatinum() int32 {
	if x != nil {
		return x.Platinum
	}
	return 0
}

func (x *TributeMoney) GetTributeMasterId() int32 {
	if x != nil {
		return x.TributeMasterId
	}
	return 0
}

func (x *TributeMoney) GetTributePoints() int32 {
	if x != nil {
		return x.TributePoints
	}
	return 0
}

type Split struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Platinum      int32                  `protobuf:"varint,1,opt,name=platinum,proto3" json:"platinum,omitempty"`
	Gold          int32                  `protobuf:"varint,2,opt,name=gold,proto3" json:"gold,omitempty"`
	Silver        int32                  `protobuf:"varint,3,opt,name=silver,proto3" json:"silver,omitempty"`
	Copper        int32                  `protobuf:"varint,4,opt,name=copper,proto3" json:"copper,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Split) Reset() {
	*x = Split{}
	mi := &file_EQMessage_proto_msgTypes[234]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Split) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Split) ProtoMessage() {}

func (x *Split) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[234]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Split.ProtoReflect.Descriptor instead.
func (*Split) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{234}
}

func (x *Split) GetPlatinum() int32 {
	if x != nil {
		return x.Platinum
	}
	return 0
}

func (x *Split) GetGold() int32 {
	if x != nil {
		return x.Gold
	}
	return 0
}

func (x *Split) GetSilver() int32 {
	if x != nil {
		return x.Silver
	}
	return 0
}

func (x *Split) GetCopper() int32 {
	if x != nil {
		return x.Copper
	}
	return 0
}

type NewCombine struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ContainerSlot    int32                  `protobuf:"varint,1,opt,name=container_slot,json=containerSlot,proto3" json:"container_slot,omitempty"`
	GuildtributeSlot int32                  `protobuf:"varint,2,opt,name=guildtribute_slot,json=guildtributeSlot,proto3" json:"guildtribute_slot,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *NewCombine) Reset() {
	*x = NewCombine{}
	mi := &file_EQMessage_proto_msgTypes[235]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewCombine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewCombine) ProtoMessage() {}

func (x *NewCombine) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[235]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewCombine.ProtoReflect.Descriptor instead.
func (*NewCombine) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{235}
}

func (x *NewCombine) GetContainerSlot() int32 {
	if x != nil {
		return x.ContainerSlot
	}
	return 0
}

func (x *NewCombine) GetGuildtributeSlot() int32 {
	if x != nil {
		return x.GuildtributeSlot
	}
	return 0
}

type TradeskillFavorites struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ObjectType      int32                  `protobuf:"varint,1,opt,name=object_type,json=objectType,proto3" json:"object_type,omitempty"`
	SomeId          int32                  `protobuf:"varint,2,opt,name=some_id,json=someId,proto3" json:"some_id,omitempty"`
	FavoriteRecipes []int32                `protobuf:"varint,3,rep,packed,name=favorite_recipes,json=favoriteRecipes,proto3" json:"favorite_recipes,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *TradeskillFavorites) Reset() {
	*x = TradeskillFavorites{}
	mi := &file_EQMessage_proto_msgTypes[236]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TradeskillFavorites) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeskillFavorites) ProtoMessage() {}

func (x *TradeskillFavorites) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[236]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeskillFavorites.ProtoReflect.Descriptor instead.
func (*TradeskillFavorites) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{236}
}

func (x *TradeskillFavorites) GetObjectType() int32 {
	if x != nil {
		return x.ObjectType
	}
	return 0
}

func (x *TradeskillFavorites) GetSomeId() int32 {
	if x != nil {
		return x.SomeId
	}
	return 0
}

func (x *TradeskillFavorites) GetFavoriteRecipes() []int32 {
	if x != nil {
		return x.FavoriteRecipes
	}
	return nil
}

type RecipesSearch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ObjectType    int32                  `protobuf:"varint,1,opt,name=object_type,json=objectType,proto3" json:"object_type,omitempty"`
	SomeId        int32                  `protobuf:"varint,2,opt,name=some_id,json=someId,proto3" json:"some_id,omitempty"`
	Mintrivial    int32                  `protobuf:"varint,3,opt,name=mintrivial,proto3" json:"mintrivial,omitempty"`
	Maxtrivial    int32                  `protobuf:"varint,4,opt,name=maxtrivial,proto3" json:"maxtrivial,omitempty"`
	Query         string                 `protobuf:"bytes,5,opt,name=query,proto3" json:"query,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecipesSearch) Reset() {
	*x = RecipesSearch{}
	mi := &file_EQMessage_proto_msgTypes[237]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecipesSearch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecipesSearch) ProtoMessage() {}

func (x *RecipesSearch) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[237]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecipesSearch.ProtoReflect.Descriptor instead.
func (*RecipesSearch) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{237}
}

func (x *RecipesSearch) GetObjectType() int32 {
	if x != nil {
		return x.ObjectType
	}
	return 0
}

func (x *RecipesSearch) GetSomeId() int32 {
	if x != nil {
		return x.SomeId
	}
	return 0
}

func (x *RecipesSearch) GetMintrivial() int32 {
	if x != nil {
		return x.Mintrivial
	}
	return 0
}

func (x *RecipesSearch) GetMaxtrivial() int32 {
	if x != nil {
		return x.Maxtrivial
	}
	return 0
}

func (x *RecipesSearch) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type RecipeReply struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ObjectType     int32                  `protobuf:"varint,1,opt,name=object_type,json=objectType,proto3" json:"object_type,omitempty"`
	SomeId         int32                  `protobuf:"varint,2,opt,name=some_id,json=someId,proto3" json:"some_id,omitempty"`
	ComponentCount int32                  `protobuf:"varint,3,opt,name=component_count,json=componentCount,proto3" json:"component_count,omitempty"`
	RecipeId       int32                  `protobuf:"varint,4,opt,name=recipe_id,json=recipeId,proto3" json:"recipe_id,omitempty"`
	Trivial        int32                  `protobuf:"varint,5,opt,name=trivial,proto3" json:"trivial,omitempty"`
	RecipeName     string                 `protobuf:"bytes,6,opt,name=recipe_name,json=recipeName,proto3" json:"recipe_name,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RecipeReply) Reset() {
	*x = RecipeReply{}
	mi := &file_EQMessage_proto_msgTypes[238]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecipeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecipeReply) ProtoMessage() {}

func (x *RecipeReply) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[238]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecipeReply.ProtoReflect.Descriptor instead.
func (*RecipeReply) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{238}
}

func (x *RecipeReply) GetObjectType() int32 {
	if x != nil {
		return x.ObjectType
	}
	return 0
}

func (x *RecipeReply) GetSomeId() int32 {
	if x != nil {
		return x.SomeId
	}
	return 0
}

func (x *RecipeReply) GetComponentCount() int32 {
	if x != nil {
		return x.ComponentCount
	}
	return 0
}

func (x *RecipeReply) GetRecipeId() int32 {
	if x != nil {
		return x.RecipeId
	}
	return 0
}

func (x *RecipeReply) GetTrivial() int32 {
	if x != nil {
		return x.Trivial
	}
	return 0
}

func (x *RecipeReply) GetRecipeName() string {
	if x != nil {
		return x.RecipeName
	}
	return ""
}

type RecipeAutoCombine struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ObjectType    int32                  `protobuf:"varint,1,opt,name=object_type,json=objectType,proto3" json:"object_type,omitempty"`
	SomeId        int32                  `protobuf:"varint,2,opt,name=some_id,json=someId,proto3" json:"some_id,omitempty"`
	RecipeId      int32                  `protobuf:"varint,3,opt,name=recipe_id,json=recipeId,proto3" json:"recipe_id,omitempty"`
	ReplyCode     int32                  `protobuf:"varint,4,opt,name=reply_code,json=replyCode,proto3" json:"reply_code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecipeAutoCombine) Reset() {
	*x = RecipeAutoCombine{}
	mi := &file_EQMessage_proto_msgTypes[239]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecipeAutoCombine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecipeAutoCombine) ProtoMessage() {}

func (x *RecipeAutoCombine) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[239]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecipeAutoCombine.ProtoReflect.Descriptor instead.
func (*RecipeAutoCombine) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{239}
}

func (x *RecipeAutoCombine) GetObjectType() int32 {
	if x != nil {
		return x.ObjectType
	}
	return 0
}

func (x *RecipeAutoCombine) GetSomeId() int32 {
	if x != nil {
		return x.SomeId
	}
	return 0
}

func (x *RecipeAutoCombine) GetRecipeId() int32 {
	if x != nil {
		return x.RecipeId
	}
	return 0
}

func (x *RecipeAutoCombine) GetReplyCode() int32 {
	if x != nil {
		return x.ReplyCode
	}
	return 0
}

type LevelAppearance struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpawnId       int32                  `protobuf:"varint,1,opt,name=spawn_id,json=spawnId,proto3" json:"spawn_id,omitempty"`
	Parm1         int32                  `protobuf:"varint,2,opt,name=parm1,proto3" json:"parm1,omitempty"`
	Value1A       int32                  `protobuf:"varint,3,opt,name=value1a,proto3" json:"value1a,omitempty"`
	Value1B       int32                  `protobuf:"varint,4,opt,name=value1b,proto3" json:"value1b,omitempty"`
	Parm2         int32                  `protobuf:"varint,5,opt,name=parm2,proto3" json:"parm2,omitempty"`
	Value2A       int32                  `protobuf:"varint,6,opt,name=value2a,proto3" json:"value2a,omitempty"`
	Value2B       int32                  `protobuf:"varint,7,opt,name=value2b,proto3" json:"value2b,omitempty"`
	Parm3         int32                  `protobuf:"varint,8,opt,name=parm3,proto3" json:"parm3,omitempty"`
	Value3A       int32                  `protobuf:"varint,9,opt,name=value3a,proto3" json:"value3a,omitempty"`
	Value3B       int32                  `protobuf:"varint,10,opt,name=value3b,proto3" json:"value3b,omitempty"`
	Parm4         int32                  `protobuf:"varint,11,opt,name=parm4,proto3" json:"parm4,omitempty"`
	Value4A       int32                  `protobuf:"varint,12,opt,name=value4a,proto3" json:"value4a,omitempty"`
	Value4B       int32                  `protobuf:"varint,13,opt,name=value4b,proto3" json:"value4b,omitempty"`
	Parm5         int32                  `protobuf:"varint,14,opt,name=parm5,proto3" json:"parm5,omitempty"`
	Value5A       int32                  `protobuf:"varint,15,opt,name=value5a,proto3" json:"value5a,omitempty"`
	Value5B       int32                  `protobuf:"varint,16,opt,name=value5b,proto3" json:"value5b,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LevelAppearance) Reset() {
	*x = LevelAppearance{}
	mi := &file_EQMessage_proto_msgTypes[240]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LevelAppearance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LevelAppearance) ProtoMessage() {}

func (x *LevelAppearance) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[240]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LevelAppearance.ProtoReflect.Descriptor instead.
func (*LevelAppearance) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{240}
}

func (x *LevelAppearance) GetSpawnId() int32 {
	if x != nil {
		return x.SpawnId
	}
	return 0
}

func (x *LevelAppearance) GetParm1() int32 {
	if x != nil {
		return x.Parm1
	}
	return 0
}

func (x *LevelAppearance) GetValue1A() int32 {
	if x != nil {
		return x.Value1A
	}
	return 0
}

func (x *LevelAppearance) GetValue1B() int32 {
	if x != nil {
		return x.Value1B
	}
	return 0
}

func (x *LevelAppearance) GetParm2() int32 {
	if x != nil {
		return x.Parm2
	}
	return 0
}

func (x *LevelAppearance) GetValue2A() int32 {
	if x != nil {
		return x.Value2A
	}
	return 0
}

func (x *LevelAppearance) GetValue2B() int32 {
	if x != nil {
		return x.Value2B
	}
	return 0
}

func (x *LevelAppearance) GetParm3() int32 {
	if x != nil {
		return x.Parm3
	}
	return 0
}

func (x *LevelAppearance) GetValue3A() int32 {
	if x != nil {
		return x.Value3A
	}
	return 0
}

func (x *LevelAppearance) GetValue3B() int32 {
	if x != nil {
		return x.Value3B
	}
	return 0
}

func (x *LevelAppearance) GetParm4() int32 {
	if x != nil {
		return x.Parm4
	}
	return 0
}

func (x *LevelAppearance) GetValue4A() int32 {
	if x != nil {
		return x.Value4A
	}
	return 0
}

func (x *LevelAppearance) GetValue4B() int32 {
	if x != nil {
		return x.Value4B
	}
	return 0
}

func (x *LevelAppearance) GetParm5() int32 {
	if x != nil {
		return x.Parm5
	}
	return 0
}

func (x *LevelAppearance) GetValue5A() int32 {
	if x != nil {
		return x.Value5A
	}
	return 0
}

func (x *LevelAppearance) GetValue5B() int32 {
	if x != nil {
		return x.Value5B
	}
	return 0
}

type MerchantList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Slot          int32                  `protobuf:"varint,2,opt,name=slot,proto3" json:"slot,omitempty"`
	Item          int32                  `protobuf:"varint,3,opt,name=item,proto3" json:"item,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MerchantList) Reset() {
	*x = MerchantList{}
	mi := &file_EQMessage_proto_msgTypes[241]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MerchantList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantList) ProtoMessage() {}

func (x *MerchantList) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[241]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantList.ProtoReflect.Descriptor instead.
func (*MerchantList) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{241}
}

func (x *MerchantList) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MerchantList) GetSlot() int32 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *MerchantList) GetItem() int32 {
	if x != nil {
		return x.Item
	}
	return 0
}

type TempMerchantList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Npcid         int32                  `protobuf:"varint,1,opt,name=npcid,proto3" json:"npcid,omitempty"`
	Slot          int32                  `protobuf:"varint,2,opt,name=slot,proto3" json:"slot,omitempty"`
	Item          int32                  `protobuf:"varint,3,opt,name=item,proto3" json:"item,omitempty"`
	Charges       int32                  `protobuf:"varint,4,opt,name=charges,proto3" json:"charges,omitempty"`
	Origslot      int32                  `protobuf:"varint,5,opt,name=origslot,proto3" json:"origslot,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TempMerchantList) Reset() {
	*x = TempMerchantList{}
	mi := &file_EQMessage_proto_msgTypes[242]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TempMerchantList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TempMerchantList) ProtoMessage() {}

func (x *TempMerchantList) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[242]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TempMerchantList.ProtoReflect.Descriptor instead.
func (*TempMerchantList) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{242}
}

func (x *TempMerchantList) GetNpcid() int32 {
	if x != nil {
		return x.Npcid
	}
	return 0
}

func (x *TempMerchantList) GetSlot() int32 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *TempMerchantList) GetItem() int32 {
	if x != nil {
		return x.Item
	}
	return 0
}

func (x *TempMerchantList) GetCharges() int32 {
	if x != nil {
		return x.Charges
	}
	return 0
}

func (x *TempMerchantList) GetOrigslot() int32 {
	if x != nil {
		return x.Origslot
	}
	return 0
}

type FindPerson_Point struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Y             float32                `protobuf:"fixed32,1,opt,name=y,proto3" json:"y,omitempty"`
	X             float32                `protobuf:"fixed32,2,opt,name=x,proto3" json:"x,omitempty"`
	Z             float32                `protobuf:"fixed32,3,opt,name=z,proto3" json:"z,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindPerson_Point) Reset() {
	*x = FindPerson_Point{}
	mi := &file_EQMessage_proto_msgTypes[243]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindPerson_Point) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindPerson_Point) ProtoMessage() {}

func (x *FindPerson_Point) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[243]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindPerson_Point.ProtoReflect.Descriptor instead.
func (*FindPerson_Point) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{243}
}

func (x *FindPerson_Point) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *FindPerson_Point) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *FindPerson_Point) GetZ() float32 {
	if x != nil {
		return x.Z
	}
	return 0
}

type FindPersonRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NpcId         int32                  `protobuf:"varint,1,opt,name=npc_id,json=npcId,proto3" json:"npc_id,omitempty"`
	ClientPos     int32                  `protobuf:"varint,2,opt,name=client_pos,json=clientPos,proto3" json:"client_pos,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindPersonRequest) Reset() {
	*x = FindPersonRequest{}
	mi := &file_EQMessage_proto_msgTypes[244]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindPersonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindPersonRequest) ProtoMessage() {}

func (x *FindPersonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[244]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindPersonRequest.ProtoReflect.Descriptor instead.
func (*FindPersonRequest) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{244}
}

func (x *FindPersonRequest) GetNpcId() int32 {
	if x != nil {
		return x.NpcId
	}
	return 0
}

func (x *FindPersonRequest) GetClientPos() int32 {
	if x != nil {
		return x.ClientPos
	}
	return 0
}

type FindPersonResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Dest          int32                  `protobuf:"varint,1,opt,name=dest,proto3" json:"dest,omitempty"`
	Path          []int32                `protobuf:"varint,2,rep,packed,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindPersonResult) Reset() {
	*x = FindPersonResult{}
	mi := &file_EQMessage_proto_msgTypes[245]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindPersonResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindPersonResult) ProtoMessage() {}

func (x *FindPersonResult) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[245]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindPersonResult.ProtoReflect.Descriptor instead.
func (*FindPersonResult) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{245}
}

func (x *FindPersonResult) GetDest() int32 {
	if x != nil {
		return x.Dest
	}
	return 0
}

func (x *FindPersonResult) GetPath() []int32 {
	if x != nil {
		return x.Path
	}
	return nil
}

type MobRename struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OldName       string                 `protobuf:"bytes,1,opt,name=old_name,json=oldName,proto3" json:"old_name,omitempty"`
	OldNameAgain  string                 `protobuf:"bytes,2,opt,name=old_name_again,json=oldNameAgain,proto3" json:"old_name_again,omitempty"`
	NewName       string                 `protobuf:"bytes,3,opt,name=new_name,json=newName,proto3" json:"new_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MobRename) Reset() {
	*x = MobRename{}
	mi := &file_EQMessage_proto_msgTypes[246]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MobRename) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MobRename) ProtoMessage() {}

func (x *MobRename) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[246]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MobRename.ProtoReflect.Descriptor instead.
func (*MobRename) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{246}
}

func (x *MobRename) GetOldName() string {
	if x != nil {
		return x.OldName
	}
	return ""
}

func (x *MobRename) GetOldNameAgain() string {
	if x != nil {
		return x.OldNameAgain
	}
	return ""
}

func (x *MobRename) GetNewName() string {
	if x != nil {
		return x.NewName
	}
	return ""
}

type PlayMP3 struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlayMP3) Reset() {
	*x = PlayMP3{}
	mi := &file_EQMessage_proto_msgTypes[247]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayMP3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayMP3) ProtoMessage() {}

func (x *PlayMP3) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[247]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayMP3.ProtoReflect.Descriptor instead.
func (*PlayMP3) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{247}
}

func (x *PlayMP3) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

type TitleEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SkillId       int32                  `protobuf:"varint,1,opt,name=skill_id,json=skillId,proto3" json:"skill_id,omitempty"`
	SkillValue    int32                  `protobuf:"varint,2,opt,name=skill_value,json=skillValue,proto3" json:"skill_value,omitempty"`
	Title         string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TitleEntry) Reset() {
	*x = TitleEntry{}
	mi := &file_EQMessage_proto_msgTypes[248]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TitleEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TitleEntry) ProtoMessage() {}

func (x *TitleEntry) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[248]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TitleEntry.ProtoReflect.Descriptor instead.
func (*TitleEntry) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{248}
}

func (x *TitleEntry) GetSkillId() int32 {
	if x != nil {
		return x.SkillId
	}
	return 0
}

func (x *TitleEntry) GetSkillValue() int32 {
	if x != nil {
		return x.SkillValue
	}
	return 0
}

func (x *TitleEntry) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type Titles struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         int32                  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Titles        []*TitleEntry          `protobuf:"bytes,2,rep,name=titles,proto3" json:"titles,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Titles) Reset() {
	*x = Titles{}
	mi := &file_EQMessage_proto_msgTypes[249]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Titles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Titles) ProtoMessage() {}

func (x *Titles) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[249]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Titles.ProtoReflect.Descriptor instead.
func (*Titles) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{249}
}

func (x *Titles) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *Titles) GetTitles() []*TitleEntry {
	if x != nil {
		return x.Titles
	}
	return nil
}

type TitleListEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Prefix        string                 `protobuf:"bytes,1,opt,name=prefix,proto3" json:"prefix,omitempty"`
	Postfix       string                 `protobuf:"bytes,2,opt,name=postfix,proto3" json:"postfix,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TitleListEntry) Reset() {
	*x = TitleListEntry{}
	mi := &file_EQMessage_proto_msgTypes[250]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TitleListEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TitleListEntry) ProtoMessage() {}

func (x *TitleListEntry) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[250]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TitleListEntry.ProtoReflect.Descriptor instead.
func (*TitleListEntry) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{250}
}

func (x *TitleListEntry) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *TitleListEntry) GetPostfix() string {
	if x != nil {
		return x.Postfix
	}
	return ""
}

type TitleList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         int32                  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Titles        []*TitleListEntry      `protobuf:"bytes,2,rep,name=titles,proto3" json:"titles,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TitleList) Reset() {
	*x = TitleList{}
	mi := &file_EQMessage_proto_msgTypes[251]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TitleList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TitleList) ProtoMessage() {}

func (x *TitleList) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[251]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TitleList.ProtoReflect.Descriptor instead.
func (*TitleList) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{251}
}

func (x *TitleList) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *TitleList) GetTitles() []*TitleListEntry {
	if x != nil {
		return x.Titles
	}
	return nil
}

type SetTitle struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsSuffix      int32                  `protobuf:"varint,1,opt,name=is_suffix,json=isSuffix,proto3" json:"is_suffix,omitempty"`
	TitleId       int32                  `protobuf:"varint,2,opt,name=title_id,json=titleId,proto3" json:"title_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetTitle) Reset() {
	*x = SetTitle{}
	mi := &file_EQMessage_proto_msgTypes[252]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetTitle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTitle) ProtoMessage() {}

func (x *SetTitle) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[252]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTitle.ProtoReflect.Descriptor instead.
func (*SetTitle) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{252}
}

func (x *SetTitle) GetIsSuffix() int32 {
	if x != nil {
		return x.IsSuffix
	}
	return 0
}

func (x *SetTitle) GetTitleId() int32 {
	if x != nil {
		return x.TitleId
	}
	return 0
}

type SetTitleReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsSuffix      int32                  `protobuf:"varint,1,opt,name=is_suffix,json=isSuffix,proto3" json:"is_suffix,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	EntityId      int32                  `protobuf:"varint,3,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetTitleReply) Reset() {
	*x = SetTitleReply{}
	mi := &file_EQMessage_proto_msgTypes[253]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetTitleReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTitleReply) ProtoMessage() {}

func (x *SetTitleReply) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[253]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTitleReply.ProtoReflect.Descriptor instead.
func (*SetTitleReply) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{253}
}

func (x *SetTitleReply) GetIsSuffix() int32 {
	if x != nil {
		return x.IsSuffix
	}
	return 0
}

func (x *SetTitleReply) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SetTitleReply) GetEntityId() int32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

type TaskDescription struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ActivityCount int32                  `protobuf:"varint,1,opt,name=activity_count,json=activityCount,proto3" json:"activity_count,omitempty"`
	Taskid        int32                  `protobuf:"varint,2,opt,name=taskid,proto3" json:"taskid,omitempty"`
	Unk           int32                  `protobuf:"varint,3,opt,name=unk,proto3" json:"unk,omitempty"`
	Id            int32                  `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Desc          string                 `protobuf:"bytes,6,opt,name=desc,proto3" json:"desc,omitempty"`
	RewardCount   int32                  `protobuf:"varint,7,opt,name=reward_count,json=rewardCount,proto3" json:"reward_count,omitempty"`
	RewardLink    string                 `protobuf:"bytes,8,opt,name=reward_link,json=rewardLink,proto3" json:"reward_link,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskDescription) Reset() {
	*x = TaskDescription{}
	mi := &file_EQMessage_proto_msgTypes[254]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskDescription) ProtoMessage() {}

func (x *TaskDescription) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[254]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskDescription.ProtoReflect.Descriptor instead.
func (*TaskDescription) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{254}
}

func (x *TaskDescription) GetActivityCount() int32 {
	if x != nil {
		return x.ActivityCount
	}
	return 0
}

func (x *TaskDescription) GetTaskid() int32 {
	if x != nil {
		return x.Taskid
	}
	return 0
}

func (x *TaskDescription) GetUnk() int32 {
	if x != nil {
		return x.Unk
	}
	return 0
}

func (x *TaskDescription) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TaskDescription) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TaskDescription) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *TaskDescription) GetRewardCount() int32 {
	if x != nil {
		return x.RewardCount
	}
	return 0
}

func (x *TaskDescription) GetRewardLink() string {
	if x != nil {
		return x.RewardLink
	}
	return ""
}

type TaskMemberList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GopherId      int32                  `protobuf:"varint,1,opt,name=gopher_id,json=gopherId,proto3" json:"gopher_id,omitempty"`
	MemberCount   int32                  `protobuf:"varint,2,opt,name=member_count,json=memberCount,proto3" json:"member_count,omitempty"`
	ListPointer   string                 `protobuf:"bytes,3,opt,name=list_pointer,json=listPointer,proto3" json:"list_pointer,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskMemberList) Reset() {
	*x = TaskMemberList{}
	mi := &file_EQMessage_proto_msgTypes[255]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskMemberList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskMemberList) ProtoMessage() {}

func (x *TaskMemberList) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[255]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskMemberList.ProtoReflect.Descriptor instead.
func (*TaskMemberList) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{255}
}

func (x *TaskMemberList) GetGopherId() int32 {
	if x != nil {
		return x.GopherId
	}
	return 0
}

func (x *TaskMemberList) GetMemberCount() int32 {
	if x != nil {
		return x.MemberCount
	}
	return 0
}

func (x *TaskMemberList) GetListPointer() string {
	if x != nil {
		return x.ListPointer
	}
	return ""
}

type TaskActivity struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ActivityCount int32                  `protobuf:"varint,1,opt,name=activity_count,json=activityCount,proto3" json:"activity_count,omitempty"`
	Id            int32                  `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Taskid        int32                  `protobuf:"varint,3,opt,name=taskid,proto3" json:"taskid,omitempty"`
	ActivityId    int32                  `protobuf:"varint,4,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
	ActivityType  int32                  `protobuf:"varint,5,opt,name=activity_type,json=activityType,proto3" json:"activity_type,omitempty"`
	MobName       string                 `protobuf:"bytes,6,opt,name=mob_name,json=mobName,proto3" json:"mob_name,omitempty"`
	ItemName      string                 `protobuf:"bytes,7,opt,name=item_name,json=itemName,proto3" json:"item_name,omitempty"`
	GoalCount     int32                  `protobuf:"varint,8,opt,name=goal_count,json=goalCount,proto3" json:"goal_count,omitempty"`
	ActivityName  string                 `protobuf:"bytes,9,opt,name=activity_name,json=activityName,proto3" json:"activity_name,omitempty"`
	DoneCount     int32                  `protobuf:"varint,10,opt,name=done_count,json=doneCount,proto3" json:"done_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskActivity) Reset() {
	*x = TaskActivity{}
	mi := &file_EQMessage_proto_msgTypes[256]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskActivity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskActivity) ProtoMessage() {}

func (x *TaskActivity) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[256]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskActivity.ProtoReflect.Descriptor instead.
func (*TaskActivity) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{256}
}

func (x *TaskActivity) GetActivityCount() int32 {
	if x != nil {
		return x.ActivityCount
	}
	return 0
}

func (x *TaskActivity) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TaskActivity) GetTaskid() int32 {
	if x != nil {
		return x.Taskid
	}
	return 0
}

func (x *TaskActivity) GetActivityId() int32 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *TaskActivity) GetActivityType() int32 {
	if x != nil {
		return x.ActivityType
	}
	return 0
}

func (x *TaskActivity) GetMobName() string {
	if x != nil {
		return x.MobName
	}
	return ""
}

func (x *TaskActivity) GetItemName() string {
	if x != nil {
		return x.ItemName
	}
	return ""
}

func (x *TaskActivity) GetGoalCount() int32 {
	if x != nil {
		return x.GoalCount
	}
	return 0
}

func (x *TaskActivity) GetActivityName() string {
	if x != nil {
		return x.ActivityName
	}
	return ""
}

func (x *TaskActivity) GetDoneCount() int32 {
	if x != nil {
		return x.DoneCount
	}
	return 0
}

type TaskHistoryEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        int32                  `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CompletedTime int32                  `protobuf:"varint,3,opt,name=completed_time,json=completedTime,proto3" json:"completed_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskHistoryEntry) Reset() {
	*x = TaskHistoryEntry{}
	mi := &file_EQMessage_proto_msgTypes[257]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskHistoryEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskHistoryEntry) ProtoMessage() {}

func (x *TaskHistoryEntry) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[257]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskHistoryEntry.ProtoReflect.Descriptor instead.
func (*TaskHistoryEntry) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{257}
}

func (x *TaskHistoryEntry) GetTaskId() int32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *TaskHistoryEntry) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TaskHistoryEntry) GetCompletedTime() int32 {
	if x != nil {
		return x.CompletedTime
	}
	return 0
}

type TaskHistory struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         int32                  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Entries       []*TaskHistoryEntry    `protobuf:"bytes,2,rep,name=entries,proto3" json:"entries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskHistory) Reset() {
	*x = TaskHistory{}
	mi := &file_EQMessage_proto_msgTypes[258]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskHistory) ProtoMessage() {}

func (x *TaskHistory) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[258]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskHistory.ProtoReflect.Descriptor instead.
func (*TaskHistory) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{258}
}

func (x *TaskHistory) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *TaskHistory) GetEntries() []*TaskHistoryEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type AcceptNewTask struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        int32                  `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	TaskMasterId  int32                  `protobuf:"varint,2,opt,name=task_master_id,json=taskMasterId,proto3" json:"task_master_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AcceptNewTask) Reset() {
	*x = AcceptNewTask{}
	mi := &file_EQMessage_proto_msgTypes[259]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AcceptNewTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptNewTask) ProtoMessage() {}

func (x *AcceptNewTask) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[259]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptNewTask.ProtoReflect.Descriptor instead.
func (*AcceptNewTask) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{259}
}

func (x *AcceptNewTask) GetTaskId() int32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *AcceptNewTask) GetTaskMasterId() int32 {
	if x != nil {
		return x.TaskMasterId
	}
	return 0
}

type CancelTask struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelTask) Reset() {
	*x = CancelTask{}
	mi := &file_EQMessage_proto_msgTypes[260]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelTask) ProtoMessage() {}

func (x *CancelTask) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[260]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelTask.ProtoReflect.Descriptor instead.
func (*CancelTask) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{260}
}

type AvaliableTask struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TaskIndex      int32                  `protobuf:"varint,1,opt,name=task_index,json=taskIndex,proto3" json:"task_index,omitempty"`
	TaskMasterId   int32                  `protobuf:"varint,2,opt,name=task_master_id,json=taskMasterId,proto3" json:"task_master_id,omitempty"`
	TaskId         int32                  `protobuf:"varint,3,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	ActivityCount  int32                  `protobuf:"varint,4,opt,name=activity_count,json=activityCount,proto3" json:"activity_count,omitempty"`
	Desc           string                 `protobuf:"bytes,5,opt,name=desc,proto3" json:"desc,omitempty"`
	RewardPlatinum int32                  `protobuf:"varint,6,opt,name=reward_platinum,json=rewardPlatinum,proto3" json:"reward_platinum,omitempty"`
	RewardGold     int32                  `protobuf:"varint,7,opt,name=reward_gold,json=rewardGold,proto3" json:"reward_gold,omitempty"`
	RewardSilver   int32                  `protobuf:"varint,8,opt,name=reward_silver,json=rewardSilver,proto3" json:"reward_silver,omitempty"`
	RewardCopper   int32                  `protobuf:"varint,9,opt,name=reward_copper,json=rewardCopper,proto3" json:"reward_copper,omitempty"`
	SomeName       string                 `protobuf:"bytes,10,opt,name=some_name,json=someName,proto3" json:"some_name,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AvaliableTask) Reset() {
	*x = AvaliableTask{}
	mi := &file_EQMessage_proto_msgTypes[261]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AvaliableTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvaliableTask) ProtoMessage() {}

func (x *AvaliableTask) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[261]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvaliableTask.ProtoReflect.Descriptor instead.
func (*AvaliableTask) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{261}
}

func (x *AvaliableTask) GetTaskIndex() int32 {
	if x != nil {
		return x.TaskIndex
	}
	return 0
}

func (x *AvaliableTask) GetTaskMasterId() int32 {
	if x != nil {
		return x.TaskMasterId
	}
	return 0
}

func (x *AvaliableTask) GetTaskId() int32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *AvaliableTask) GetActivityCount() int32 {
	if x != nil {
		return x.ActivityCount
	}
	return 0
}

func (x *AvaliableTask) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *AvaliableTask) GetRewardPlatinum() int32 {
	if x != nil {
		return x.RewardPlatinum
	}
	return 0
}

func (x *AvaliableTask) GetRewardGold() int32 {
	if x != nil {
		return x.RewardGold
	}
	return 0
}

func (x *AvaliableTask) GetRewardSilver() int32 {
	if x != nil {
		return x.RewardSilver
	}
	return 0
}

func (x *AvaliableTask) GetRewardCopper() int32 {
	if x != nil {
		return x.RewardCopper
	}
	return 0
}

func (x *AvaliableTask) GetSomeName() string {
	if x != nil {
		return x.SomeName
	}
	return ""
}

type BankerChange struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Platinum      int32                  `protobuf:"varint,1,opt,name=platinum,proto3" json:"platinum,omitempty"`
	Gold          int32                  `protobuf:"varint,2,opt,name=gold,proto3" json:"gold,omitempty"`
	Silver        int32                  `protobuf:"varint,3,opt,name=silver,proto3" json:"silver,omitempty"`
	Copper        int32                  `protobuf:"varint,4,opt,name=copper,proto3" json:"copper,omitempty"`
	PlatinumBank  int32                  `protobuf:"varint,5,opt,name=platinum_bank,json=platinumBank,proto3" json:"platinum_bank,omitempty"`
	GoldBank      int32                  `protobuf:"varint,6,opt,name=gold_bank,json=goldBank,proto3" json:"gold_bank,omitempty"`
	SilverBank    int32                  `protobuf:"varint,7,opt,name=silver_bank,json=silverBank,proto3" json:"silver_bank,omitempty"`
	CopperBank    int32                  `protobuf:"varint,8,opt,name=copper_bank,json=copperBank,proto3" json:"copper_bank,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BankerChange) Reset() {
	*x = BankerChange{}
	mi := &file_EQMessage_proto_msgTypes[262]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BankerChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BankerChange) ProtoMessage() {}

func (x *BankerChange) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[262]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BankerChange.ProtoReflect.Descriptor instead.
func (*BankerChange) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{262}
}

func (x *BankerChange) GetPlatinum() int32 {
	if x != nil {
		return x.Platinum
	}
	return 0
}

func (x *BankerChange) GetGold() int32 {
	if x != nil {
		return x.Gold
	}
	return 0
}

func (x *BankerChange) GetSilver() int32 {
	if x != nil {
		return x.Silver
	}
	return 0
}

func (x *BankerChange) GetCopper() int32 {
	if x != nil {
		return x.Copper
	}
	return 0
}

func (x *BankerChange) GetPlatinumBank() int32 {
	if x != nil {
		return x.PlatinumBank
	}
	return 0
}

func (x *BankerChange) GetGoldBank() int32 {
	if x != nil {
		return x.GoldBank
	}
	return 0
}

func (x *BankerChange) GetSilverBank() int32 {
	if x != nil {
		return x.SilverBank
	}
	return 0
}

func (x *BankerChange) GetCopperBank() int32 {
	if x != nil {
		return x.CopperBank
	}
	return 0
}

type LeadershipExpUpdate struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	GroupLeadershipExp    float64                `protobuf:"fixed64,1,opt,name=group_leadership_exp,json=groupLeadershipExp,proto3" json:"group_leadership_exp,omitempty"`
	GroupLeadershipPoints int32                  `protobuf:"varint,2,opt,name=group_leadership_points,json=groupLeadershipPoints,proto3" json:"group_leadership_points,omitempty"`
	RaidLeadershipExp     float64                `protobuf:"fixed64,3,opt,name=raid_leadership_exp,json=raidLeadershipExp,proto3" json:"raid_leadership_exp,omitempty"`
	RaidLeadershipPoints  int32                  `protobuf:"varint,4,opt,name=raid_leadership_points,json=raidLeadershipPoints,proto3" json:"raid_leadership_points,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *LeadershipExpUpdate) Reset() {
	*x = LeadershipExpUpdate{}
	mi := &file_EQMessage_proto_msgTypes[263]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeadershipExpUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeadershipExpUpdate) ProtoMessage() {}

func (x *LeadershipExpUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[263]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeadershipExpUpdate.ProtoReflect.Descriptor instead.
func (*LeadershipExpUpdate) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{263}
}

func (x *LeadershipExpUpdate) GetGroupLeadershipExp() float64 {
	if x != nil {
		return x.GroupLeadershipExp
	}
	return 0
}

func (x *LeadershipExpUpdate) GetGroupLeadershipPoints() int32 {
	if x != nil {
		return x.GroupLeadershipPoints
	}
	return 0
}

func (x *LeadershipExpUpdate) GetRaidLeadershipExp() float64 {
	if x != nil {
		return x.RaidLeadershipExp
	}
	return 0
}

func (x *LeadershipExpUpdate) GetRaidLeadershipPoints() int32 {
	if x != nil {
		return x.RaidLeadershipPoints
	}
	return 0
}

type UpdateLeadershipAA struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AbilityId     int32                  `protobuf:"varint,1,opt,name=ability_id,json=abilityId,proto3" json:"ability_id,omitempty"`
	NewRank       int32                  `protobuf:"varint,2,opt,name=new_rank,json=newRank,proto3" json:"new_rank,omitempty"`
	Pointsleft    int32                  `protobuf:"varint,3,opt,name=pointsleft,proto3" json:"pointsleft,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateLeadershipAA) Reset() {
	*x = UpdateLeadershipAA{}
	mi := &file_EQMessage_proto_msgTypes[264]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateLeadershipAA) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLeadershipAA) ProtoMessage() {}

func (x *UpdateLeadershipAA) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[264]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLeadershipAA.ProtoReflect.Descriptor instead.
func (*UpdateLeadershipAA) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{264}
}

func (x *UpdateLeadershipAA) GetAbilityId() int32 {
	if x != nil {
		return x.AbilityId
	}
	return 0
}

func (x *UpdateLeadershipAA) GetNewRank() int32 {
	if x != nil {
		return x.NewRank
	}
	return 0
}

func (x *UpdateLeadershipAA) GetPointsleft() int32 {
	if x != nil {
		return x.Pointsleft
	}
	return 0
}

type LeadExpUpdate struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	GroupLeadershipExp    int32                  `protobuf:"varint,1,opt,name=group_leadership_exp,json=groupLeadershipExp,proto3" json:"group_leadership_exp,omitempty"`
	GroupLeadershipPoints int32                  `protobuf:"varint,2,opt,name=group_leadership_points,json=groupLeadershipPoints,proto3" json:"group_leadership_points,omitempty"`
	RaidLeadershipExp     int32                  `protobuf:"varint,3,opt,name=raid_leadership_exp,json=raidLeadershipExp,proto3" json:"raid_leadership_exp,omitempty"`
	RaidLeadershipPoints  int32                  `protobuf:"varint,4,opt,name=raid_leadership_points,json=raidLeadershipPoints,proto3" json:"raid_leadership_points,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *LeadExpUpdate) Reset() {
	*x = LeadExpUpdate{}
	mi := &file_EQMessage_proto_msgTypes[265]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeadExpUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeadExpUpdate) ProtoMessage() {}

func (x *LeadExpUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[265]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeadExpUpdate.ProtoReflect.Descriptor instead.
func (*LeadExpUpdate) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{265}
}

func (x *LeadExpUpdate) GetGroupLeadershipExp() int32 {
	if x != nil {
		return x.GroupLeadershipExp
	}
	return 0
}

func (x *LeadExpUpdate) GetGroupLeadershipPoints() int32 {
	if x != nil {
		return x.GroupLeadershipPoints
	}
	return 0
}

func (x *LeadExpUpdate) GetRaidLeadershipExp() int32 {
	if x != nil {
		return x.RaidLeadershipExp
	}
	return 0
}

func (x *LeadExpUpdate) GetRaidLeadershipPoints() int32 {
	if x != nil {
		return x.RaidLeadershipPoints
	}
	return 0
}

type RaidGeneral struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Action        int32                  `protobuf:"varint,1,opt,name=action,proto3" json:"action,omitempty"`
	PlayerName    string                 `protobuf:"bytes,2,opt,name=player_name,json=playerName,proto3" json:"player_name,omitempty"`
	LeaderName    string                 `protobuf:"bytes,3,opt,name=leader_name,json=leaderName,proto3" json:"leader_name,omitempty"`
	Parameter     int32                  `protobuf:"varint,4,opt,name=parameter,proto3" json:"parameter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RaidGeneral) Reset() {
	*x = RaidGeneral{}
	mi := &file_EQMessage_proto_msgTypes[266]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RaidGeneral) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RaidGeneral) ProtoMessage() {}

func (x *RaidGeneral) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[266]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RaidGeneral.ProtoReflect.Descriptor instead.
func (*RaidGeneral) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{266}
}

func (x *RaidGeneral) GetAction() int32 {
	if x != nil {
		return x.Action
	}
	return 0
}

func (x *RaidGeneral) GetPlayerName() string {
	if x != nil {
		return x.PlayerName
	}
	return ""
}

func (x *RaidGeneral) GetLeaderName() string {
	if x != nil {
		return x.LeaderName
	}
	return ""
}

func (x *RaidGeneral) GetParameter() int32 {
	if x != nil {
		return x.Parameter
	}
	return 0
}

type RaidAddMember struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RaidGen       *RaidGeneral           `protobuf:"bytes,1,opt,name=raid_gen,json=raidGen,proto3" json:"raid_gen,omitempty"`
	CharClass     int32                  `protobuf:"varint,2,opt,name=char_class,json=charClass,proto3" json:"char_class,omitempty"`
	Level         int32                  `protobuf:"varint,3,opt,name=level,proto3" json:"level,omitempty"`
	IsGroupLeader int32                  `protobuf:"varint,4,opt,name=is_group_leader,json=isGroupLeader,proto3" json:"is_group_leader,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RaidAddMember) Reset() {
	*x = RaidAddMember{}
	mi := &file_EQMessage_proto_msgTypes[267]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RaidAddMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RaidAddMember) ProtoMessage() {}

func (x *RaidAddMember) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[267]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RaidAddMember.ProtoReflect.Descriptor instead.
func (*RaidAddMember) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{267}
}

func (x *RaidAddMember) GetRaidGen() *RaidGeneral {
	if x != nil {
		return x.RaidGen
	}
	return nil
}

func (x *RaidAddMember) GetCharClass() int32 {
	if x != nil {
		return x.CharClass
	}
	return 0
}

func (x *RaidAddMember) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *RaidAddMember) GetIsGroupLeader() int32 {
	if x != nil {
		return x.IsGroupLeader
	}
	return 0
}

type RaidNote struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	General       *RaidGeneral           `protobuf:"bytes,1,opt,name=general,proto3" json:"general,omitempty"`
	Note          string                 `protobuf:"bytes,2,opt,name=note,proto3" json:"note,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RaidNote) Reset() {
	*x = RaidNote{}
	mi := &file_EQMessage_proto_msgTypes[268]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RaidNote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RaidNote) ProtoMessage() {}

func (x *RaidNote) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[268]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RaidNote.ProtoReflect.Descriptor instead.
func (*RaidNote) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{268}
}

func (x *RaidNote) GetGeneral() *RaidGeneral {
	if x != nil {
		return x.General
	}
	return nil
}

func (x *RaidNote) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

type RaidMOTD struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	General       *RaidGeneral           `protobuf:"bytes,1,opt,name=general,proto3" json:"general,omitempty"`
	Motd          string                 `protobuf:"bytes,2,opt,name=motd,proto3" json:"motd,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RaidMOTD) Reset() {
	*x = RaidMOTD{}
	mi := &file_EQMessage_proto_msgTypes[269]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RaidMOTD) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RaidMOTD) ProtoMessage() {}

func (x *RaidMOTD) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[269]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RaidMOTD.ProtoReflect.Descriptor instead.
func (*RaidMOTD) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{269}
}

func (x *RaidMOTD) GetGeneral() *RaidGeneral {
	if x != nil {
		return x.General
	}
	return nil
}

func (x *RaidMOTD) GetMotd() string {
	if x != nil {
		return x.Motd
	}
	return ""
}

type RaidLeadershipUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Action        int32                  `protobuf:"varint,1,opt,name=action,proto3" json:"action,omitempty"`
	PlayerName    string                 `protobuf:"bytes,2,opt,name=player_name,json=playerName,proto3" json:"player_name,omitempty"`
	LeaderName    string                 `protobuf:"bytes,3,opt,name=leader_name,json=leaderName,proto3" json:"leader_name,omitempty"`
	Group         *GroupLeadershipAA     `protobuf:"bytes,4,opt,name=group,proto3" json:"group,omitempty"`
	Raid          *RaidLeadershipAA      `protobuf:"bytes,5,opt,name=raid,proto3" json:"raid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RaidLeadershipUpdate) Reset() {
	*x = RaidLeadershipUpdate{}
	mi := &file_EQMessage_proto_msgTypes[270]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RaidLeadershipUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RaidLeadershipUpdate) ProtoMessage() {}

func (x *RaidLeadershipUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[270]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RaidLeadershipUpdate.ProtoReflect.Descriptor instead.
func (*RaidLeadershipUpdate) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{270}
}

func (x *RaidLeadershipUpdate) GetAction() int32 {
	if x != nil {
		return x.Action
	}
	return 0
}

func (x *RaidLeadershipUpdate) GetPlayerName() string {
	if x != nil {
		return x.PlayerName
	}
	return ""
}

func (x *RaidLeadershipUpdate) GetLeaderName() string {
	if x != nil {
		return x.LeaderName
	}
	return ""
}

func (x *RaidLeadershipUpdate) GetGroup() *GroupLeadershipAA {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *RaidLeadershipUpdate) GetRaid() *RaidLeadershipAA {
	if x != nil {
		return x.Raid
	}
	return nil
}

type RaidCreate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Action        int32                  `protobuf:"varint,1,opt,name=action,proto3" json:"action,omitempty"`
	LeaderName    string                 `protobuf:"bytes,2,opt,name=leader_name,json=leaderName,proto3" json:"leader_name,omitempty"`
	LeaderId      int32                  `protobuf:"varint,3,opt,name=leader_id,json=leaderId,proto3" json:"leader_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RaidCreate) Reset() {
	*x = RaidCreate{}
	mi := &file_EQMessage_proto_msgTypes[271]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RaidCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RaidCreate) ProtoMessage() {}

func (x *RaidCreate) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[271]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RaidCreate.ProtoReflect.Descriptor instead.
func (*RaidCreate) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{271}
}

func (x *RaidCreate) GetAction() int32 {
	if x != nil {
		return x.Action
	}
	return 0
}

func (x *RaidCreate) GetLeaderName() string {
	if x != nil {
		return x.LeaderName
	}
	return ""
}

func (x *RaidCreate) GetLeaderId() int32 {
	if x != nil {
		return x.LeaderId
	}
	return 0
}

type RaidMemberInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupNumber   int32                  `protobuf:"varint,1,opt,name=group_number,json=groupNumber,proto3" json:"group_number,omitempty"`
	MemberName    string                 `protobuf:"bytes,2,opt,name=member_name,json=memberName,proto3" json:"member_name,omitempty"`
	CharClass     int32                  `protobuf:"varint,3,opt,name=char_class,json=charClass,proto3" json:"char_class,omitempty"`
	Level         int32                  `protobuf:"varint,4,opt,name=level,proto3" json:"level,omitempty"`
	IsRaidLeader  int32                  `protobuf:"varint,5,opt,name=is_raid_leader,json=isRaidLeader,proto3" json:"is_raid_leader,omitempty"`
	IsGroupLeader int32                  `protobuf:"varint,6,opt,name=is_group_leader,json=isGroupLeader,proto3" json:"is_group_leader,omitempty"`
	MainTank      int32                  `protobuf:"varint,7,opt,name=main_tank,json=mainTank,proto3" json:"main_tank,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RaidMemberInfo) Reset() {
	*x = RaidMemberInfo{}
	mi := &file_EQMessage_proto_msgTypes[272]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RaidMemberInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RaidMemberInfo) ProtoMessage() {}

func (x *RaidMemberInfo) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[272]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RaidMemberInfo.ProtoReflect.Descriptor instead.
func (*RaidMemberInfo) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{272}
}

func (x *RaidMemberInfo) GetGroupNumber() int32 {
	if x != nil {
		return x.GroupNumber
	}
	return 0
}

func (x *RaidMemberInfo) GetMemberName() string {
	if x != nil {
		return x.MemberName
	}
	return ""
}

func (x *RaidMemberInfo) GetCharClass() int32 {
	if x != nil {
		return x.CharClass
	}
	return 0
}

func (x *RaidMemberInfo) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *RaidMemberInfo) GetIsRaidLeader() int32 {
	if x != nil {
		return x.IsRaidLeader
	}
	return 0
}

func (x *RaidMemberInfo) GetIsGroupLeader() int32 {
	if x != nil {
		return x.IsGroupLeader
	}
	return 0
}

func (x *RaidMemberInfo) GetMainTank() int32 {
	if x != nil {
		return x.MainTank
	}
	return 0
}

type RaidDetails struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Action        int32                  `protobuf:"varint,1,opt,name=action,proto3" json:"action,omitempty"`
	LeaderName    string                 `protobuf:"bytes,2,opt,name=leader_name,json=leaderName,proto3" json:"leader_name,omitempty"`
	Abilities     *LeadershipAA          `protobuf:"bytes,3,opt,name=abilities,proto3" json:"abilities,omitempty"`
	LeaderId      int32                  `protobuf:"varint,4,opt,name=leader_id,json=leaderId,proto3" json:"leader_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RaidDetails) Reset() {
	*x = RaidDetails{}
	mi := &file_EQMessage_proto_msgTypes[273]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RaidDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RaidDetails) ProtoMessage() {}

func (x *RaidDetails) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[273]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RaidDetails.ProtoReflect.Descriptor instead.
func (*RaidDetails) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{273}
}

func (x *RaidDetails) GetAction() int32 {
	if x != nil {
		return x.Action
	}
	return 0
}

func (x *RaidDetails) GetLeaderName() string {
	if x != nil {
		return x.LeaderName
	}
	return ""
}

func (x *RaidDetails) GetAbilities() *LeadershipAA {
	if x != nil {
		return x.Abilities
	}
	return nil
}

func (x *RaidDetails) GetLeaderId() int32 {
	if x != nil {
		return x.LeaderId
	}
	return 0
}

type RaidMembers struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Details       *RaidDetails           `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	MemberCount   int32                  `protobuf:"varint,2,opt,name=member_count,json=memberCount,proto3" json:"member_count,omitempty"`
	Members       []*RaidMemberInfo      `protobuf:"bytes,3,rep,name=members,proto3" json:"members,omitempty"`
	Empty         *RaidMemberInfo        `protobuf:"bytes,4,opt,name=empty,proto3" json:"empty,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RaidMembers) Reset() {
	*x = RaidMembers{}
	mi := &file_EQMessage_proto_msgTypes[274]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RaidMembers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RaidMembers) ProtoMessage() {}

func (x *RaidMembers) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[274]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RaidMembers.ProtoReflect.Descriptor instead.
func (*RaidMembers) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{274}
}

func (x *RaidMembers) GetDetails() *RaidDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *RaidMembers) GetMemberCount() int32 {
	if x != nil {
		return x.MemberCount
	}
	return 0
}

func (x *RaidMembers) GetMembers() []*RaidMemberInfo {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *RaidMembers) GetEmpty() *RaidMemberInfo {
	if x != nil {
		return x.Empty
	}
	return nil
}

type DynamicWall struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Y             float32                `protobuf:"fixed32,2,opt,name=y,proto3" json:"y,omitempty"`
	X             float32                `protobuf:"fixed32,3,opt,name=x,proto3" json:"x,omitempty"`
	Z             float32                `protobuf:"fixed32,4,opt,name=z,proto3" json:"z,omitempty"`
	OneHundred    int32                  `protobuf:"varint,5,opt,name=one_hundred,json=oneHundred,proto3" json:"one_hundred,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DynamicWall) Reset() {
	*x = DynamicWall{}
	mi := &file_EQMessage_proto_msgTypes[275]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DynamicWall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicWall) ProtoMessage() {}

func (x *DynamicWall) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[275]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicWall.ProtoReflect.Descriptor instead.
func (*DynamicWall) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{275}
}

func (x *DynamicWall) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DynamicWall) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *DynamicWall) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *DynamicWall) GetZ() float32 {
	if x != nil {
		return x.Z
	}
	return 0
}

func (x *DynamicWall) GetOneHundred() int32 {
	if x != nil {
		return x.OneHundred
	}
	return 0
}

type BandolierCreate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Action        int32                  `protobuf:"varint,1,opt,name=action,proto3" json:"action,omitempty"`
	Number        int32                  `protobuf:"varint,2,opt,name=number,proto3" json:"number,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BandolierCreate) Reset() {
	*x = BandolierCreate{}
	mi := &file_EQMessage_proto_msgTypes[276]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BandolierCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BandolierCreate) ProtoMessage() {}

func (x *BandolierCreate) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[276]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BandolierCreate.ProtoReflect.Descriptor instead.
func (*BandolierCreate) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{276}
}

func (x *BandolierCreate) GetAction() int32 {
	if x != nil {
		return x.Action
	}
	return 0
}

func (x *BandolierCreate) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *BandolierCreate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type BandolierDelete struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Action        int32                  `protobuf:"varint,1,opt,name=action,proto3" json:"action,omitempty"`
	Number        int32                  `protobuf:"varint,2,opt,name=number,proto3" json:"number,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BandolierDelete) Reset() {
	*x = BandolierDelete{}
	mi := &file_EQMessage_proto_msgTypes[277]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BandolierDelete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BandolierDelete) ProtoMessage() {}

func (x *BandolierDelete) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[277]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BandolierDelete.ProtoReflect.Descriptor instead.
func (*BandolierDelete) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{277}
}

func (x *BandolierDelete) GetAction() int32 {
	if x != nil {
		return x.Action
	}
	return 0
}

func (x *BandolierDelete) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

type BandolierSet struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Action        int32                  `protobuf:"varint,1,opt,name=action,proto3" json:"action,omitempty"`
	Number        int32                  `protobuf:"varint,2,opt,name=number,proto3" json:"number,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BandolierSet) Reset() {
	*x = BandolierSet{}
	mi := &file_EQMessage_proto_msgTypes[278]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BandolierSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BandolierSet) ProtoMessage() {}

func (x *BandolierSet) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[278]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BandolierSet.ProtoReflect.Descriptor instead.
func (*BandolierSet) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{278}
}

func (x *BandolierSet) GetAction() int32 {
	if x != nil {
		return x.Action
	}
	return 0
}

func (x *BandolierSet) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

type Arrow struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          int32                  `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	SrcY          float32                `protobuf:"fixed32,2,opt,name=src_y,json=srcY,proto3" json:"src_y,omitempty"`
	SrcX          float32                `protobuf:"fixed32,3,opt,name=src_x,json=srcX,proto3" json:"src_x,omitempty"`
	SrcZ          float32                `protobuf:"fixed32,4,opt,name=src_z,json=srcZ,proto3" json:"src_z,omitempty"`
	Velocity      float32                `protobuf:"fixed32,5,opt,name=velocity,proto3" json:"velocity,omitempty"`
	LaunchAngle   float32                `protobuf:"fixed32,6,opt,name=launch_angle,json=launchAngle,proto3" json:"launch_angle,omitempty"`
	Tilt          float32                `protobuf:"fixed32,7,opt,name=tilt,proto3" json:"tilt,omitempty"`
	Arc           float32                `protobuf:"fixed32,8,opt,name=arc,proto3" json:"arc,omitempty"`
	SourceId      int32                  `protobuf:"varint,9,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	TargetId      int32                  `protobuf:"varint,10,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	ItemId        int32                  `protobuf:"varint,11,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	ModelName     string                 `protobuf:"bytes,12,opt,name=model_name,json=modelName,proto3" json:"model_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Arrow) Reset() {
	*x = Arrow{}
	mi := &file_EQMessage_proto_msgTypes[279]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Arrow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Arrow) ProtoMessage() {}

func (x *Arrow) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[279]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Arrow.ProtoReflect.Descriptor instead.
func (*Arrow) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{279}
}

func (x *Arrow) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Arrow) GetSrcY() float32 {
	if x != nil {
		return x.SrcY
	}
	return 0
}

func (x *Arrow) GetSrcX() float32 {
	if x != nil {
		return x.SrcX
	}
	return 0
}

func (x *Arrow) GetSrcZ() float32 {
	if x != nil {
		return x.SrcZ
	}
	return 0
}

func (x *Arrow) GetVelocity() float32 {
	if x != nil {
		return x.Velocity
	}
	return 0
}

func (x *Arrow) GetLaunchAngle() float32 {
	if x != nil {
		return x.LaunchAngle
	}
	return 0
}

func (x *Arrow) GetTilt() float32 {
	if x != nil {
		return x.Tilt
	}
	return 0
}

func (x *Arrow) GetArc() float32 {
	if x != nil {
		return x.Arc
	}
	return 0
}

func (x *Arrow) GetSourceId() int32 {
	if x != nil {
		return x.SourceId
	}
	return 0
}

func (x *Arrow) GetTargetId() int32 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *Arrow) GetItemId() int32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *Arrow) GetModelName() string {
	if x != nil {
		return x.ModelName
	}
	return ""
}

type Consent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Consent) Reset() {
	*x = Consent{}
	mi := &file_EQMessage_proto_msgTypes[280]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Consent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Consent) ProtoMessage() {}

func (x *Consent) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[280]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Consent.ProtoReflect.Descriptor instead.
func (*Consent) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{280}
}

func (x *Consent) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type AdventureMerchant struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EntityId      int32                  `protobuf:"varint,1,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AdventureMerchant) Reset() {
	*x = AdventureMerchant{}
	mi := &file_EQMessage_proto_msgTypes[281]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdventureMerchant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdventureMerchant) ProtoMessage() {}

func (x *AdventureMerchant) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[281]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdventureMerchant.ProtoReflect.Descriptor instead.
func (*AdventureMerchant) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{281}
}

func (x *AdventureMerchant) GetEntityId() int32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

type Save struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Save) Reset() {
	*x = Save{}
	mi := &file_EQMessage_proto_msgTypes[282]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Save) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Save) ProtoMessage() {}

func (x *Save) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[282]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Save.ProtoReflect.Descriptor instead.
func (*Save) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{282}
}

type GMtoggle struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Toggle        int32                  `protobuf:"varint,1,opt,name=toggle,proto3" json:"toggle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GMtoggle) Reset() {
	*x = GMtoggle{}
	mi := &file_EQMessage_proto_msgTypes[283]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GMtoggle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GMtoggle) ProtoMessage() {}

func (x *GMtoggle) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[283]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GMtoggle.ProtoReflect.Descriptor instead.
func (*GMtoggle) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{283}
}

func (x *GMtoggle) GetToggle() int32 {
	if x != nil {
		return x.Toggle
	}
	return 0
}

type GroupInvite struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	InviteeName   string                 `protobuf:"bytes,1,opt,name=invitee_name,json=inviteeName,proto3" json:"invitee_name,omitempty"`
	InviterName   string                 `protobuf:"bytes,2,opt,name=inviter_name,json=inviterName,proto3" json:"inviter_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GroupInvite) Reset() {
	*x = GroupInvite{}
	mi := &file_EQMessage_proto_msgTypes[284]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroupInvite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupInvite) ProtoMessage() {}

func (x *GroupInvite) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[284]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupInvite.ProtoReflect.Descriptor instead.
func (*GroupInvite) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{284}
}

func (x *GroupInvite) GetInviteeName() string {
	if x != nil {
		return x.InviteeName
	}
	return ""
}

func (x *GroupInvite) GetInviterName() string {
	if x != nil {
		return x.InviterName
	}
	return ""
}

type ColoredText struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Color         int32                  `protobuf:"varint,1,opt,name=color,proto3" json:"color,omitempty"`
	Msg           string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ColoredText) Reset() {
	*x = ColoredText{}
	mi := &file_EQMessage_proto_msgTypes[285]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ColoredText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColoredText) ProtoMessage() {}

func (x *ColoredText) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[285]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColoredText.ProtoReflect.Descriptor instead.
func (*ColoredText) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{285}
}

func (x *ColoredText) GetColor() int32 {
	if x != nil {
		return x.Color
	}
	return 0
}

func (x *ColoredText) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type UseAA struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Begin         int32                  `protobuf:"varint,1,opt,name=begin,proto3" json:"begin,omitempty"`
	Ability       int32                  `protobuf:"varint,2,opt,name=ability,proto3" json:"ability,omitempty"`
	End           int32                  `protobuf:"varint,3,opt,name=end,proto3" json:"end,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UseAA) Reset() {
	*x = UseAA{}
	mi := &file_EQMessage_proto_msgTypes[286]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UseAA) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UseAA) ProtoMessage() {}

func (x *UseAA) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[286]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UseAA.ProtoReflect.Descriptor instead.
func (*UseAA) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{286}
}

func (x *UseAA) GetBegin() int32 {
	if x != nil {
		return x.Begin
	}
	return 0
}

func (x *UseAA) GetAbility() int32 {
	if x != nil {
		return x.Ability
	}
	return 0
}

func (x *UseAA) GetEnd() int32 {
	if x != nil {
		return x.End
	}
	return 0
}

type AA_Ability struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SkillId       int32                  `protobuf:"varint,1,opt,name=skill_id,json=skillId,proto3" json:"skill_id,omitempty"`
	BaseValue     int32                  `protobuf:"varint,2,opt,name=base_value,json=baseValue,proto3" json:"base_value,omitempty"`
	LimitValue    int32                  `protobuf:"varint,3,opt,name=limit_value,json=limitValue,proto3" json:"limit_value,omitempty"`
	Slot          int32                  `protobuf:"varint,4,opt,name=slot,proto3" json:"slot,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AA_Ability) Reset() {
	*x = AA_Ability{}
	mi := &file_EQMessage_proto_msgTypes[287]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AA_Ability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AA_Ability) ProtoMessage() {}

func (x *AA_Ability) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[287]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AA_Ability.ProtoReflect.Descriptor instead.
func (*AA_Ability) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{287}
}

func (x *AA_Ability) GetSkillId() int32 {
	if x != nil {
		return x.SkillId
	}
	return 0
}

func (x *AA_Ability) GetBaseValue() int32 {
	if x != nil {
		return x.BaseValue
	}
	return 0
}

func (x *AA_Ability) GetLimitValue() int32 {
	if x != nil {
		return x.LimitValue
	}
	return 0
}

func (x *AA_Ability) GetSlot() int32 {
	if x != nil {
		return x.Slot
	}
	return 0
}

type SendAA struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Id              int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	HotkeySid       int32                  `protobuf:"varint,2,opt,name=hotkey_sid,json=hotkeySid,proto3" json:"hotkey_sid,omitempty"`
	HotkeySid2      int32                  `protobuf:"varint,3,opt,name=hotkey_sid2,json=hotkeySid2,proto3" json:"hotkey_sid2,omitempty"`
	TitleSid        int32                  `protobuf:"varint,4,opt,name=title_sid,json=titleSid,proto3" json:"title_sid,omitempty"`
	DescSid         int32                  `protobuf:"varint,5,opt,name=desc_sid,json=descSid,proto3" json:"desc_sid,omitempty"`
	ClassType       int32                  `protobuf:"varint,6,opt,name=class_type,json=classType,proto3" json:"class_type,omitempty"`
	Cost            int32                  `protobuf:"varint,7,opt,name=cost,proto3" json:"cost,omitempty"`
	Seq             int32                  `protobuf:"varint,8,opt,name=seq,proto3" json:"seq,omitempty"`
	CurrentLevel    int32                  `protobuf:"varint,9,opt,name=current_level,json=currentLevel,proto3" json:"current_level,omitempty"`
	PrereqSkill     int32                  `protobuf:"varint,10,opt,name=prereq_skill,json=prereqSkill,proto3" json:"prereq_skill,omitempty"`
	PrereqMinpoints int32                  `protobuf:"varint,11,opt,name=prereq_minpoints,json=prereqMinpoints,proto3" json:"prereq_minpoints,omitempty"`
	Type            int32                  `protobuf:"varint,12,opt,name=type,proto3" json:"type,omitempty"`
	Spellid         int32                  `protobuf:"varint,13,opt,name=spellid,proto3" json:"spellid,omitempty"`
	SpellType       int32                  `protobuf:"varint,14,opt,name=spell_type,json=spellType,proto3" json:"spell_type,omitempty"`
	SpellRefresh    int32                  `protobuf:"varint,15,opt,name=spell_refresh,json=spellRefresh,proto3" json:"spell_refresh,omitempty"`
	Classes         int32                  `protobuf:"varint,16,opt,name=classes,proto3" json:"classes,omitempty"`
	MaxLevel        int32                  `protobuf:"varint,17,opt,name=max_level,json=maxLevel,proto3" json:"max_level,omitempty"`
	LastId          int32                  `protobuf:"varint,18,opt,name=last_id,json=lastId,proto3" json:"last_id,omitempty"`
	NextId          int32                  `protobuf:"varint,19,opt,name=next_id,json=nextId,proto3" json:"next_id,omitempty"`
	Cost2           int32                  `protobuf:"varint,20,opt,name=cost2,proto3" json:"cost2,omitempty"`
	Count           int32                  `protobuf:"varint,21,opt,name=count,proto3" json:"count,omitempty"`
	Abilities       []*AA_Ability          `protobuf:"bytes,22,rep,name=abilities,proto3" json:"abilities,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SendAA) Reset() {
	*x = SendAA{}
	mi := &file_EQMessage_proto_msgTypes[288]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendAA) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendAA) ProtoMessage() {}

func (x *SendAA) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[288]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendAA.ProtoReflect.Descriptor instead.
func (*SendAA) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{288}
}

func (x *SendAA) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SendAA) GetHotkeySid() int32 {
	if x != nil {
		return x.HotkeySid
	}
	return 0
}

func (x *SendAA) GetHotkeySid2() int32 {
	if x != nil {
		return x.HotkeySid2
	}
	return 0
}

func (x *SendAA) GetTitleSid() int32 {
	if x != nil {
		return x.TitleSid
	}
	return 0
}

func (x *SendAA) GetDescSid() int32 {
	if x != nil {
		return x.DescSid
	}
	return 0
}

func (x *SendAA) GetClassType() int32 {
	if x != nil {
		return x.ClassType
	}
	return 0
}

func (x *SendAA) GetCost() int32 {
	if x != nil {
		return x.Cost
	}
	return 0
}

func (x *SendAA) GetSeq() int32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *SendAA) GetCurrentLevel() int32 {
	if x != nil {
		return x.CurrentLevel
	}
	return 0
}

func (x *SendAA) GetPrereqSkill() int32 {
	if x != nil {
		return x.PrereqSkill
	}
	return 0
}

func (x *SendAA) GetPrereqMinpoints() int32 {
	if x != nil {
		return x.PrereqMinpoints
	}
	return 0
}

func (x *SendAA) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *SendAA) GetSpellid() int32 {
	if x != nil {
		return x.Spellid
	}
	return 0
}

func (x *SendAA) GetSpellType() int32 {
	if x != nil {
		return x.SpellType
	}
	return 0
}

func (x *SendAA) GetSpellRefresh() int32 {
	if x != nil {
		return x.SpellRefresh
	}
	return 0
}

func (x *SendAA) GetClasses() int32 {
	if x != nil {
		return x.Classes
	}
	return 0
}

func (x *SendAA) GetMaxLevel() int32 {
	if x != nil {
		return x.MaxLevel
	}
	return 0
}

func (x *SendAA) GetLastId() int32 {
	if x != nil {
		return x.LastId
	}
	return 0
}

func (x *SendAA) GetNextId() int32 {
	if x != nil {
		return x.NextId
	}
	return 0
}

func (x *SendAA) GetCost2() int32 {
	if x != nil {
		return x.Cost2
	}
	return 0
}

func (x *SendAA) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *SendAA) GetAbilities() []*AA_Ability {
	if x != nil {
		return x.Abilities
	}
	return nil
}

type AA_List struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         int32                  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Aa            []*SendAA              `protobuf:"bytes,2,rep,name=aa,proto3" json:"aa,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AA_List) Reset() {
	*x = AA_List{}
	mi := &file_EQMessage_proto_msgTypes[289]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AA_List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AA_List) ProtoMessage() {}

func (x *AA_List) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[289]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AA_List.ProtoReflect.Descriptor instead.
func (*AA_List) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{289}
}

func (x *AA_List) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *AA_List) GetAa() []*SendAA {
	if x != nil {
		return x.Aa
	}
	return nil
}

type AA_Action struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Action        int32                  `protobuf:"varint,1,opt,name=action,proto3" json:"action,omitempty"`
	Ability       int32                  `protobuf:"varint,2,opt,name=ability,proto3" json:"ability,omitempty"`
	TargetId      int32                  `protobuf:"varint,3,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	ExpValue      int32                  `protobuf:"varint,4,opt,name=exp_value,json=expValue,proto3" json:"exp_value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AA_Action) Reset() {
	*x = AA_Action{}
	mi := &file_EQMessage_proto_msgTypes[290]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AA_Action) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AA_Action) ProtoMessage() {}

func (x *AA_Action) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[290]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AA_Action.ProtoReflect.Descriptor instead.
func (*AA_Action) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{290}
}

func (x *AA_Action) GetAction() int32 {
	if x != nil {
		return x.Action
	}
	return 0
}

func (x *AA_Action) GetAbility() int32 {
	if x != nil {
		return x.Ability
	}
	return 0
}

func (x *AA_Action) GetTargetId() int32 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *AA_Action) GetExpValue() int32 {
	if x != nil {
		return x.ExpValue
	}
	return 0
}

type AAExpUpdate struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	AapointsUnspent int32                  `protobuf:"varint,1,opt,name=aapoints_unspent,json=aapointsUnspent,proto3" json:"aapoints_unspent,omitempty"`
	AaxpPercent     int32                  `protobuf:"varint,2,opt,name=aaxp_percent,json=aaxpPercent,proto3" json:"aaxp_percent,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *AAExpUpdate) Reset() {
	*x = AAExpUpdate{}
	mi := &file_EQMessage_proto_msgTypes[291]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AAExpUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AAExpUpdate) ProtoMessage() {}

func (x *AAExpUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[291]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AAExpUpdate.ProtoReflect.Descriptor instead.
func (*AAExpUpdate) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{291}
}

func (x *AAExpUpdate) GetAapointsUnspent() int32 {
	if x != nil {
		return x.AapointsUnspent
	}
	return 0
}

func (x *AAExpUpdate) GetAaxpPercent() int32 {
	if x != nil {
		return x.AaxpPercent
	}
	return 0
}

type AltAdvStats struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Experience    int32                  `protobuf:"varint,1,opt,name=experience,proto3" json:"experience,omitempty"`
	Unspent       int32                  `protobuf:"varint,2,opt,name=unspent,proto3" json:"unspent,omitempty"`
	Percentage    int32                  `protobuf:"varint,3,opt,name=percentage,proto3" json:"percentage,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AltAdvStats) Reset() {
	*x = AltAdvStats{}
	mi := &file_EQMessage_proto_msgTypes[292]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AltAdvStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AltAdvStats) ProtoMessage() {}

func (x *AltAdvStats) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[292]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AltAdvStats.ProtoReflect.Descriptor instead.
func (*AltAdvStats) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{292}
}

func (x *AltAdvStats) GetExperience() int32 {
	if x != nil {
		return x.Experience
	}
	return 0
}

func (x *AltAdvStats) GetUnspent() int32 {
	if x != nil {
		return x.Unspent
	}
	return 0
}

func (x *AltAdvStats) GetPercentage() int32 {
	if x != nil {
		return x.Percentage
	}
	return 0
}

type PlayerAA struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AaList        []*AA_Array            `protobuf:"bytes,1,rep,name=aa_list,json=aaList,proto3" json:"aa_list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlayerAA) Reset() {
	*x = PlayerAA{}
	mi := &file_EQMessage_proto_msgTypes[293]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerAA) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerAA) ProtoMessage() {}

func (x *PlayerAA) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[293]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerAA.ProtoReflect.Descriptor instead.
func (*PlayerAA) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{293}
}

func (x *PlayerAA) GetAaList() []*AA_Array {
	if x != nil {
		return x.AaList
	}
	return nil
}

type AATable struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AaList        []*AA_Array            `protobuf:"bytes,1,rep,name=aa_list,json=aaList,proto3" json:"aa_list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AATable) Reset() {
	*x = AATable{}
	mi := &file_EQMessage_proto_msgTypes[294]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AATable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AATable) ProtoMessage() {}

func (x *AATable) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[294]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AATable.ProtoReflect.Descriptor instead.
func (*AATable) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{294}
}

func (x *AATable) GetAaList() []*AA_Array {
	if x != nil {
		return x.AaList
	}
	return nil
}

type Weather struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Val           int32                  `protobuf:"varint,1,opt,name=val,proto3" json:"val,omitempty"`
	Type          int32                  `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	Mode          int32                  `protobuf:"varint,3,opt,name=mode,proto3" json:"mode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Weather) Reset() {
	*x = Weather{}
	mi := &file_EQMessage_proto_msgTypes[295]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Weather) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Weather) ProtoMessage() {}

func (x *Weather) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[295]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Weather.ProtoReflect.Descriptor instead.
func (*Weather) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{295}
}

func (x *Weather) GetVal() int32 {
	if x != nil {
		return x.Val
	}
	return 0
}

func (x *Weather) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Weather) GetMode() int32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

type LoadSpellSet struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Spell         []int32                `protobuf:"varint,1,rep,packed,name=spell,proto3" json:"spell,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoadSpellSet) Reset() {
	*x = LoadSpellSet{}
	mi := &file_EQMessage_proto_msgTypes[296]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoadSpellSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadSpellSet) ProtoMessage() {}

func (x *LoadSpellSet) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[296]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadSpellSet.ProtoReflect.Descriptor instead.
func (*LoadSpellSet) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{296}
}

func (x *LoadSpellSet) GetSpell() []int32 {
	if x != nil {
		return x.Spell
	}
	return nil
}

type ApplyPoison struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	InventorySlot int32                  `protobuf:"varint,1,opt,name=inventory_slot,json=inventorySlot,proto3" json:"inventory_slot,omitempty"`
	Success       int32                  `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApplyPoison) Reset() {
	*x = ApplyPoison{}
	mi := &file_EQMessage_proto_msgTypes[297]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplyPoison) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyPoison) ProtoMessage() {}

func (x *ApplyPoison) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[297]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyPoison.ProtoReflect.Descriptor instead.
func (*ApplyPoison) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{297}
}

func (x *ApplyPoison) GetInventorySlot() int32 {
	if x != nil {
		return x.InventorySlot
	}
	return 0
}

func (x *ApplyPoison) GetSuccess() int32 {
	if x != nil {
		return x.Success
	}
	return 0
}

type GuildMemberUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GuildId       int32                  `protobuf:"varint,1,opt,name=guild_id,json=guildId,proto3" json:"guild_id,omitempty"`
	MemberName    string                 `protobuf:"bytes,2,opt,name=member_name,json=memberName,proto3" json:"member_name,omitempty"`
	ZoneId        int32                  `protobuf:"varint,3,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	InstanceId    int32                  `protobuf:"varint,4,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GuildMemberUpdate) Reset() {
	*x = GuildMemberUpdate{}
	mi := &file_EQMessage_proto_msgTypes[298]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GuildMemberUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuildMemberUpdate) ProtoMessage() {}

func (x *GuildMemberUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[298]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuildMemberUpdate.ProtoReflect.Descriptor instead.
func (*GuildMemberUpdate) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{298}
}

func (x *GuildMemberUpdate) GetGuildId() int32 {
	if x != nil {
		return x.GuildId
	}
	return 0
}

func (x *GuildMemberUpdate) GetMemberName() string {
	if x != nil {
		return x.MemberName
	}
	return ""
}

func (x *GuildMemberUpdate) GetZoneId() int32 {
	if x != nil {
		return x.ZoneId
	}
	return 0
}

func (x *GuildMemberUpdate) GetInstanceId() int32 {
	if x != nil {
		return x.InstanceId
	}
	return 0
}

type VeteranRewardItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ItemId        int32                  `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	ItemName      string                 `protobuf:"bytes,2,opt,name=item_name,json=itemName,proto3" json:"item_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VeteranRewardItem) Reset() {
	*x = VeteranRewardItem{}
	mi := &file_EQMessage_proto_msgTypes[299]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VeteranRewardItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VeteranRewardItem) ProtoMessage() {}

func (x *VeteranRewardItem) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[299]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VeteranRewardItem.ProtoReflect.Descriptor instead.
func (*VeteranRewardItem) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{299}
}

func (x *VeteranRewardItem) GetItemId() int32 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *VeteranRewardItem) GetItemName() string {
	if x != nil {
		return x.ItemName
	}
	return ""
}

type VeteranReward struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClaimId       int32                  `protobuf:"varint,1,opt,name=claim_id,json=claimId,proto3" json:"claim_id,omitempty"`
	Item          *VeteranRewardItem     `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VeteranReward) Reset() {
	*x = VeteranReward{}
	mi := &file_EQMessage_proto_msgTypes[300]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VeteranReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VeteranReward) ProtoMessage() {}

func (x *VeteranReward) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[300]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VeteranReward.ProtoReflect.Descriptor instead.
func (*VeteranReward) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{300}
}

func (x *VeteranReward) GetClaimId() int32 {
	if x != nil {
		return x.ClaimId
	}
	return 0
}

func (x *VeteranReward) GetItem() *VeteranRewardItem {
	if x != nil {
		return x.Item
	}
	return nil
}

type ExpeditionInvite struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ClientId       int32                  `protobuf:"varint,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	InviterName    string                 `protobuf:"bytes,2,opt,name=inviter_name,json=inviterName,proto3" json:"inviter_name,omitempty"`
	ExpeditionName string                 `protobuf:"bytes,3,opt,name=expedition_name,json=expeditionName,proto3" json:"expedition_name,omitempty"`
	Swapping       int32                  `protobuf:"varint,4,opt,name=swapping,proto3" json:"swapping,omitempty"`
	SwapName       string                 `protobuf:"bytes,5,opt,name=swap_name,json=swapName,proto3" json:"swap_name,omitempty"`
	Padding        []int32                `protobuf:"varint,6,rep,packed,name=padding,proto3" json:"padding,omitempty"`
	DzZoneId       int32                  `protobuf:"varint,7,opt,name=dz_zone_id,json=dzZoneId,proto3" json:"dz_zone_id,omitempty"`
	DzInstanceId   int32                  `protobuf:"varint,8,opt,name=dz_instance_id,json=dzInstanceId,proto3" json:"dz_instance_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ExpeditionInvite) Reset() {
	*x = ExpeditionInvite{}
	mi := &file_EQMessage_proto_msgTypes[301]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExpeditionInvite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpeditionInvite) ProtoMessage() {}

func (x *ExpeditionInvite) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[301]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpeditionInvite.ProtoReflect.Descriptor instead.
func (*ExpeditionInvite) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{301}
}

func (x *ExpeditionInvite) GetClientId() int32 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

func (x *ExpeditionInvite) GetInviterName() string {
	if x != nil {
		return x.InviterName
	}
	return ""
}

func (x *ExpeditionInvite) GetExpeditionName() string {
	if x != nil {
		return x.ExpeditionName
	}
	return ""
}

func (x *ExpeditionInvite) GetSwapping() int32 {
	if x != nil {
		return x.Swapping
	}
	return 0
}

func (x *ExpeditionInvite) GetSwapName() string {
	if x != nil {
		return x.SwapName
	}
	return ""
}

func (x *ExpeditionInvite) GetPadding() []int32 {
	if x != nil {
		return x.Padding
	}
	return nil
}

func (x *ExpeditionInvite) GetDzZoneId() int32 {
	if x != nil {
		return x.DzZoneId
	}
	return 0
}

func (x *ExpeditionInvite) GetDzInstanceId() int32 {
	if x != nil {
		return x.DzInstanceId
	}
	return 0
}

type ExpeditionInviteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DzZoneId      int32                  `protobuf:"varint,1,opt,name=dz_zone_id,json=dzZoneId,proto3" json:"dz_zone_id,omitempty"`
	DzInstanceId  int32                  `protobuf:"varint,2,opt,name=dz_instance_id,json=dzInstanceId,proto3" json:"dz_instance_id,omitempty"`
	Accepted      int32                  `protobuf:"varint,3,opt,name=accepted,proto3" json:"accepted,omitempty"`
	Swapping      int32                  `protobuf:"varint,4,opt,name=swapping,proto3" json:"swapping,omitempty"`
	SwapName      string                 `protobuf:"bytes,5,opt,name=swap_name,json=swapName,proto3" json:"swap_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExpeditionInviteResponse) Reset() {
	*x = ExpeditionInviteResponse{}
	mi := &file_EQMessage_proto_msgTypes[302]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExpeditionInviteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpeditionInviteResponse) ProtoMessage() {}

func (x *ExpeditionInviteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[302]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpeditionInviteResponse.ProtoReflect.Descriptor instead.
func (*ExpeditionInviteResponse) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{302}
}

func (x *ExpeditionInviteResponse) GetDzZoneId() int32 {
	if x != nil {
		return x.DzZoneId
	}
	return 0
}

func (x *ExpeditionInviteResponse) GetDzInstanceId() int32 {
	if x != nil {
		return x.DzInstanceId
	}
	return 0
}

func (x *ExpeditionInviteResponse) GetAccepted() int32 {
	if x != nil {
		return x.Accepted
	}
	return 0
}

func (x *ExpeditionInviteResponse) GetSwapping() int32 {
	if x != nil {
		return x.Swapping
	}
	return 0
}

func (x *ExpeditionInviteResponse) GetSwapName() string {
	if x != nil {
		return x.SwapName
	}
	return ""
}

type DynamicZoneInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      int32                  `protobuf:"varint,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	Assigned      int32                  `protobuf:"varint,2,opt,name=assigned,proto3" json:"assigned,omitempty"`
	MaxPlayers    int32                  `protobuf:"varint,3,opt,name=max_players,json=maxPlayers,proto3" json:"max_players,omitempty"`
	DzName        string                 `protobuf:"bytes,4,opt,name=dz_name,json=dzName,proto3" json:"dz_name,omitempty"`
	LeaderName    string                 `protobuf:"bytes,5,opt,name=leader_name,json=leaderName,proto3" json:"leader_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DynamicZoneInfo) Reset() {
	*x = DynamicZoneInfo{}
	mi := &file_EQMessage_proto_msgTypes[303]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DynamicZoneInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicZoneInfo) ProtoMessage() {}

func (x *DynamicZoneInfo) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[303]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicZoneInfo.ProtoReflect.Descriptor instead.
func (*DynamicZoneInfo) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{303}
}

func (x *DynamicZoneInfo) GetClientId() int32 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

func (x *DynamicZoneInfo) GetAssigned() int32 {
	if x != nil {
		return x.Assigned
	}
	return 0
}

func (x *DynamicZoneInfo) GetMaxPlayers() int32 {
	if x != nil {
		return x.MaxPlayers
	}
	return 0
}

func (x *DynamicZoneInfo) GetDzName() string {
	if x != nil {
		return x.DzName
	}
	return ""
}

func (x *DynamicZoneInfo) GetLeaderName() string {
	if x != nil {
		return x.LeaderName
	}
	return ""
}

type DynamicZoneMemberEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	OnlineStatus  int32                  `protobuf:"varint,2,opt,name=online_status,json=onlineStatus,proto3" json:"online_status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DynamicZoneMemberEntry) Reset() {
	*x = DynamicZoneMemberEntry{}
	mi := &file_EQMessage_proto_msgTypes[304]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DynamicZoneMemberEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicZoneMemberEntry) ProtoMessage() {}

func (x *DynamicZoneMemberEntry) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[304]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicZoneMemberEntry.ProtoReflect.Descriptor instead.
func (*DynamicZoneMemberEntry) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{304}
}

func (x *DynamicZoneMemberEntry) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DynamicZoneMemberEntry) GetOnlineStatus() int32 {
	if x != nil {
		return x.OnlineStatus
	}
	return 0
}

type DynamicZoneMemberList struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	ClientId      int32                     `protobuf:"varint,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	Count         int32                     `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Members       []*DynamicZoneMemberEntry `protobuf:"bytes,3,rep,name=members,proto3" json:"members,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DynamicZoneMemberList) Reset() {
	*x = DynamicZoneMemberList{}
	mi := &file_EQMessage_proto_msgTypes[305]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DynamicZoneMemberList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicZoneMemberList) ProtoMessage() {}

func (x *DynamicZoneMemberList) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[305]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicZoneMemberList.ProtoReflect.Descriptor instead.
func (*DynamicZoneMemberList) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{305}
}

func (x *DynamicZoneMemberList) GetClientId() int32 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

func (x *DynamicZoneMemberList) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *DynamicZoneMemberList) GetMembers() []*DynamicZoneMemberEntry {
	if x != nil {
		return x.Members
	}
	return nil
}

type DynamicZoneMemberListName struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      int32                  `protobuf:"varint,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	AddName       int32                  `protobuf:"varint,2,opt,name=add_name,json=addName,proto3" json:"add_name,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DynamicZoneMemberListName) Reset() {
	*x = DynamicZoneMemberListName{}
	mi := &file_EQMessage_proto_msgTypes[306]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DynamicZoneMemberListName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicZoneMemberListName) ProtoMessage() {}

func (x *DynamicZoneMemberListName) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[306]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicZoneMemberListName.ProtoReflect.Descriptor instead.
func (*DynamicZoneMemberListName) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{306}
}

func (x *DynamicZoneMemberListName) GetClientId() int32 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

func (x *DynamicZoneMemberListName) GetAddName() int32 {
	if x != nil {
		return x.AddName
	}
	return 0
}

func (x *DynamicZoneMemberListName) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ExpeditionLockoutTimerEntry struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ExpeditionName   string                 `protobuf:"bytes,1,opt,name=expedition_name,json=expeditionName,proto3" json:"expedition_name,omitempty"`
	SecondsRemaining int32                  `protobuf:"varint,2,opt,name=seconds_remaining,json=secondsRemaining,proto3" json:"seconds_remaining,omitempty"`
	EventType        int32                  `protobuf:"varint,3,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	EventName        string                 `protobuf:"bytes,4,opt,name=event_name,json=eventName,proto3" json:"event_name,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ExpeditionLockoutTimerEntry) Reset() {
	*x = ExpeditionLockoutTimerEntry{}
	mi := &file_EQMessage_proto_msgTypes[307]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExpeditionLockoutTimerEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpeditionLockoutTimerEntry) ProtoMessage() {}

func (x *ExpeditionLockoutTimerEntry) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[307]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpeditionLockoutTimerEntry.ProtoReflect.Descriptor instead.
func (*ExpeditionLockoutTimerEntry) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{307}
}

func (x *ExpeditionLockoutTimerEntry) GetExpeditionName() string {
	if x != nil {
		return x.ExpeditionName
	}
	return ""
}

func (x *ExpeditionLockoutTimerEntry) GetSecondsRemaining() int32 {
	if x != nil {
		return x.SecondsRemaining
	}
	return 0
}

func (x *ExpeditionLockoutTimerEntry) GetEventType() int32 {
	if x != nil {
		return x.EventType
	}
	return 0
}

func (x *ExpeditionLockoutTimerEntry) GetEventName() string {
	if x != nil {
		return x.EventName
	}
	return ""
}

type ExpeditionLockoutTimers struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	ClientId      int32                          `protobuf:"varint,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	Count         int32                          `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Timers        []*ExpeditionLockoutTimerEntry `protobuf:"bytes,3,rep,name=timers,proto3" json:"timers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExpeditionLockoutTimers) Reset() {
	*x = ExpeditionLockoutTimers{}
	mi := &file_EQMessage_proto_msgTypes[308]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExpeditionLockoutTimers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpeditionLockoutTimers) ProtoMessage() {}

func (x *ExpeditionLockoutTimers) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[308]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpeditionLockoutTimers.ProtoReflect.Descriptor instead.
func (*ExpeditionLockoutTimers) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{308}
}

func (x *ExpeditionLockoutTimers) GetClientId() int32 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

func (x *ExpeditionLockoutTimers) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ExpeditionLockoutTimers) GetTimers() []*ExpeditionLockoutTimerEntry {
	if x != nil {
		return x.Timers
	}
	return nil
}

type DynamicZoneLeaderName struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      int32                  `protobuf:"varint,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	LeaderName    string                 `protobuf:"bytes,2,opt,name=leader_name,json=leaderName,proto3" json:"leader_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DynamicZoneLeaderName) Reset() {
	*x = DynamicZoneLeaderName{}
	mi := &file_EQMessage_proto_msgTypes[309]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DynamicZoneLeaderName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicZoneLeaderName) ProtoMessage() {}

func (x *DynamicZoneLeaderName) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[309]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicZoneLeaderName.ProtoReflect.Descriptor instead.
func (*DynamicZoneLeaderName) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{309}
}

func (x *DynamicZoneLeaderName) GetClientId() int32 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

func (x *DynamicZoneLeaderName) GetLeaderName() string {
	if x != nil {
		return x.LeaderName
	}
	return ""
}

type ExpeditionCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExpeditionCommand) Reset() {
	*x = ExpeditionCommand{}
	mi := &file_EQMessage_proto_msgTypes[310]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExpeditionCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpeditionCommand) ProtoMessage() {}

func (x *ExpeditionCommand) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[310]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpeditionCommand.ProtoReflect.Descriptor instead.
func (*ExpeditionCommand) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{310}
}

func (x *ExpeditionCommand) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ExpeditionCommandSwap struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AddPlayerName string                 `protobuf:"bytes,1,opt,name=add_player_name,json=addPlayerName,proto3" json:"add_player_name,omitempty"`
	RemPlayerName string                 `protobuf:"bytes,2,opt,name=rem_player_name,json=remPlayerName,proto3" json:"rem_player_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExpeditionCommandSwap) Reset() {
	*x = ExpeditionCommandSwap{}
	mi := &file_EQMessage_proto_msgTypes[311]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExpeditionCommandSwap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpeditionCommandSwap) ProtoMessage() {}

func (x *ExpeditionCommandSwap) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[311]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpeditionCommandSwap.ProtoReflect.Descriptor instead.
func (*ExpeditionCommandSwap) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{311}
}

func (x *ExpeditionCommandSwap) GetAddPlayerName() string {
	if x != nil {
		return x.AddPlayerName
	}
	return ""
}

func (x *ExpeditionCommandSwap) GetRemPlayerName() string {
	if x != nil {
		return x.RemPlayerName
	}
	return ""
}

type ExpeditionExpireWarning struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ClientId         int32                  `protobuf:"varint,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	MinutesRemaining int32                  `protobuf:"varint,2,opt,name=minutes_remaining,json=minutesRemaining,proto3" json:"minutes_remaining,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ExpeditionExpireWarning) Reset() {
	*x = ExpeditionExpireWarning{}
	mi := &file_EQMessage_proto_msgTypes[312]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExpeditionExpireWarning) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpeditionExpireWarning) ProtoMessage() {}

func (x *ExpeditionExpireWarning) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[312]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpeditionExpireWarning.ProtoReflect.Descriptor instead.
func (*ExpeditionExpireWarning) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{312}
}

func (x *ExpeditionExpireWarning) GetClientId() int32 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

func (x *ExpeditionExpireWarning) GetMinutesRemaining() int32 {
	if x != nil {
		return x.MinutesRemaining
	}
	return 0
}

type DynamicZoneCompassEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DzZoneId      int32                  `protobuf:"varint,1,opt,name=dz_zone_id,json=dzZoneId,proto3" json:"dz_zone_id,omitempty"`
	DzInstanceId  int32                  `protobuf:"varint,2,opt,name=dz_instance_id,json=dzInstanceId,proto3" json:"dz_instance_id,omitempty"`
	DzType        int32                  `protobuf:"varint,3,opt,name=dz_type,json=dzType,proto3" json:"dz_type,omitempty"`
	DzSwitchId    int32                  `protobuf:"varint,4,opt,name=dz_switch_id,json=dzSwitchId,proto3" json:"dz_switch_id,omitempty"`
	Y             float32                `protobuf:"fixed32,5,opt,name=y,proto3" json:"y,omitempty"`
	X             float32                `protobuf:"fixed32,6,opt,name=x,proto3" json:"x,omitempty"`
	Z             float32                `protobuf:"fixed32,7,opt,name=z,proto3" json:"z,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DynamicZoneCompassEntry) Reset() {
	*x = DynamicZoneCompassEntry{}
	mi := &file_EQMessage_proto_msgTypes[313]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DynamicZoneCompassEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicZoneCompassEntry) ProtoMessage() {}

func (x *DynamicZoneCompassEntry) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[313]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicZoneCompassEntry.ProtoReflect.Descriptor instead.
func (*DynamicZoneCompassEntry) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{313}
}

func (x *DynamicZoneCompassEntry) GetDzZoneId() int32 {
	if x != nil {
		return x.DzZoneId
	}
	return 0
}

func (x *DynamicZoneCompassEntry) GetDzInstanceId() int32 {
	if x != nil {
		return x.DzInstanceId
	}
	return 0
}

func (x *DynamicZoneCompassEntry) GetDzType() int32 {
	if x != nil {
		return x.DzType
	}
	return 0
}

func (x *DynamicZoneCompassEntry) GetDzSwitchId() int32 {
	if x != nil {
		return x.DzSwitchId
	}
	return 0
}

func (x *DynamicZoneCompassEntry) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *DynamicZoneCompassEntry) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *DynamicZoneCompassEntry) GetZ() float32 {
	if x != nil {
		return x.Z
	}
	return 0
}

type DynamicZoneCompass struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	ClientId      int32                      `protobuf:"varint,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	Count         int32                      `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Entries       []*DynamicZoneCompassEntry `protobuf:"bytes,3,rep,name=entries,proto3" json:"entries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DynamicZoneCompass) Reset() {
	*x = DynamicZoneCompass{}
	mi := &file_EQMessage_proto_msgTypes[314]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DynamicZoneCompass) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicZoneCompass) ProtoMessage() {}

func (x *DynamicZoneCompass) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[314]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicZoneCompass.ProtoReflect.Descriptor instead.
func (*DynamicZoneCompass) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{314}
}

func (x *DynamicZoneCompass) GetClientId() int32 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

func (x *DynamicZoneCompass) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *DynamicZoneCompass) GetEntries() []*DynamicZoneCompassEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type DynamicZoneChooseZoneEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DzZoneId      int32                  `protobuf:"varint,1,opt,name=dz_zone_id,json=dzZoneId,proto3" json:"dz_zone_id,omitempty"`
	DzInstanceId  int32                  `protobuf:"varint,2,opt,name=dz_instance_id,json=dzInstanceId,proto3" json:"dz_instance_id,omitempty"`
	DzType        int32                  `protobuf:"varint,3,opt,name=dz_type,json=dzType,proto3" json:"dz_type,omitempty"`
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	LeaderName    string                 `protobuf:"bytes,5,opt,name=leader_name,json=leaderName,proto3" json:"leader_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DynamicZoneChooseZoneEntry) Reset() {
	*x = DynamicZoneChooseZoneEntry{}
	mi := &file_EQMessage_proto_msgTypes[315]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DynamicZoneChooseZoneEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicZoneChooseZoneEntry) ProtoMessage() {}

func (x *DynamicZoneChooseZoneEntry) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[315]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicZoneChooseZoneEntry.ProtoReflect.Descriptor instead.
func (*DynamicZoneChooseZoneEntry) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{315}
}

func (x *DynamicZoneChooseZoneEntry) GetDzZoneId() int32 {
	if x != nil {
		return x.DzZoneId
	}
	return 0
}

func (x *DynamicZoneChooseZoneEntry) GetDzInstanceId() int32 {
	if x != nil {
		return x.DzInstanceId
	}
	return 0
}

func (x *DynamicZoneChooseZoneEntry) GetDzType() int32 {
	if x != nil {
		return x.DzType
	}
	return 0
}

func (x *DynamicZoneChooseZoneEntry) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DynamicZoneChooseZoneEntry) GetLeaderName() string {
	if x != nil {
		return x.LeaderName
	}
	return ""
}

type DynamicZoneChooseZone struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	ClientId      int32                         `protobuf:"varint,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	Count         int32                         `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Choices       []*DynamicZoneChooseZoneEntry `protobuf:"bytes,3,rep,name=choices,proto3" json:"choices,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DynamicZoneChooseZone) Reset() {
	*x = DynamicZoneChooseZone{}
	mi := &file_EQMessage_proto_msgTypes[316]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DynamicZoneChooseZone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicZoneChooseZone) ProtoMessage() {}

func (x *DynamicZoneChooseZone) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[316]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicZoneChooseZone.ProtoReflect.Descriptor instead.
func (*DynamicZoneChooseZone) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{316}
}

func (x *DynamicZoneChooseZone) GetClientId() int32 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

func (x *DynamicZoneChooseZone) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *DynamicZoneChooseZone) GetChoices() []*DynamicZoneChooseZoneEntry {
	if x != nil {
		return x.Choices
	}
	return nil
}

type DynamicZoneChooseZoneReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DzZoneId      int32                  `protobuf:"varint,1,opt,name=dz_zone_id,json=dzZoneId,proto3" json:"dz_zone_id,omitempty"`
	DzInstanceId  int32                  `protobuf:"varint,2,opt,name=dz_instance_id,json=dzInstanceId,proto3" json:"dz_instance_id,omitempty"`
	DzType        int32                  `protobuf:"varint,3,opt,name=dz_type,json=dzType,proto3" json:"dz_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DynamicZoneChooseZoneReply) Reset() {
	*x = DynamicZoneChooseZoneReply{}
	mi := &file_EQMessage_proto_msgTypes[317]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DynamicZoneChooseZoneReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DynamicZoneChooseZoneReply) ProtoMessage() {}

func (x *DynamicZoneChooseZoneReply) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[317]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DynamicZoneChooseZoneReply.ProtoReflect.Descriptor instead.
func (*DynamicZoneChooseZoneReply) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{317}
}

func (x *DynamicZoneChooseZoneReply) GetDzZoneId() int32 {
	if x != nil {
		return x.DzZoneId
	}
	return 0
}

func (x *DynamicZoneChooseZoneReply) GetDzInstanceId() int32 {
	if x != nil {
		return x.DzInstanceId
	}
	return 0
}

func (x *DynamicZoneChooseZoneReply) GetDzType() int32 {
	if x != nil {
		return x.DzType
	}
	return 0
}

type LFGuild_SearchPlayer struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Command       int32                  `protobuf:"varint,1,opt,name=command,proto3" json:"command,omitempty"`
	FromLevel     int32                  `protobuf:"varint,2,opt,name=from_level,json=fromLevel,proto3" json:"from_level,omitempty"`
	ToLevel       int32                  `protobuf:"varint,3,opt,name=to_level,json=toLevel,proto3" json:"to_level,omitempty"`
	MinAa         int32                  `protobuf:"varint,4,opt,name=min_aa,json=minAa,proto3" json:"min_aa,omitempty"`
	TimeZone      int32                  `protobuf:"varint,5,opt,name=time_zone,json=timeZone,proto3" json:"time_zone,omitempty"`
	Classes       int32                  `protobuf:"varint,6,opt,name=classes,proto3" json:"classes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LFGuild_SearchPlayer) Reset() {
	*x = LFGuild_SearchPlayer{}
	mi := &file_EQMessage_proto_msgTypes[318]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LFGuild_SearchPlayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LFGuild_SearchPlayer) ProtoMessage() {}

func (x *LFGuild_SearchPlayer) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[318]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LFGuild_SearchPlayer.ProtoReflect.Descriptor instead.
func (*LFGuild_SearchPlayer) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{318}
}

func (x *LFGuild_SearchPlayer) GetCommand() int32 {
	if x != nil {
		return x.Command
	}
	return 0
}

func (x *LFGuild_SearchPlayer) GetFromLevel() int32 {
	if x != nil {
		return x.FromLevel
	}
	return 0
}

func (x *LFGuild_SearchPlayer) GetToLevel() int32 {
	if x != nil {
		return x.ToLevel
	}
	return 0
}

func (x *LFGuild_SearchPlayer) GetMinAa() int32 {
	if x != nil {
		return x.MinAa
	}
	return 0
}

func (x *LFGuild_SearchPlayer) GetTimeZone() int32 {
	if x != nil {
		return x.TimeZone
	}
	return 0
}

func (x *LFGuild_SearchPlayer) GetClasses() int32 {
	if x != nil {
		return x.Classes
	}
	return 0
}

type LFGuild_SearchGuild struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Command       int32                  `protobuf:"varint,1,opt,name=command,proto3" json:"command,omitempty"`
	Level         int32                  `protobuf:"varint,2,opt,name=level,proto3" json:"level,omitempty"`
	AaPoints      int32                  `protobuf:"varint,3,opt,name=aa_points,json=aaPoints,proto3" json:"aa_points,omitempty"`
	TimeZone      int32                  `protobuf:"varint,4,opt,name=time_zone,json=timeZone,proto3" json:"time_zone,omitempty"`
	CharClass     int32                  `protobuf:"varint,5,opt,name=char_class,json=charClass,proto3" json:"char_class,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LFGuild_SearchGuild) Reset() {
	*x = LFGuild_SearchGuild{}
	mi := &file_EQMessage_proto_msgTypes[319]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LFGuild_SearchGuild) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LFGuild_SearchGuild) ProtoMessage() {}

func (x *LFGuild_SearchGuild) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[319]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LFGuild_SearchGuild.ProtoReflect.Descriptor instead.
func (*LFGuild_SearchGuild) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{319}
}

func (x *LFGuild_SearchGuild) GetCommand() int32 {
	if x != nil {
		return x.Command
	}
	return 0
}

func (x *LFGuild_SearchGuild) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *LFGuild_SearchGuild) GetAaPoints() int32 {
	if x != nil {
		return x.AaPoints
	}
	return 0
}

func (x *LFGuild_SearchGuild) GetTimeZone() int32 {
	if x != nil {
		return x.TimeZone
	}
	return 0
}

func (x *LFGuild_SearchGuild) GetCharClass() int32 {
	if x != nil {
		return x.CharClass
	}
	return 0
}

type LFGuild_Playertoggle struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Command       int32                  `protobuf:"varint,1,opt,name=command,proto3" json:"command,omitempty"`
	Comment       string                 `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
	TimeZone      int32                  `protobuf:"varint,3,opt,name=time_zone,json=timeZone,proto3" json:"time_zone,omitempty"`
	Toggle        int32                  `protobuf:"varint,4,opt,name=toggle,proto3" json:"toggle,omitempty"`
	Expires       int32                  `protobuf:"varint,5,opt,name=expires,proto3" json:"expires,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LFGuild_Playertoggle) Reset() {
	*x = LFGuild_Playertoggle{}
	mi := &file_EQMessage_proto_msgTypes[320]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LFGuild_Playertoggle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LFGuild_Playertoggle) ProtoMessage() {}

func (x *LFGuild_Playertoggle) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[320]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LFGuild_Playertoggle.ProtoReflect.Descriptor instead.
func (*LFGuild_Playertoggle) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{320}
}

func (x *LFGuild_Playertoggle) GetCommand() int32 {
	if x != nil {
		return x.Command
	}
	return 0
}

func (x *LFGuild_Playertoggle) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *LFGuild_Playertoggle) GetTimeZone() int32 {
	if x != nil {
		return x.TimeZone
	}
	return 0
}

func (x *LFGuild_Playertoggle) GetToggle() int32 {
	if x != nil {
		return x.Toggle
	}
	return 0
}

func (x *LFGuild_Playertoggle) GetExpires() int32 {
	if x != nil {
		return x.Expires
	}
	return 0
}

type LFGuild_Guildtoggle struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Command       int32                  `protobuf:"varint,1,opt,name=command,proto3" json:"command,omitempty"`
	Comment       string                 `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
	FromLevel     int32                  `protobuf:"varint,3,opt,name=from_level,json=fromLevel,proto3" json:"from_level,omitempty"`
	ToLevel       int32                  `protobuf:"varint,4,opt,name=to_level,json=toLevel,proto3" json:"to_level,omitempty"`
	Classes       int32                  `protobuf:"varint,5,opt,name=classes,proto3" json:"classes,omitempty"`
	AaCount       int32                  `protobuf:"varint,6,opt,name=aa_count,json=aaCount,proto3" json:"aa_count,omitempty"`
	TimeZone      int32                  `protobuf:"varint,7,opt,name=time_zone,json=timeZone,proto3" json:"time_zone,omitempty"`
	Toggle        int32                  `protobuf:"varint,8,opt,name=toggle,proto3" json:"toggle,omitempty"`
	Expires       int32                  `protobuf:"varint,9,opt,name=expires,proto3" json:"expires,omitempty"`
	Name          string                 `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LFGuild_Guildtoggle) Reset() {
	*x = LFGuild_Guildtoggle{}
	mi := &file_EQMessage_proto_msgTypes[321]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LFGuild_Guildtoggle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LFGuild_Guildtoggle) ProtoMessage() {}

func (x *LFGuild_Guildtoggle) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[321]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LFGuild_Guildtoggle.ProtoReflect.Descriptor instead.
func (*LFGuild_Guildtoggle) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{321}
}

func (x *LFGuild_Guildtoggle) GetCommand() int32 {
	if x != nil {
		return x.Command
	}
	return 0
}

func (x *LFGuild_Guildtoggle) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *LFGuild_Guildtoggle) GetFromLevel() int32 {
	if x != nil {
		return x.FromLevel
	}
	return 0
}

func (x *LFGuild_Guildtoggle) GetToLevel() int32 {
	if x != nil {
		return x.ToLevel
	}
	return 0
}

func (x *LFGuild_Guildtoggle) GetClasses() int32 {
	if x != nil {
		return x.Classes
	}
	return 0
}

func (x *LFGuild_Guildtoggle) GetAaCount() int32 {
	if x != nil {
		return x.AaCount
	}
	return 0
}

func (x *LFGuild_Guildtoggle) GetTimeZone() int32 {
	if x != nil {
		return x.TimeZone
	}
	return 0
}

func (x *LFGuild_Guildtoggle) GetToggle() int32 {
	if x != nil {
		return x.Toggle
	}
	return 0
}

func (x *LFGuild_Guildtoggle) GetExpires() int32 {
	if x != nil {
		return x.Expires
	}
	return 0
}

func (x *LFGuild_Guildtoggle) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type SayLinkBodyFrame struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ActionId      string                 `protobuf:"bytes,1,opt,name=action_id,json=actionId,proto3" json:"action_id,omitempty"`
	ItemId        string                 `protobuf:"bytes,2,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	Augment1      string                 `protobuf:"bytes,3,opt,name=augment1,proto3" json:"augment1,omitempty"`
	Augment2      string                 `protobuf:"bytes,4,opt,name=augment2,proto3" json:"augment2,omitempty"`
	Augment3      string                 `protobuf:"bytes,5,opt,name=augment3,proto3" json:"augment3,omitempty"`
	Augment4      string                 `protobuf:"bytes,6,opt,name=augment4,proto3" json:"augment4,omitempty"`
	Augment5      string                 `protobuf:"bytes,7,opt,name=augment5,proto3" json:"augment5,omitempty"`
	IsEvolving    string                 `protobuf:"bytes,8,opt,name=is_evolving,json=isEvolving,proto3" json:"is_evolving,omitempty"`
	EvolveGroup   string                 `protobuf:"bytes,9,opt,name=evolve_group,json=evolveGroup,proto3" json:"evolve_group,omitempty"`
	EvolveLevel   string                 `protobuf:"bytes,10,opt,name=evolve_level,json=evolveLevel,proto3" json:"evolve_level,omitempty"`
	Hash          string                 `protobuf:"bytes,11,opt,name=hash,proto3" json:"hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SayLinkBodyFrame) Reset() {
	*x = SayLinkBodyFrame{}
	mi := &file_EQMessage_proto_msgTypes[322]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SayLinkBodyFrame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SayLinkBodyFrame) ProtoMessage() {}

func (x *SayLinkBodyFrame) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[322]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SayLinkBodyFrame.ProtoReflect.Descriptor instead.
func (*SayLinkBodyFrame) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{322}
}

func (x *SayLinkBodyFrame) GetActionId() string {
	if x != nil {
		return x.ActionId
	}
	return ""
}

func (x *SayLinkBodyFrame) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *SayLinkBodyFrame) GetAugment1() string {
	if x != nil {
		return x.Augment1
	}
	return ""
}

func (x *SayLinkBodyFrame) GetAugment2() string {
	if x != nil {
		return x.Augment2
	}
	return ""
}

func (x *SayLinkBodyFrame) GetAugment3() string {
	if x != nil {
		return x.Augment3
	}
	return ""
}

func (x *SayLinkBodyFrame) GetAugment4() string {
	if x != nil {
		return x.Augment4
	}
	return ""
}

func (x *SayLinkBodyFrame) GetAugment5() string {
	if x != nil {
		return x.Augment5
	}
	return ""
}

func (x *SayLinkBodyFrame) GetIsEvolving() string {
	if x != nil {
		return x.IsEvolving
	}
	return ""
}

func (x *SayLinkBodyFrame) GetEvolveGroup() string {
	if x != nil {
		return x.EvolveGroup
	}
	return ""
}

func (x *SayLinkBodyFrame) GetEvolveLevel() string {
	if x != nil {
		return x.EvolveLevel
	}
	return ""
}

func (x *SayLinkBodyFrame) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type WebLogin struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password      string                 `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WebLogin) Reset() {
	*x = WebLogin{}
	mi := &file_EQMessage_proto_msgTypes[323]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WebLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebLogin) ProtoMessage() {}

func (x *WebLogin) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[323]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebLogin.ProtoReflect.Descriptor instead.
func (*WebLogin) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{323}
}

func (x *WebLogin) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *WebLogin) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type WebLoginServerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sequence      int32                  `protobuf:"varint,1,opt,name=sequence,proto3" json:"sequence,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WebLoginServerRequest) Reset() {
	*x = WebLoginServerRequest{}
	mi := &file_EQMessage_proto_msgTypes[324]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WebLoginServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebLoginServerRequest) ProtoMessage() {}

func (x *WebLoginServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[324]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebLoginServerRequest.ProtoReflect.Descriptor instead.
func (*WebLoginServerRequest) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{324}
}

func (x *WebLoginServerRequest) GetSequence() int32 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

type WebLoginReply struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Key             string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	ErrorStrId      int32                  `protobuf:"varint,2,opt,name=error_str_id,json=errorStrId,proto3" json:"error_str_id,omitempty"`
	FailedAttempts  int32                  `protobuf:"varint,3,opt,name=failed_attempts,json=failedAttempts,proto3" json:"failed_attempts,omitempty"`
	Lsid            int32                  `protobuf:"varint,4,opt,name=lsid,proto3" json:"lsid,omitempty"`
	Success         bool                   `protobuf:"varint,5,opt,name=success,proto3" json:"success,omitempty"`
	ShowPlayerCount bool                   `protobuf:"varint,6,opt,name=show_player_count,json=showPlayerCount,proto3" json:"show_player_count,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *WebLoginReply) Reset() {
	*x = WebLoginReply{}
	mi := &file_EQMessage_proto_msgTypes[325]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WebLoginReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebLoginReply) ProtoMessage() {}

func (x *WebLoginReply) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[325]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebLoginReply.ProtoReflect.Descriptor instead.
func (*WebLoginReply) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{325}
}

func (x *WebLoginReply) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *WebLoginReply) GetErrorStrId() int32 {
	if x != nil {
		return x.ErrorStrId
	}
	return 0
}

func (x *WebLoginReply) GetFailedAttempts() int32 {
	if x != nil {
		return x.FailedAttempts
	}
	return 0
}

func (x *WebLoginReply) GetLsid() int32 {
	if x != nil {
		return x.Lsid
	}
	return 0
}

func (x *WebLoginReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *WebLoginReply) GetShowPlayerCount() bool {
	if x != nil {
		return x.ShowPlayerCount
	}
	return false
}

type WebLoginWorldServer struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Buffer        string                 `protobuf:"bytes,1,opt,name=buffer,proto3" json:"buffer,omitempty"`
	Ip            string                 `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	LongName      string                 `protobuf:"bytes,3,opt,name=long_name,json=longName,proto3" json:"long_name,omitempty"`
	CountryCode   string                 `protobuf:"bytes,4,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
	LanguageCode  string                 `protobuf:"bytes,5,opt,name=language_code,json=languageCode,proto3" json:"language_code,omitempty"`
	ServerType    int32                  `protobuf:"varint,6,opt,name=server_type,json=serverType,proto3" json:"server_type,omitempty"`
	ServerId      int32                  `protobuf:"varint,7,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	Status        int32                  `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`
	PlayersOnline int32                  `protobuf:"varint,9,opt,name=players_online,json=playersOnline,proto3" json:"players_online,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WebLoginWorldServer) Reset() {
	*x = WebLoginWorldServer{}
	mi := &file_EQMessage_proto_msgTypes[326]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WebLoginWorldServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebLoginWorldServer) ProtoMessage() {}

func (x *WebLoginWorldServer) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[326]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebLoginWorldServer.ProtoReflect.Descriptor instead.
func (*WebLoginWorldServer) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{326}
}

func (x *WebLoginWorldServer) GetBuffer() string {
	if x != nil {
		return x.Buffer
	}
	return ""
}

func (x *WebLoginWorldServer) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *WebLoginWorldServer) GetLongName() string {
	if x != nil {
		return x.LongName
	}
	return ""
}

func (x *WebLoginWorldServer) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *WebLoginWorldServer) GetLanguageCode() string {
	if x != nil {
		return x.LanguageCode
	}
	return ""
}

func (x *WebLoginWorldServer) GetServerType() int32 {
	if x != nil {
		return x.ServerType
	}
	return 0
}

func (x *WebLoginWorldServer) GetServerId() int32 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

func (x *WebLoginWorldServer) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *WebLoginWorldServer) GetPlayersOnline() int32 {
	if x != nil {
		return x.PlayersOnline
	}
	return 0
}

type WebLoginServerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerCount   int32                  `protobuf:"varint,1,opt,name=server_count,json=serverCount,proto3" json:"server_count,omitempty"`
	Servers       []*WebLoginWorldServer `protobuf:"bytes,2,rep,name=servers,proto3" json:"servers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WebLoginServerResponse) Reset() {
	*x = WebLoginServerResponse{}
	mi := &file_EQMessage_proto_msgTypes[327]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WebLoginServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebLoginServerResponse) ProtoMessage() {}

func (x *WebLoginServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[327]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebLoginServerResponse.ProtoReflect.Descriptor instead.
func (*WebLoginServerResponse) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{327}
}

func (x *WebLoginServerResponse) GetServerCount() int32 {
	if x != nil {
		return x.ServerCount
	}
	return 0
}

func (x *WebLoginServerResponse) GetServers() []*WebLoginWorldServer {
	if x != nil {
		return x.Servers
	}
	return nil
}

type WebPlayEverquestRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerId      int32                  `protobuf:"varint,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WebPlayEverquestRequest) Reset() {
	*x = WebPlayEverquestRequest{}
	mi := &file_EQMessage_proto_msgTypes[328]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WebPlayEverquestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebPlayEverquestRequest) ProtoMessage() {}

func (x *WebPlayEverquestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[328]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebPlayEverquestRequest.ProtoReflect.Descriptor instead.
func (*WebPlayEverquestRequest) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{328}
}

func (x *WebPlayEverquestRequest) GetServerId() int32 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

type WebPlayEverquestResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerId      int32                  `protobuf:"varint,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	ErrorStrId    int32                  `protobuf:"varint,3,opt,name=error_str_id,json=errorStrId,proto3" json:"error_str_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WebPlayEverquestResponse) Reset() {
	*x = WebPlayEverquestResponse{}
	mi := &file_EQMessage_proto_msgTypes[329]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WebPlayEverquestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebPlayEverquestResponse) ProtoMessage() {}

func (x *WebPlayEverquestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[329]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebPlayEverquestResponse.ProtoReflect.Descriptor instead.
func (*WebPlayEverquestResponse) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{329}
}

func (x *WebPlayEverquestResponse) GetServerId() int32 {
	if x != nil {
		return x.ServerId
	}
	return 0
}

func (x *WebPlayEverquestResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *WebPlayEverquestResponse) GetErrorStrId() int32 {
	if x != nil {
		return x.ErrorStrId
	}
	return 0
}

type WebSession struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RemoteAddr    string                 `protobuf:"bytes,1,opt,name=remote_addr,json=remoteAddr,proto3" json:"remote_addr,omitempty"`
	RemoteIp      int32                  `protobuf:"varint,2,opt,name=remote_ip,json=remoteIp,proto3" json:"remote_ip,omitempty"`
	RemotePort    int32                  `protobuf:"varint,3,opt,name=remote_port,json=remotePort,proto3" json:"remote_port,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WebSession) Reset() {
	*x = WebSession{}
	mi := &file_EQMessage_proto_msgTypes[330]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WebSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebSession) ProtoMessage() {}

func (x *WebSession) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[330]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebSession.ProtoReflect.Descriptor instead.
func (*WebSession) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{330}
}

func (x *WebSession) GetRemoteAddr() string {
	if x != nil {
		return x.RemoteAddr
	}
	return ""
}

func (x *WebSession) GetRemoteIp() int32 {
	if x != nil {
		return x.RemoteIp
	}
	return 0
}

func (x *WebSession) GetRemotePort() int32 {
	if x != nil {
		return x.RemotePort
	}
	return 0
}

type Zero struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Zero) Reset() {
	*x = Zero{}
	mi := &file_EQMessage_proto_msgTypes[331]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Zero) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Zero) ProtoMessage() {}

func (x *Zero) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[331]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Zero.ProtoReflect.Descriptor instead.
func (*Zero) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{331}
}

type Int struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         int32                  `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Int) Reset() {
	*x = Int{}
	mi := &file_EQMessage_proto_msgTypes[332]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Int) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Int) ProtoMessage() {}

func (x *Int) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[332]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Int.ProtoReflect.Descriptor instead.
func (*Int) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{332}
}

func (x *Int) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type Bool struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         bool                   `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Bool) Reset() {
	*x = Bool{}
	mi := &file_EQMessage_proto_msgTypes[333]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Bool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bool) ProtoMessage() {}

func (x *Bool) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[333]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bool.ProtoReflect.Descriptor instead.
func (*Bool) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{333}
}

func (x *Bool) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

type String struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         string                 `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *String) Reset() {
	*x = String{}
	mi := &file_EQMessage_proto_msgTypes[334]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *String) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*String) ProtoMessage() {}

func (x *String) ProtoReflect() protoreflect.Message {
	mi := &file_EQMessage_proto_msgTypes[334]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use String.ProtoReflect.Descriptor instead.
func (*String) Descriptor() ([]byte, []int) {
	return file_EQMessage_proto_rawDescGZIP(), []int{334}
}

func (x *String) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

var file_EQMessage_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.EnumValueOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         4500,
		Name:          "eq.messageType",
		Tag:           "bytes,4500,opt,name=messageType",
		Filename:      "EQMessage.proto",
	},
	{
		ExtendedType:  (*descriptorpb.EnumValueOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         4501,
		Name:          "eq.repeatedField",
		Tag:           "bytes,4501,opt,name=repeatedField",
		Filename:      "EQMessage.proto",
	},
}

// Extension fields to descriptorpb.EnumValueOptions.
var (
	// optional string messageType = 4500;
	E_MessageType = &file_EQMessage_proto_extTypes[0]
	// optional string repeatedField = 4501;
	E_RepeatedField = &file_EQMessage_proto_extTypes[1]
)

var File_EQMessage_proto protoreflect.FileDescriptor

const file_EQMessage_proto_rawDesc = "" +
	"\n" +
	"\x0fEQMessage.proto\x12\x02eq\x1a google/protobuf/descriptor.proto\"F\n" +
	"\fLoginMessage\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x02 \x01(\tR\bpassword\"\xc3\x01\n" +
	"\n" +
	"LoginReply\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12 \n" +
	"\ferror_str_id\x18\x02 \x01(\x05R\n" +
	"errorStrId\x12'\n" +
	"\x0ffailed_attempts\x18\x03 \x01(\x05R\x0efailedAttempts\x12\x12\n" +
	"\x04lsid\x18\x04 \x01(\x05R\x04lsid\x12\x18\n" +
	"\asuccess\x18\x05 \x01(\bR\asuccess\x12*\n" +
	"\x11show_player_count\x18\x06 \x01(\bR\x0fshowPlayerCount\"*\n" +
	"\fLoginRequest\x12\x1a\n" +
	"\bsequence\x18\x01 \x01(\x05R\bsequence\"\xff\x01\n" +
	"\vWorldServer\x12\x0e\n" +
	"\x02ip\x18\x01 \x01(\tR\x02ip\x12\x1f\n" +
	"\vserver_type\x18\x02 \x01(\x05R\n" +
	"serverType\x12\x1b\n" +
	"\tserver_id\x18\x03 \x01(\x05R\bserverId\x12\x1b\n" +
	"\tlong_name\x18\x04 \x01(\tR\blongName\x12!\n" +
	"\fcountry_code\x18\x05 \x01(\tR\vcountryCode\x12#\n" +
	"\rlanguage_code\x18\x06 \x01(\tR\flanguageCode\x12\x16\n" +
	"\x06status\x18\a \x01(\x05R\x06status\x12%\n" +
	"\x0eplayers_online\x18\b \x01(\x05R\rplayersOnline\"c\n" +
	"\x13LoginServerResponse\x12!\n" +
	"\fserver_count\x18\x01 \x01(\x05R\vserverCount\x12)\n" +
	"\aservers\x18\x02 \x03(\v2\x0f.eq.WorldServerR\aservers\",\n" +
	"\rPlayEverquest\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\x05R\bserverId\"p\n" +
	"\x15PlayEverquestResponse\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\x05R\bserverId\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12 \n" +
	"\ferror_str_id\x18\x03 \x01(\x05R\n" +
	"errorStrId\"-\n" +
	"\x15WebInitiateConnection\x12\x14\n" +
	"\x05login\x18\x01 \x01(\bR\x05login\"S\n" +
	"\tLoginInfo\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1a\n" +
	"\bpassword\x18\x02 \x01(\tR\bpassword\x12\x16\n" +
	"\x06zoning\x18\x03 \x01(\x05R\x06zoning\"]\n" +
	"\x04Tint\x12\x12\n" +
	"\x04blue\x18\x01 \x01(\x05R\x04blue\x12\x14\n" +
	"\x05green\x18\x02 \x01(\x05R\x05green\x12\x10\n" +
	"\x03red\x18\x03 \x01(\x05R\x03red\x12\x19\n" +
	"\buse_tint\x18\x04 \x01(\x05R\auseTint\"M\n" +
	"\x0fCharSelectEquip\x12\x1a\n" +
	"\bmaterial\x18\x01 \x01(\x05R\bmaterial\x12\x1e\n" +
	"\x05color\x18\x02 \x01(\v2\b.eq.TintR\x05color\"\xb6\x03\n" +
	"\x14CharacterSelectEntry\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1d\n" +
	"\n" +
	"char_class\x18\x02 \x01(\x05R\tcharClass\x12\x12\n" +
	"\x04race\x18\x03 \x01(\x05R\x04race\x12\x14\n" +
	"\x05level\x18\x04 \x01(\x05R\x05level\x12\x12\n" +
	"\x04zone\x18\x05 \x01(\x05R\x04zone\x12\x1a\n" +
	"\binstance\x18\x06 \x01(\x05R\binstance\x12\x16\n" +
	"\x06gender\x18\a \x01(\x05R\x06gender\x12\x12\n" +
	"\x04face\x18\b \x01(\x05R\x04face\x12)\n" +
	"\x05equip\x18\t \x03(\v2\x13.eq.CharSelectEquipR\x05equip\x12\x14\n" +
	"\x05deity\x18\n" +
	" \x01(\x05R\x05deity\x12&\n" +
	"\x0fprimary_id_file\x18\v \x01(\x05R\rprimaryIdFile\x12*\n" +
	"\x11secondary_id_file\x18\f \x01(\x05R\x0fsecondaryIdFile\x12\x17\n" +
	"\ago_home\x18\r \x01(\x05R\x06goHome\x12\x18\n" +
	"\aenabled\x18\x0e \x01(\x05R\aenabled\x12\x1d\n" +
	"\n" +
	"last_login\x18\x0f \x01(\x05R\tlastLogin\"t\n" +
	"\x0fCharacterSelect\x12'\n" +
	"\x0fcharacter_count\x18\x01 \x01(\x05R\x0echaracterCount\x128\n" +
	"\n" +
	"characters\x18\x02 \x03(\v2\x18.eq.CharacterSelectEntryR\n" +
	"characters\"]\n" +
	"\n" +
	"EnterWorld\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1a\n" +
	"\btutorial\x18\x02 \x01(\x05R\btutorial\x12\x1f\n" +
	"\vreturn_home\x18\x03 \x01(\x05R\n" +
	"returnHome\"T\n" +
	"\rInventorySlot\x12\x12\n" +
	"\x04type\x18\x01 \x01(\x05R\x04type\x12\x12\n" +
	"\x04slot\x18\x02 \x01(\x05R\x04slot\x12\x1b\n" +
	"\tsub_index\x18\x03 \x01(\x05R\bsubIndex\"H\n" +
	"\x15TypelessInventorySlot\x12\x12\n" +
	"\x04slot\x18\x01 \x01(\x05R\x04slot\x12\x1b\n" +
	"\tsub_index\x18\x02 \x01(\x05R\bsubIndex\"k\n" +
	"\fNameApproval\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04race\x18\x02 \x01(\x05R\x04race\x12\x1d\n" +
	"\n" +
	"char_class\x18\x03 \x01(\x05R\tcharClass\x12\x14\n" +
	"\x05deity\x18\x04 \x01(\x05R\x05deity\"'\n" +
	"\bEntityId\x12\x1b\n" +
	"\tentity_id\x18\x01 \x01(\x05R\bentityId\"N\n" +
	"\x04Duel\x12%\n" +
	"\x0eduel_initiator\x18\x01 \x01(\x05R\rduelInitiator\x12\x1f\n" +
	"\vduel_target\x18\x02 \x01(\x05R\n" +
	"duelTarget\"H\n" +
	"\fDuelResponse\x12\x1b\n" +
	"\ttarget_id\x18\x01 \x01(\x05R\btargetId\x12\x1b\n" +
	"\tentity_id\x18\x02 \x01(\x05R\bentityId\"\x8a\x03\n" +
	"\rAdventureInfo\x12\x19\n" +
	"\bquest_id\x18\x01 \x01(\x05R\aquestId\x12\x15\n" +
	"\x06npc_id\x18\x02 \x01(\x05R\x05npcId\x12\x15\n" +
	"\x06in_use\x18\x03 \x01(\bR\x05inUse\x12\x16\n" +
	"\x06status\x18\x04 \x01(\x05R\x06status\x12!\n" +
	"\fshow_compass\x18\x05 \x01(\bR\vshowCompass\x12\x1a\n" +
	"\bobjetive\x18\x06 \x01(\x05R\bobjetive\x12%\n" +
	"\x0eobjetive_value\x18\a \x01(\x05R\robjetiveValue\x12\x12\n" +
	"\x04text\x18\b \x01(\tR\x04text\x12\x12\n" +
	"\x04type\x18\t \x01(\x05R\x04type\x12\x18\n" +
	"\aminutes\x18\n" +
	" \x01(\x05R\aminutes\x12\x16\n" +
	"\x06points\x18\v \x01(\x05R\x06points\x12\f\n" +
	"\x01x\x18\f \x01(\x02R\x01x\x12\f\n" +
	"\x01y\x18\r \x01(\x02R\x01y\x12\x16\n" +
	"\x06zoneid\x18\x0e \x01(\x05R\x06zoneid\x12$\n" +
	"\rzonedungeonid\x18\x0f \x01(\x05R\rzonedungeonid\"\xda\x01\n" +
	"\x0eTextureProfile\x12\x12\n" +
	"\x04head\x18\x01 \x01(\x05R\x04head\x12\x14\n" +
	"\x05chest\x18\x02 \x01(\x05R\x05chest\x12\x12\n" +
	"\x04arms\x18\x03 \x01(\x05R\x04arms\x12\x14\n" +
	"\x05wrist\x18\x04 \x01(\x05R\x05wrist\x12\x14\n" +
	"\x05hands\x18\x05 \x01(\x05R\x05hands\x12\x12\n" +
	"\x04legs\x18\x06 \x01(\x05R\x04legs\x12\x12\n" +
	"\x04feet\x18\a \x01(\x05R\x04feet\x12\x18\n" +
	"\aprimary\x18\b \x01(\x05R\aprimary\x12\x1c\n" +
	"\tsecondary\x18\t \x01(\x05R\tsecondary\"\xd7\x01\n" +
	"\vTintProfile\x12\x12\n" +
	"\x04head\x18\x01 \x01(\x05R\x04head\x12\x14\n" +
	"\x05chest\x18\x02 \x01(\x05R\x05chest\x12\x12\n" +
	"\x04arms\x18\x03 \x01(\x05R\x04arms\x12\x14\n" +
	"\x05wrist\x18\x04 \x01(\x05R\x05wrist\x12\x14\n" +
	"\x05hands\x18\x05 \x01(\x05R\x05hands\x12\x12\n" +
	"\x04legs\x18\x06 \x01(\x05R\x04legs\x12\x12\n" +
	"\x04feet\x18\a \x01(\x05R\x04feet\x12\x18\n" +
	"\aprimary\x18\b \x01(\x05R\aprimary\x12\x1c\n" +
	"\tsecondary\x18\t \x01(\x05R\tsecondary\"L\n" +
	"\x06Spawns\x12\x1f\n" +
	"\vspawn_count\x18\x01 \x01(\x05R\n" +
	"spawnCount\x12!\n" +
	"\x06spawns\x18\x02 \x01(\v2\t.eq.SpawnR\x06spawns\"\x98\v\n" +
	"\x05Spawn\x12\x0e\n" +
	"\x02gm\x18\x01 \x01(\x05R\x02gm\x12\x16\n" +
	"\x06aaitle\x18\x02 \x01(\x05R\x06aaitle\x12\x12\n" +
	"\x04anon\x18\x03 \x01(\x05R\x04anon\x12\x12\n" +
	"\x04face\x18\x04 \x01(\x05R\x04face\x12\x12\n" +
	"\x04name\x18\x05 \x01(\tR\x04name\x12\x14\n" +
	"\x05deity\x18\x06 \x01(\x05R\x05deity\x12\x12\n" +
	"\x04size\x18\a \x01(\x02R\x04size\x12\x10\n" +
	"\x03npc\x18\b \x01(\x05R\x03npc\x12\x14\n" +
	"\x05invis\x18\t \x01(\x05R\x05invis\x12\x1c\n" +
	"\thaircolor\x18\n" +
	" \x01(\x05R\thaircolor\x12\x15\n" +
	"\x06cur_hp\x18\v \x01(\x05R\x05curHp\x12\x15\n" +
	"\x06max_hp\x18\f \x01(\x05R\x05maxHp\x12\x1a\n" +
	"\bfindable\x18\r \x01(\x05R\bfindable\x12#\n" +
	"\rdelta_heading\x18\x0e \x01(\x05R\fdeltaHeading\x12\f\n" +
	"\x01x\x18\x0f \x01(\x05R\x01x\x12\f\n" +
	"\x01y\x18\x10 \x01(\x05R\x01y\x12\x1c\n" +
	"\tanimation\x18\x11 \x01(\x05R\tanimation\x12\f\n" +
	"\x01z\x18\x12 \x01(\x05R\x01z\x12\x17\n" +
	"\adelta_y\x18\x13 \x01(\x05R\x06deltaY\x12\x17\n" +
	"\adelta_x\x18\x14 \x01(\x05R\x06deltaX\x12\x18\n" +
	"\aheading\x18\x15 \x01(\x05R\aheading\x12\x17\n" +
	"\adelta_z\x18\x16 \x01(\x05R\x06deltaZ\x12\x1c\n" +
	"\teyecolor1\x18\x17 \x01(\x05R\teyecolor1\x12\x1a\n" +
	"\bshowhelm\x18\x18 \x01(\x05R\bshowhelm\x12\x15\n" +
	"\x06is_npc\x18\x19 \x01(\x05R\x05isNpc\x12\x1c\n" +
	"\thairstyle\x18\x1a \x01(\x05R\thairstyle\x12\x1e\n" +
	"\n" +
	"beardcolor\x18\x1b \x01(\x05R\n" +
	"beardcolor\x12\x14\n" +
	"\x05level\x18\x1c \x01(\x05R\x05level\x12!\n" +
	"\fplayer_state\x18\x1d \x01(\x05R\vplayerState\x12\x14\n" +
	"\x05beard\x18\x1e \x01(\x05R\x05beard\x12\x16\n" +
	"\x06suffix\x18\x1f \x01(\tR\x06suffix\x12 \n" +
	"\fpet_owner_id\x18  \x01(\x05R\n" +
	"petOwnerId\x12\x1c\n" +
	"\tguildrank\x18! \x01(\x05R\tguildrank\x120\n" +
	"\tequipment\x18\" \x01(\v2\x12.eq.TextureProfileR\tequipment\x12\x1a\n" +
	"\brunspeed\x18# \x01(\x02R\brunspeed\x12\x10\n" +
	"\x03afk\x18$ \x01(\x05R\x03afk\x12\x19\n" +
	"\bguild_id\x18% \x01(\x05R\aguildId\x12\x14\n" +
	"\x05title\x18& \x01(\tR\x05title\x12\x12\n" +
	"\x04helm\x18' \x01(\x05R\x04helm\x12\x12\n" +
	"\x04race\x18( \x01(\x05R\x04race\x12\x1b\n" +
	"\tlast_name\x18) \x01(\tR\blastName\x12\x1c\n" +
	"\twalkspeed\x18* \x01(\x02R\twalkspeed\x12\x15\n" +
	"\x06is_pet\x18+ \x01(\x05R\x05isPet\x12\x14\n" +
	"\x05light\x18, \x01(\x05R\x05light\x12\x1d\n" +
	"\n" +
	"char_class\x18- \x01(\x05R\tcharClass\x12\x1c\n" +
	"\teyecolor2\x18. \x01(\x05R\teyecolor2\x12\x18\n" +
	"\aflymode\x18/ \x01(\x05R\aflymode\x12\x16\n" +
	"\x06gender\x180 \x01(\x05R\x06gender\x12\x1a\n" +
	"\bbodytype\x181 \x01(\x05R\bbodytype\x12\x1f\n" +
	"\vequip_chest\x182 \x01(\x05R\n" +
	"equipChest\x12\x1f\n" +
	"\vmount_color\x183 \x01(\x05R\n" +
	"mountColor\x12\x19\n" +
	"\bspawn_id\x184 \x01(\x05R\aspawnId\x12'\n" +
	"\x0fbounding_radius\x185 \x01(\x02R\x0eboundingRadius\x12%\n" +
	"\x0eequipment_tint\x186 \x01(\x05R\requipmentTint\x12\x10\n" +
	"\x03lfg\x187 \x01(\x05R\x03lfg\"+\n" +
	"\bNewSpawn\x12\x1f\n" +
	"\x05spawn\x18\x01 \x01(\v2\t.eq.SpawnR\x05spawn\".\n" +
	"\x0fClientZoneEntry\x12\x1b\n" +
	"\tchar_name\x18\x01 \x01(\tR\bcharName\"7\n" +
	"\x0fServerZoneEntry\x12$\n" +
	"\x06player\x18\x01 \x01(\v2\f.eq.NewSpawnR\x06player\"\xb8\x06\n" +
	"\aNewZone\x12\x1b\n" +
	"\tchar_name\x18\x01 \x01(\tR\bcharName\x12&\n" +
	"\x0fzone_short_name\x18\x02 \x01(\tR\rzoneShortName\x12$\n" +
	"\x0ezone_long_name\x18\x03 \x01(\tR\fzoneLongName\x12\x14\n" +
	"\x05ztype\x18\x04 \x01(\x05R\x05ztype\x12\x17\n" +
	"\afog_red\x18\x05 \x03(\x05R\x06fogRed\x12\x1b\n" +
	"\tfog_green\x18\x06 \x03(\x05R\bfogGreen\x12\x19\n" +
	"\bfog_blue\x18\a \x03(\x05R\afogBlue\x12\x1f\n" +
	"\vfog_minclip\x18\b \x03(\x02R\n" +
	"fogMinclip\x12\x1f\n" +
	"\vfog_maxclip\x18\t \x03(\x02R\n" +
	"fogMaxclip\x12\x18\n" +
	"\agravity\x18\n" +
	" \x01(\x02R\agravity\x12\x1b\n" +
	"\ttime_type\x18\v \x01(\x05R\btimeType\x12\x1f\n" +
	"\vrain_chance\x18\f \x03(\x05R\n" +
	"rainChance\x12#\n" +
	"\rrain_duration\x18\r \x03(\x05R\frainDuration\x12\x1f\n" +
	"\vsnow_chance\x18\x0e \x03(\x05R\n" +
	"snowChance\x12#\n" +
	"\rsnow_duration\x18\x0f \x03(\x05R\fsnowDuration\x12\x10\n" +
	"\x03sky\x18\x10 \x01(\x05R\x03sky\x12.\n" +
	"\x13zone_exp_multiplier\x18\x11 \x01(\x02R\x11zoneExpMultiplier\x12\x15\n" +
	"\x06safe_y\x18\x12 \x01(\x02R\x05safeY\x12\x15\n" +
	"\x06safe_x\x18\x13 \x01(\x02R\x05safeX\x12\x15\n" +
	"\x06safe_z\x18\x14 \x01(\x02R\x05safeZ\x12\x13\n" +
	"\x05max_z\x18\x15 \x01(\x02R\x04maxZ\x12\x1e\n" +
	"\n" +
	"underworld\x18\x16 \x01(\x02R\n" +
	"underworld\x12\x18\n" +
	"\aminclip\x18\x17 \x01(\x02R\aminclip\x12\x18\n" +
	"\amaxclip\x18\x18 \x01(\x02R\amaxclip\x12(\n" +
	"\x10zone_short_name2\x18\x19 \x01(\tR\x0ezoneShortName2\x12\x17\n" +
	"\azone_id\x18\x1a \x01(\x05R\x06zoneId\x12#\n" +
	"\rzone_instance\x18\x1b \x01(\x05R\fzoneInstance\"x\n" +
	"\rMemorizeSpell\x12\x12\n" +
	"\x04slot\x18\x01 \x01(\x05R\x04slot\x12\x19\n" +
	"\bspell_id\x18\x02 \x01(\x05R\aspellId\x12\x1a\n" +
	"\bscribing\x18\x03 \x01(\x05R\bscribing\x12\x1c\n" +
	"\treduction\x18\x04 \x01(\x05R\treduction\"S\n" +
	"\x05Charm\x12\x19\n" +
	"\bowner_id\x18\x01 \x01(\x05R\aownerId\x12\x15\n" +
	"\x06pet_id\x18\x02 \x01(\x05R\x05petId\x12\x18\n" +
	"\acommand\x18\x03 \x01(\x05R\acommand\"a\n" +
	"\rInterruptCast\x12\x18\n" +
	"\aspawnid\x18\x01 \x01(\x05R\aspawnid\x12\x1c\n" +
	"\tmessageid\x18\x02 \x01(\x05R\tmessageid\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"F\n" +
	"\vDeleteSpell\x12\x1d\n" +
	"\n" +
	"spell_slot\x18\x01 \x01(\x05R\tspellSlot\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\x05R\asuccess\"\x98\x01\n" +
	"\n" +
	"ManaChange\x12\x19\n" +
	"\bnew_mana\x18\x01 \x01(\x05R\anewMana\x12\x18\n" +
	"\astamina\x18\x02 \x01(\x05R\astamina\x12\x19\n" +
	"\bspell_id\x18\x03 \x01(\x05R\aspellId\x12 \n" +
	"\vkeepcasting\x18\x04 \x01(\x05R\vkeepcasting\x12\x18\n" +
	"\apadding\x18\x05 \x03(\x05R\apadding\"A\n" +
	"\tSwapSpell\x12\x1b\n" +
	"\tfrom_slot\x18\x01 \x01(\x05R\bfromSlot\x12\x17\n" +
	"\ato_slot\x18\x02 \x01(\x05R\x06toSlot\"`\n" +
	"\tBeginCast\x12\x1b\n" +
	"\tcaster_id\x18\x01 \x01(\x05R\bcasterId\x12\x19\n" +
	"\bspell_id\x18\x02 \x01(\x05R\aspellId\x12\x1b\n" +
	"\tcast_time\x18\x03 \x01(\x05R\bcastTime\"}\n" +
	"\tCastSpell\x12\x12\n" +
	"\x04slot\x18\x01 \x01(\x05R\x04slot\x12\x19\n" +
	"\bspell_id\x18\x02 \x01(\x05R\aspellId\x12$\n" +
	"\rinventoryslot\x18\x03 \x01(\x05R\rinventoryslot\x12\x1b\n" +
	"\ttarget_id\x18\x04 \x01(\x05R\btargetId\"^\n" +
	"\x0fSpawnAppearance\x12\x19\n" +
	"\bspawn_id\x18\x01 \x01(\x05R\aspawnId\x12\x12\n" +
	"\x04type\x18\x02 \x01(\x05R\x04type\x12\x1c\n" +
	"\tparameter\x18\x03 \x01(\x05R\tparameter\"\xd6\x01\n" +
	"\tSpellBuff\x12\x1f\n" +
	"\veffect_type\x18\x01 \x01(\x05R\n" +
	"effectType\x12\x14\n" +
	"\x05level\x18\x02 \x01(\x05R\x05level\x12#\n" +
	"\rbard_modifier\x18\x03 \x01(\x05R\fbardModifier\x12\x18\n" +
	"\aspellid\x18\x04 \x01(\x05R\aspellid\x12\x1a\n" +
	"\bduration\x18\x05 \x01(\x05R\bduration\x12\x1a\n" +
	"\bcounters\x18\x06 \x01(\x05R\bcounters\x12\x1b\n" +
	"\tplayer_id\x18\a \x01(\x05R\bplayerId\"\x84\x01\n" +
	"\x0fSpellBuffPacket\x12\x1a\n" +
	"\bentityid\x18\x01 \x01(\x05R\bentityid\x12!\n" +
	"\x04buff\x18\x02 \x01(\v2\r.eq.SpellBuffR\x04buff\x12\x16\n" +
	"\x06slotid\x18\x03 \x01(\x05R\x06slotid\x12\x1a\n" +
	"\bbufffade\x18\x04 \x01(\x05R\bbufffade\"U\n" +
	"\x0eItemNamePacket\x12\x17\n" +
	"\aitem_id\x18\x01 \x01(\x05R\x06itemId\x12\x16\n" +
	"\x06unkown\x18\x02 \x01(\x05R\x06unkown\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\"*\n" +
	"\x0eItemProperties\x12\x18\n" +
	"\acharges\x18\x01 \x01(\x05R\acharges\"U\n" +
	"\tGMTrainee\x12\x14\n" +
	"\x05npcid\x18\x01 \x01(\x05R\x05npcid\x12\x1a\n" +
	"\bplayerid\x18\x02 \x01(\x05R\bplayerid\x12\x16\n" +
	"\x06skills\x18\x03 \x03(\x05R\x06skills\">\n" +
	"\n" +
	"GMTrainEnd\x12\x14\n" +
	"\x05npcid\x18\x01 \x01(\x05R\x05npcid\x12\x1a\n" +
	"\bplayerid\x18\x02 \x01(\x05R\bplayerid\"^\n" +
	"\rGMSkillChange\x12\x14\n" +
	"\x05npcid\x18\x01 \x01(\x05R\x05npcid\x12\x1c\n" +
	"\tskillbank\x18\x02 \x01(\x05R\tskillbank\x12\x19\n" +
	"\bskill_id\x18\x03 \x01(\x05R\askillId\"\x89\x01\n" +
	"\x0fConsentResponse\x12\x1c\n" +
	"\tgrantname\x18\x01 \x01(\tR\tgrantname\x12\x1c\n" +
	"\townername\x18\x02 \x01(\tR\townername\x12\x1e\n" +
	"\n" +
	"permission\x18\x03 \x01(\x05R\n" +
	"permission\x12\x1a\n" +
	"\bzonename\x18\x04 \x01(\tR\bzonename\"P\n" +
	"\x0eNameGeneration\x12\x12\n" +
	"\x04race\x18\x01 \x01(\x05R\x04race\x12\x16\n" +
	"\x06gender\x18\x02 \x01(\x05R\x06gender\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\"M\n" +
	"\vNameApprove\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04race\x18\x02 \x01(\x05R\x04race\x12\x16\n" +
	"\x06gender\x18\x03 \x01(\x05R\x06gender\"\xec\x03\n" +
	"\n" +
	"CharCreate\x12\x1d\n" +
	"\n" +
	"char_class\x18\x01 \x01(\x05R\tcharClass\x12\x1c\n" +
	"\thaircolor\x18\x02 \x01(\x05R\thaircolor\x12\x1e\n" +
	"\n" +
	"beardcolor\x18\x03 \x01(\x05R\n" +
	"beardcolor\x12\x14\n" +
	"\x05beard\x18\x04 \x01(\x05R\x05beard\x12\x16\n" +
	"\x06gender\x18\x05 \x01(\x05R\x06gender\x12\x12\n" +
	"\x04race\x18\x06 \x01(\x05R\x04race\x12\x1d\n" +
	"\n" +
	"start_zone\x18\a \x01(\x05R\tstartZone\x12\x1c\n" +
	"\thairstyle\x18\b \x01(\x05R\thairstyle\x12\x14\n" +
	"\x05deity\x18\t \x01(\x05R\x05deity\x12\x10\n" +
	"\x03str\x18\n" +
	" \x01(\x05R\x03str\x12\x10\n" +
	"\x03sta\x18\v \x01(\x05R\x03sta\x12\x10\n" +
	"\x03agi\x18\f \x01(\x05R\x03agi\x12\x10\n" +
	"\x03dex\x18\r \x01(\x05R\x03dex\x12\x10\n" +
	"\x03wis\x18\x0e \x01(\x05R\x03wis\x12\x14\n" +
	"\x05intel\x18\x0f \x01(\x05R\x05intel\x12\x10\n" +
	"\x03cha\x18\x10 \x01(\x05R\x03cha\x12\x12\n" +
	"\x04face\x18\x11 \x01(\x05R\x04face\x12\x1c\n" +
	"\teyecolor1\x18\x12 \x01(\x05R\teyecolor1\x12\x1c\n" +
	"\teyecolor2\x18\x13 \x01(\x05R\teyecolor2\x12\x1a\n" +
	"\btutorial\x18\x14 \x01(\x05R\btutorial\"0\n" +
	"\bAA_Array\x12\x0e\n" +
	"\x02aa\x18\x01 \x01(\x05R\x02aa\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value\"%\n" +
	"\vDisciplines\x12\x16\n" +
	"\x06values\x18\x01 \x03(\x05R\x06values\"7\n" +
	"\aTribute\x12\x18\n" +
	"\atribute\x18\x01 \x01(\x05R\atribute\x12\x12\n" +
	"\x04tier\x18\x02 \x01(\x05R\x04tier\"G\n" +
	"\rBandolierItem\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x12\n" +
	"\x04icon\x18\x02 \x01(\x05R\x04icon\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\"H\n" +
	"\tBandolier\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12'\n" +
	"\x05items\x18\x02 \x03(\v2\x11.eq.BandolierItemR\x05items\"H\n" +
	"\x0ePotionBeltItem\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x12\n" +
	"\x04icon\x18\x02 \x01(\x05R\x04icon\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\"6\n" +
	"\n" +
	"PotionBelt\x12(\n" +
	"\x05items\x18\x01 \x03(\v2\x12.eq.PotionBeltItemR\x05items\"\x1e\n" +
	"\n" +
	"StringList\x12\x10\n" +
	"\x03str\x18\x01 \x01(\tR\x03str\"\xca\x06\n" +
	"\x11GroupLeadershipAA\x12)\n" +
	"\x11group_aa_mark_npc\x18\x01 \x01(\x05R\x0egroupAaMarkNpc\x12,\n" +
	"\x12group_aanpc_health\x18\x02 \x01(\x05R\x10groupAanpcHealth\x12@\n" +
	"\x1dgroup_aa_delegate_main_assist\x18\x03 \x01(\x05R\x19groupAaDelegateMainAssist\x12:\n" +
	"\x1agroup_aa_delegate_mark_npc\x18\x04 \x01(\x05R\x16groupAaDelegateMarkNpc\x12\x1b\n" +
	"\tgroup_aa4\x18\x05 \x01(\x05R\bgroupAa4\x12\x1b\n" +
	"\tgroup_aa5\x18\x06 \x01(\x05R\bgroupAa5\x123\n" +
	"\x16group_aa_inspect_buffs\x18\a \x01(\x05R\x13groupAaInspectBuffs\x12\x1b\n" +
	"\tgroup_aa7\x18\b \x01(\x05R\bgroupAa7\x127\n" +
	"\x18group_aa_spell_awareness\x18\t \x01(\x05R\x15groupAaSpellAwareness\x12?\n" +
	"\x1cgroup_aa_offense_enhancement\x18\n" +
	" \x01(\x05R\x19groupAaOffenseEnhancement\x129\n" +
	"\x19group_aa_mana_enhancement\x18\v \x01(\x05R\x16groupAaManaEnhancement\x12=\n" +
	"\x1bgroup_aa_health_enhancement\x18\f \x01(\x05R\x18groupAaHealthEnhancement\x12?\n" +
	"\x1cgroup_aa_health_regeneration\x18\r \x01(\x05R\x19groupAaHealthRegeneration\x125\n" +
	"\x18group_aa_find_path_to_pc\x18\x0e \x01(\x05R\x13groupAaFindPathToPc\x12G\n" +
	"!group_aa_health_of_targets_target\x18\x0f \x01(\x05R\x1cgroupAaHealthOfTargetsTarget\x12\x1d\n" +
	"\n" +
	"group_aa15\x18\x10 \x01(\x05R\tgroupAa15\"\x93\x06\n" +
	"\x10RaidLeadershipAA\x12'\n" +
	"\x10raid_aa_mark_npc\x18\x01 \x01(\x05R\rraidAaMarkNpc\x12*\n" +
	"\x11raid_aanpc_health\x18\x02 \x01(\x05R\x0fraidAanpcHealth\x12>\n" +
	"\x1craid_aa_delegate_main_assist\x18\x03 \x01(\x05R\x18raidAaDelegateMainAssist\x128\n" +
	"\x19raid_aa_delegate_mark_npc\x18\x04 \x01(\x05R\x15raidAaDelegateMarkNpc\x12\x19\n" +
	"\braid_aa4\x18\x05 \x01(\x05R\araidAa4\x12\x19\n" +
	"\braid_aa5\x18\x06 \x01(\x05R\araidAa5\x12\x19\n" +
	"\braid_aa6\x18\a \x01(\x05R\araidAa6\x125\n" +
	"\x17raid_aa_spell_awareness\x18\b \x01(\x05R\x14raidAaSpellAwareness\x12=\n" +
	"\x1braid_aa_offense_enhancement\x18\t \x01(\x05R\x18raidAaOffenseEnhancement\x127\n" +
	"\x18raid_aa_mana_enhancement\x18\n" +
	" \x01(\x05R\x15raidAaManaEnhancement\x12;\n" +
	"\x1araid_aa_health_enhancement\x18\v \x01(\x05R\x17raidAaHealthEnhancement\x12=\n" +
	"\x1braid_aa_health_regeneration\x18\f \x01(\x05R\x18raidAaHealthRegeneration\x123\n" +
	"\x17raid_aa_find_path_to_pc\x18\r \x01(\x05R\x12raidAaFindPathToPc\x12E\n" +
	" raid_aa_health_of_targets_target\x18\x0e \x01(\x05R\x1braidAaHealthOfTargetsTarget\x12\x1b\n" +
	"\traid_aa14\x18\x0f \x01(\x05R\braidAa14\x12\x1b\n" +
	"\traid_aa15\x18\x10 \x01(\x05R\braidAa15\"e\n" +
	"\fLeadershipAA\x12+\n" +
	"\x05group\x18\x01 \x01(\v2\x15.eq.GroupLeadershipAAR\x05group\x12(\n" +
	"\x04raid\x18\x02 \x01(\v2\x14.eq.RaidLeadershipAAR\x04raid\"c\n" +
	"\x04Bind\x12\x17\n" +
	"\azone_id\x18\x01 \x01(\x05R\x06zoneId\x12\f\n" +
	"\x01x\x18\x02 \x01(\x02R\x01x\x12\f\n" +
	"\x01y\x18\x03 \x01(\x02R\x01y\x12\f\n" +
	"\x01z\x18\x04 \x01(\x02R\x01z\x12\x18\n" +
	"\aheading\x18\x05 \x01(\x02R\aheading\"\xac\x01\n" +
	"\rPVPStatsEntry\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05level\x18\x02 \x01(\x05R\x05level\x12\x12\n" +
	"\x04race\x18\x03 \x01(\x05R\x04race\x12\x1d\n" +
	"\n" +
	"char_class\x18\x04 \x01(\x05R\tcharClass\x12\x12\n" +
	"\x04zone\x18\x05 \x01(\x05R\x04zone\x12\x12\n" +
	"\x04time\x18\x06 \x01(\x05R\x04time\x12\x16\n" +
	"\x06points\x18\a \x01(\x05R\x06points\"\xfc!\n" +
	"\rPlayerProfile\x12\x1a\n" +
	"\bchecksum\x18\x01 \x01(\x05R\bchecksum\x12\x16\n" +
	"\x06gender\x18\x02 \x01(\x05R\x06gender\x12\x12\n" +
	"\x04race\x18\x03 \x01(\x05R\x04race\x12\x1d\n" +
	"\n" +
	"char_class\x18\x04 \x01(\x05R\tcharClass\x12\x14\n" +
	"\x05level\x18\x05 \x01(\x05R\x05level\x12\x16\n" +
	"\x06level1\x18\x06 \x01(\x05R\x06level1\x12\x1e\n" +
	"\x05binds\x18\a \x03(\v2\b.eq.BindR\x05binds\x12\x14\n" +
	"\x05deity\x18\b \x01(\x05R\x05deity\x12\"\n" +
	"\fintoxication\x18\t \x01(\x05R\fintoxication\x12,\n" +
	"\x12spell_slot_refresh\x18\n" +
	" \x03(\x05R\x10spellSlotRefresh\x120\n" +
	"\x14ability_slot_refresh\x18\v \x01(\x05R\x12abilitySlotRefresh\x12\x1c\n" +
	"\thaircolor\x18\f \x01(\x05R\thaircolor\x12\x1e\n" +
	"\n" +
	"beardcolor\x18\r \x01(\x05R\n" +
	"beardcolor\x12\x1c\n" +
	"\teyecolor1\x18\x0e \x01(\x05R\teyecolor1\x12\x1c\n" +
	"\teyecolor2\x18\x0f \x01(\x05R\teyecolor2\x12\x1c\n" +
	"\thairstyle\x18\x10 \x01(\x05R\thairstyle\x12\x14\n" +
	"\x05beard\x18\x11 \x01(\x05R\x05beard\x127\n" +
	"\ritem_material\x18\x12 \x01(\v2\x12.eq.TextureProfileR\fitemMaterial\x12\x1b\n" +
	"\titem_tint\x18\x13 \x01(\x05R\bitemTint\x12'\n" +
	"\baa_array\x18\x14 \x03(\v2\f.eq.AA_ArrayR\aaaArray\x12\x16\n" +
	"\x06points\x18\x15 \x01(\x05R\x06points\x12\x12\n" +
	"\x04mana\x18\x16 \x01(\x05R\x04mana\x12\x15\n" +
	"\x06cur_hp\x18\x17 \x01(\x05R\x05curHp\x12\x10\n" +
	"\x03str\x18\x18 \x01(\x05R\x03str\x12\x10\n" +
	"\x03sta\x18\x19 \x01(\x05R\x03sta\x12\x10\n" +
	"\x03cha\x18\x1a \x01(\x05R\x03cha\x12\x10\n" +
	"\x03dex\x18\x1b \x01(\x05R\x03dex\x12\x14\n" +
	"\x05intel\x18\x1c \x01(\x05R\x05intel\x12\x10\n" +
	"\x03agi\x18\x1d \x01(\x05R\x03agi\x12\x10\n" +
	"\x03wis\x18\x1e \x01(\x05R\x03wis\x12\x12\n" +
	"\x04face\x18\x1f \x01(\x05R\x04face\x12\x1d\n" +
	"\n" +
	"spell_book\x18  \x03(\x05R\tspellBook\x12\x1d\n" +
	"\n" +
	"mem_spells\x18! \x03(\x05R\tmemSpells\x12\x1a\n" +
	"\bplatinum\x18\" \x01(\x05R\bplatinum\x12\x12\n" +
	"\x04gold\x18# \x01(\x05R\x04gold\x12\x16\n" +
	"\x06silver\x18$ \x01(\x05R\x06silver\x12\x16\n" +
	"\x06copper\x18% \x01(\x05R\x06copper\x12'\n" +
	"\x0fplatinum_cursor\x18& \x01(\x05R\x0eplatinumCursor\x12\x1f\n" +
	"\vgold_cursor\x18' \x01(\x05R\n" +
	"goldCursor\x12#\n" +
	"\rsilver_cursor\x18( \x01(\x05R\fsilverCursor\x12#\n" +
	"\rcopper_cursor\x18) \x01(\x05R\fcopperCursor\x12\x16\n" +
	"\x06skills\x18* \x03(\x05R\x06skills\x12#\n" +
	"\rinnate_skills\x18+ \x03(\x05R\finnateSkills\x12\x1a\n" +
	"\btoxicity\x18, \x01(\x05R\btoxicity\x12!\n" +
	"\fthirst_level\x18- \x01(\x05R\vthirstLevel\x12!\n" +
	"\fhunger_level\x18. \x01(\x05R\vhungerLevel\x12#\n" +
	"\x05buffs\x18/ \x03(\v2\r.eq.SpellBuffR\x05buffs\x121\n" +
	"\vdisciplines\x180 \x01(\v2\x0f.eq.DisciplinesR\vdisciplines\x12#\n" +
	"\rrecast_timers\x181 \x03(\x05R\frecastTimers\x12\x1c\n" +
	"\tendurance\x182 \x01(\x05R\tendurance\x12%\n" +
	"\x0eaapoints_spent\x183 \x01(\x05R\raapointsSpent\x12\x1a\n" +
	"\baapoints\x184 \x01(\x05R\baapoints\x12-\n" +
	"\n" +
	"bandoliers\x185 \x03(\v2\r.eq.BandolierR\n" +
	"bandoliers\x12.\n" +
	"\n" +
	"potionbelt\x186 \x01(\v2\x0e.eq.PotionBeltR\n" +
	"potionbelt\x12'\n" +
	"\x0favailable_slots\x187 \x01(\x05R\x0eavailableSlots\x12\x12\n" +
	"\x04name\x188 \x01(\tR\x04name\x12\x1b\n" +
	"\tlast_name\x189 \x01(\tR\blastName\x12\x19\n" +
	"\bguild_id\x18: \x01(\x05R\aguildId\x12\x1a\n" +
	"\bbirthday\x18; \x01(\x05R\bbirthday\x12\x1c\n" +
	"\tlastlogin\x18< \x01(\x05R\tlastlogin\x12&\n" +
	"\x0ftime_played_min\x18= \x01(\x05R\rtimePlayedMin\x12\x10\n" +
	"\x03pvp\x18> \x01(\x05R\x03pvp\x12\x12\n" +
	"\x04anon\x18? \x01(\x05R\x04anon\x12\x0e\n" +
	"\x02gm\x18@ \x01(\x05R\x02gm\x12\x1c\n" +
	"\tguildrank\x18A \x01(\x05R\tguildrank\x12 \n" +
	"\vguildbanker\x18B \x01(\x05R\vguildbanker\x12\x10\n" +
	"\x03exp\x18C \x01(\x05R\x03exp\x124\n" +
	"\x15timeentitledonaccount\x18D \x01(\x05R\x15timeentitledonaccount\x12\x1c\n" +
	"\tlanguages\x18E \x03(\x05R\tlanguages\x12\f\n" +
	"\x01x\x18F \x01(\x02R\x01x\x12\f\n" +
	"\x01y\x18G \x01(\x02R\x01y\x12\f\n" +
	"\x01z\x18H \x01(\x02R\x01z\x12\x18\n" +
	"\aheading\x18I \x01(\x02R\aheading\x12#\n" +
	"\rplatinum_bank\x18J \x01(\x05R\fplatinumBank\x12\x1b\n" +
	"\tgold_bank\x18K \x01(\x05R\bgoldBank\x12\x1f\n" +
	"\vsilver_bank\x18L \x01(\x05R\n" +
	"silverBank\x12\x1f\n" +
	"\vcopper_bank\x18M \x01(\x05R\n" +
	"copperBank\x12'\n" +
	"\x0fplatinum_shared\x18N \x01(\x05R\x0eplatinumShared\x12\x1e\n" +
	"\n" +
	"expansions\x18O \x01(\x05R\n" +
	"expansions\x12\x1c\n" +
	"\tautosplit\x18P \x01(\x05R\tautosplit\x12\x17\n" +
	"\azone_id\x18Q \x01(\x05R\x06zoneId\x12#\n" +
	"\rzone_instance\x18R \x01(\x05R\fzoneInstance\x123\n" +
	"\rgroup_members\x18S \x03(\v2\x0e.eq.StringListR\fgroupMembers\x12!\n" +
	"\fgroup_leader\x18T \x01(\tR\vgroupLeader\x12\x1a\n" +
	"\bentityid\x18U \x01(\x05R\bentityid\x12$\n" +
	"\x0elead_aa_active\x18V \x01(\x05R\fleadAaActive\x12&\n" +
	"\x0fldon_points_guk\x18W \x01(\x05R\rldonPointsGuk\x12&\n" +
	"\x0fldon_points_mir\x18X \x01(\x05R\rldonPointsMir\x12&\n" +
	"\x0fldon_points_mmc\x18Y \x01(\x05R\rldonPointsMmc\x12&\n" +
	"\x0fldon_points_ruj\x18Z \x01(\x05R\rldonPointsRuj\x12&\n" +
	"\x0fldon_points_tak\x18[ \x01(\x05R\rldonPointsTak\x122\n" +
	"\x15ldon_points_available\x18\\ \x01(\x05R\x13ldonPointsAvailable\x124\n" +
	"\x16tribute_time_remaining\x18] \x01(\x05R\x14tributeTimeRemaining\x122\n" +
	"\x15career_tribute_points\x18^ \x01(\x05R\x13careerTributePoints\x12%\n" +
	"\x0etribute_points\x18_ \x01(\x05R\rtributePoints\x12%\n" +
	"\x0etribute_active\x18` \x01(\x05R\rtributeActive\x12'\n" +
	"\btributes\x18a \x03(\v2\v.eq.TributeR\btributes\x120\n" +
	"\x14group_leadership_exp\x18b \x01(\x01R\x12groupLeadershipExp\x12.\n" +
	"\x13raid_leadership_exp\x18c \x01(\x01R\x11raidLeadershipExp\x126\n" +
	"\x17group_leadership_points\x18d \x01(\x05R\x15groupLeadershipPoints\x124\n" +
	"\x16raid_leadership_points\x18e \x01(\x05R\x14raidLeadershipPoints\x12;\n" +
	"\x10leader_abilities\x18f \x01(\v2\x10.eq.LeadershipAAR\x0fleaderAbilities\x12#\n" +
	"\rair_remaining\x18g \x01(\x05R\fairRemaining\x12\x1b\n" +
	"\tpvp_kills\x18h \x01(\x05R\bpvpKills\x12\x1d\n" +
	"\n" +
	"pvp_deaths\x18i \x01(\x05R\tpvpDeaths\x12,\n" +
	"\x12pvp_current_points\x18j \x01(\x05R\x10pvpCurrentPoints\x12*\n" +
	"\x11pvp_career_points\x18k \x01(\x05R\x0fpvpCareerPoints\x12/\n" +
	"\x14pvp_best_kill_streak\x18l \x01(\x05R\x11pvpBestKillStreak\x123\n" +
	"\x16pvp_worst_death_streak\x18m \x01(\x05R\x13pvpWorstDeathStreak\x125\n" +
	"\x17pvp_current_kill_streak\x18n \x01(\x05R\x14pvpCurrentKillStreak\x125\n" +
	"\rpvp_last_kill\x18o \x01(\v2\x11.eq.PVPStatsEntryR\vpvpLastKill\x127\n" +
	"\x0epvp_last_death\x18p \x01(\v2\x11.eq.PVPStatsEntryR\fpvpLastDeath\x12G\n" +
	"\"pvp_number_of_kills_in_last__hours\x18q \x01(\x05R\x1bpvpNumberOfKillsInLastHours\x12;\n" +
	"\x10pvp_recent_kills\x18r \x03(\v2\x11.eq.PVPStatsEntryR\x0epvpRecentKills\x12\x15\n" +
	"\x06exp_aa\x18s \x01(\x05R\x05expAa\x120\n" +
	"\x14current_rad_crystals\x18t \x01(\x05R\x12currentRadCrystals\x12.\n" +
	"\x13career_rad_crystals\x18u \x01(\x05R\x11careerRadCrystals\x122\n" +
	"\x15current_ebon_crystals\x18v \x01(\x05R\x13currentEbonCrystals\x120\n" +
	"\x14career_ebon_crystals\x18w \x01(\x05R\x12careerEbonCrystals\x12+\n" +
	"\x11group_autoconsent\x18x \x01(\x05R\x10groupAutoconsent\x12)\n" +
	"\x10raid_autoconsent\x18y \x01(\x05R\x0fraidAutoconsent\x12+\n" +
	"\x11guild_autoconsent\x18z \x01(\x05R\x10guildAutoconsent\x12\x16\n" +
	"\x06level3\x18{ \x01(\x05R\x06level3\x12\x1a\n" +
	"\bshowhelm\x18| \x01(\x05R\bshowhelm\"-\n" +
	"\fClientTarget\x12\x1d\n" +
	"\n" +
	"new_target\x18\x01 \x01(\x05R\tnewTarget\"\x0e\n" +
	"\fTargetReject\">\n" +
	"\n" +
	"PetCommand\x12\x18\n" +
	"\acommand\x18\x01 \x01(\x05R\acommand\x12\x16\n" +
	"\x06target\x18\x02 \x01(\x05R\x06target\"(\n" +
	"\vDeleteSpawn\x12\x19\n" +
	"\bspawn_id\x18\x01 \x01(\x05R\aspawnId\"\xc5\x01\n" +
	"\x0eChannelMessage\x12\x1e\n" +
	"\n" +
	"targetname\x18\x01 \x01(\tR\n" +
	"targetname\x12\x16\n" +
	"\x06sender\x18\x02 \x01(\tR\x06sender\x12\x1a\n" +
	"\blanguage\x18\x03 \x01(\x05R\blanguage\x12\x19\n" +
	"\bchan_num\x18\x04 \x01(\x05R\achanNum\x12*\n" +
	"\x11skill_in_language\x18\x05 \x01(\x05R\x0fskillInLanguage\x12\x18\n" +
	"\amessage\x18\x06 \x01(\tR\amessage\"\x98\x01\n" +
	"\vSpecialMesg\x12\x16\n" +
	"\x06header\x18\x01 \x01(\tR\x06header\x12\x19\n" +
	"\bmsg_type\x18\x02 \x01(\x05R\amsgType\x12&\n" +
	"\x0ftarget_spawn_id\x18\x03 \x01(\x05R\rtargetSpawnId\x12\x14\n" +
	"\x05sayer\x18\x04 \x01(\tR\x05sayer\x12\x18\n" +
	"\amessage\x18\x05 \x01(\tR\amessage\"{\n" +
	"\n" +
	"WearChange\x12\x19\n" +
	"\bspawn_id\x18\x01 \x01(\x05R\aspawnId\x12\x1a\n" +
	"\bmaterial\x18\x02 \x01(\x05R\bmaterial\x12\x14\n" +
	"\x05color\x18\x03 \x01(\x05R\x05color\x12 \n" +
	"\fwear_slot_id\x18\x04 \x01(\x05R\n" +
	"wearSlotId\"/\n" +
	"\tBindWound\x12\x0e\n" +
	"\x02to\x18\x01 \x01(\x05R\x02to\x12\x12\n" +
	"\x04type\x18\x02 \x01(\x05R\x04type\"\xc8\x01\n" +
	"\n" +
	"ZoneChange\x12\x1b\n" +
	"\tchar_name\x18\x01 \x01(\tR\bcharName\x12\x17\n" +
	"\azone_id\x18\x02 \x01(\x05R\x06zoneId\x12\x1f\n" +
	"\vinstance_id\x18\x03 \x01(\x05R\n" +
	"instanceId\x12\f\n" +
	"\x01y\x18\x04 \x01(\x02R\x01y\x12\f\n" +
	"\x01x\x18\x05 \x01(\x02R\x01x\x12\f\n" +
	"\x01z\x18\x06 \x01(\x02R\x01z\x12\x1f\n" +
	"\vzone_reason\x18\a \x01(\x05R\n" +
	"zoneReason\x12\x18\n" +
	"\asuccess\x18\b \x01(\x05R\asuccess\"\xab\x01\n" +
	"\x17RequestClientZoneChange\x12\x17\n" +
	"\azone_id\x18\x01 \x01(\x05R\x06zoneId\x12\x1f\n" +
	"\vinstance_id\x18\x02 \x01(\x05R\n" +
	"instanceId\x12\f\n" +
	"\x01y\x18\x03 \x01(\x02R\x01y\x12\f\n" +
	"\x01x\x18\x04 \x01(\x02R\x01x\x12\f\n" +
	"\x01z\x18\x05 \x01(\x02R\x01z\x12\x18\n" +
	"\aheading\x18\x06 \x01(\x02R\aheading\x12\x12\n" +
	"\x04type\x18\a \x01(\x05R\x04type\"S\n" +
	"\tAnimation\x12\x18\n" +
	"\aspawnid\x18\x01 \x01(\x05R\aspawnid\x12\x14\n" +
	"\x05speed\x18\x02 \x01(\x05R\x05speed\x12\x16\n" +
	"\x06action\x18\x03 \x01(\x05R\x06action\"\xb5\x02\n" +
	"\x06Action\x12\x16\n" +
	"\x06target\x18\x01 \x01(\x05R\x06target\x12\x16\n" +
	"\x06source\x18\x02 \x01(\x05R\x06source\x12\x14\n" +
	"\x05level\x18\x03 \x01(\x05R\x05level\x12%\n" +
	"\x0einstrument_mod\x18\x04 \x01(\x05R\rinstrumentMod\x12\x14\n" +
	"\x05force\x18\x05 \x01(\x02R\x05force\x12\x1f\n" +
	"\vhit_heading\x18\x06 \x01(\x02R\n" +
	"hitHeading\x12\x1b\n" +
	"\thit_pitch\x18\a \x01(\x02R\bhitPitch\x12\x12\n" +
	"\x04type\x18\b \x01(\x05R\x04type\x12\x14\n" +
	"\x05spell\x18\t \x01(\x05R\x05spell\x12\x1f\n" +
	"\vspell_level\x18\n" +
	" \x01(\x05R\n" +
	"spellLevel\x12\x1f\n" +
	"\veffect_flag\x18\v \x01(\x05R\n" +
	"effectFlag\"\xd8\x01\n" +
	"\fCombatDamage\x12\x16\n" +
	"\x06target\x18\x01 \x01(\x05R\x06target\x12\x16\n" +
	"\x06source\x18\x02 \x01(\x05R\x06source\x12\x12\n" +
	"\x04type\x18\x03 \x01(\x05R\x04type\x12\x18\n" +
	"\aspellid\x18\x04 \x01(\x05R\aspellid\x12\x16\n" +
	"\x06damage\x18\x05 \x01(\x05R\x06damage\x12\x14\n" +
	"\x05force\x18\x06 \x01(\x02R\x05force\x12\x1f\n" +
	"\vhit_heading\x18\a \x01(\x02R\n" +
	"hitHeading\x12\x1b\n" +
	"\thit_pitch\x18\b \x01(\x02R\bhitPitch\"\xb8\x01\n" +
	"\bConsider\x12\x1a\n" +
	"\bplayerid\x18\x01 \x01(\x05R\bplayerid\x12\x1a\n" +
	"\btargetid\x18\x02 \x01(\x05R\btargetid\x12\x18\n" +
	"\afaction\x18\x03 \x01(\x05R\afaction\x12\x14\n" +
	"\x05level\x18\x04 \x01(\x05R\x05level\x12\x15\n" +
	"\x06cur_hp\x18\x05 \x01(\x05R\x05curHp\x12\x15\n" +
	"\x06max_hp\x18\x06 \x01(\x05R\x05maxHp\x12\x16\n" +
	"\x06pvpcon\x18\a \x01(\x05R\x06pvpcon\"\xd1\x01\n" +
	"\x05Death\x12\x19\n" +
	"\bspawn_id\x18\x01 \x01(\x05R\aspawnId\x12\x1b\n" +
	"\tkiller_id\x18\x02 \x01(\x05R\bkillerId\x12\x1a\n" +
	"\bcorpseid\x18\x03 \x01(\x05R\bcorpseid\x12!\n" +
	"\fattack_skill\x18\x04 \x01(\x05R\vattackSkill\x12\x19\n" +
	"\bspell_id\x18\x05 \x01(\x05R\aspellId\x12\x1e\n" +
	"\n" +
	"bindzoneid\x18\x06 \x01(\x05R\n" +
	"bindzoneid\x12\x16\n" +
	"\x06damage\x18\a \x01(\x05R\x06damage\"S\n" +
	"\fBecomeCorpse\x12\x19\n" +
	"\bspawn_id\x18\x01 \x01(\x05R\aspawnId\x12\f\n" +
	"\x01y\x18\x02 \x01(\x02R\x01y\x12\f\n" +
	"\x01x\x18\x03 \x01(\x02R\x01x\x12\f\n" +
	"\x01z\x18\x04 \x01(\x02R\x01z\"\x9e\x02\n" +
	"\x1aPlayerPositionUpdateServer\x12\x19\n" +
	"\bspawn_id\x18\x01 \x01(\x05R\aspawnId\x12#\n" +
	"\rdelta_heading\x18\x02 \x01(\x05R\fdeltaHeading\x12\x13\n" +
	"\x05x_pos\x18\x03 \x01(\x05R\x04xPos\x12\x13\n" +
	"\x05y_pos\x18\x04 \x01(\x05R\x04yPos\x12\x1c\n" +
	"\tanimation\x18\x05 \x01(\x05R\tanimation\x12\x13\n" +
	"\x05z_pos\x18\x06 \x01(\x05R\x04zPos\x12\x17\n" +
	"\adelta_y\x18\a \x01(\x05R\x06deltaY\x12\x17\n" +
	"\adelta_x\x18\b \x01(\x05R\x06deltaX\x12\x18\n" +
	"\aheading\x18\t \x01(\x05R\aheading\x12\x17\n" +
	"\adelta_z\x18\n" +
	" \x01(\x05R\x06deltaZ\"\xba\x02\n" +
	"\x1aPlayerPositionUpdateClient\x12\x19\n" +
	"\bspawn_id\x18\x01 \x01(\x05R\aspawnId\x12\x1a\n" +
	"\bsequence\x18\x02 \x01(\x05R\bsequence\x12\x13\n" +
	"\x05y_pos\x18\x03 \x01(\x02R\x04yPos\x12\x17\n" +
	"\adelta_z\x18\x04 \x01(\x02R\x06deltaZ\x12\x17\n" +
	"\adelta_x\x18\x05 \x01(\x02R\x06deltaX\x12\x17\n" +
	"\adelta_y\x18\x06 \x01(\x02R\x06deltaY\x12\x1c\n" +
	"\tanimation\x18\a \x01(\x05R\tanimation\x12#\n" +
	"\rdelta_heading\x18\b \x01(\x05R\fdeltaHeading\x12\x13\n" +
	"\x05x_pos\x18\t \x01(\x02R\x04xPos\x12\x13\n" +
	"\x05z_pos\x18\n" +
	" \x01(\x02R\x04zPos\x12\x18\n" +
	"\aheading\x18\v \x01(\x05R\aheading\"X\n" +
	"\rSpawnHPUpdate\x12\x15\n" +
	"\x06cur_hp\x18\x01 \x01(\x05R\x05curHp\x12\x15\n" +
	"\x06max_hp\x18\x02 \x01(\x05R\x05maxHp\x12\x19\n" +
	"\bspawn_id\x18\x03 \x01(\x05R\aspawnId\";\n" +
	"\x0eSpawnHPUpdate2\x12\x19\n" +
	"\bspawn_id\x18\x01 \x01(\x05R\aspawnId\x12\x0e\n" +
	"\x02hp\x18\x02 \x01(\x05R\x02hp\"3\n" +
	"\aStamina\x12\x12\n" +
	"\x04food\x18\x01 \x01(\x05R\x04food\x12\x14\n" +
	"\x05water\x18\x02 \x01(\x05R\x05water\"R\n" +
	"\vLevelUpdate\x12\x14\n" +
	"\x05level\x18\x01 \x01(\x05R\x05level\x12\x1b\n" +
	"\tlevel_old\x18\x02 \x01(\x05R\blevelOld\x12\x10\n" +
	"\x03exp\x18\x03 \x01(\x05R\x03exp\"1\n" +
	"\tExpUpdate\x12\x10\n" +
	"\x03exp\x18\x01 \x01(\x05R\x03exp\x12\x12\n" +
	"\x04aaxp\x18\x02 \x01(\x05R\x04aaxp\"j\n" +
	"\n" +
	"ItemPacket\x123\n" +
	"\vpacket_type\x18\x01 \x01(\x0e2\x12.eq.ItemPacketTypeR\n" +
	"packetType\x12'\n" +
	"\x0fserialized_item\x18\x02 \x01(\tR\x0eserializedItem\"9\n" +
	"\x0eBulkItemPacket\x12'\n" +
	"\x0fserialized_item\x18\x01 \x01(\tR\x0eserializedItem\"V\n" +
	"\aConsume\x12\x12\n" +
	"\x04slot\x18\x01 \x01(\x05R\x04slot\x12#\n" +
	"\rauto_consumed\x18\x02 \x01(\x05R\fautoConsumed\x12\x12\n" +
	"\x04type\x18\x03 \x01(\x05R\x04type\"j\n" +
	"\n" +
	"DeleteItem\x12\x1b\n" +
	"\tfrom_slot\x18\x01 \x01(\x05R\bfromSlot\x12\x17\n" +
	"\ato_slot\x18\x02 \x01(\x05R\x06toSlot\x12&\n" +
	"\x0fnumber_in_stack\x18\x03 \x01(\x05R\rnumberInStack\"h\n" +
	"\bMoveItem\x12\x1b\n" +
	"\tfrom_slot\x18\x01 \x01(\x05R\bfromSlot\x12\x17\n" +
	"\ato_slot\x18\x02 \x01(\x05R\x06toSlot\x12&\n" +
	"\x0fnumber_in_stack\x18\x03 \x01(\x05R\rnumberInStack\"\x96\x01\n" +
	"\x10MultiMoveItemSub\x12.\n" +
	"\tfrom_slot\x18\x01 \x01(\v2\x11.eq.InventorySlotR\bfromSlot\x12&\n" +
	"\x0fnumber_in_stack\x18\x02 \x01(\x05R\rnumberInStack\x12*\n" +
	"\ato_slot\x18\x03 \x01(\v2\x11.eq.InventorySlotR\x06toSlot\"Q\n" +
	"\rMultiMoveItem\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x05R\x05count\x12*\n" +
	"\x05moves\x18\x02 \x03(\v2\x14.eq.MultiMoveItemSubR\x05moves\"\x94\x01\n" +
	"\bMoveCoin\x12\x1b\n" +
	"\tfrom_slot\x18\x01 \x01(\x05R\bfromSlot\x12\x17\n" +
	"\ato_slot\x18\x02 \x01(\x05R\x06toSlot\x12\x1c\n" +
	"\tcointype1\x18\x03 \x01(\x05R\tcointype1\x12\x1c\n" +
	"\tcointype2\x18\x04 \x01(\x05R\tcointype2\x12\x16\n" +
	"\x06amount\x18\x05 \x01(\x05R\x06amount\"G\n" +
	"\tTradeBusy\x12\x1a\n" +
	"\tto_mob_id\x18\x01 \x01(\x05R\atoMobId\x12\x1e\n" +
	"\vfrom_mob_id\x18\x02 \x01(\x05R\tfromMobId\"O\n" +
	"\tTradeCoin\x12\x16\n" +
	"\x06trader\x18\x01 \x01(\x05R\x06trader\x12\x12\n" +
	"\x04slot\x18\x02 \x01(\x05R\x04slot\x12\x16\n" +
	"\x06amount\x18\x03 \x01(\x05R\x06amount\"V\n" +
	"\x10TradeMoneyUpdate\x12\x16\n" +
	"\x06trader\x18\x01 \x01(\x05R\x06trader\x12\x12\n" +
	"\x04type\x18\x02 \x01(\x05R\x04type\x12\x16\n" +
	"\x06amount\x18\x03 \x01(\x05R\x06amount\"9\n" +
	"\aSurname\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1a\n" +
	"\blastname\x18\x02 \x01(\tR\blastname\"4\n" +
	"\n" +
	"GuildsList\x12&\n" +
	"\x06guilds\x18\x01 \x03(\v2\x0e.eq.StringListR\x06guilds\"\x8b\x01\n" +
	"\rMoneyOnCorpse\x12\x1a\n" +
	"\bresponse\x18\x01 \x01(\x05R\bresponse\x12\x1a\n" +
	"\bplatinum\x18\x02 \x01(\x05R\bplatinum\x12\x12\n" +
	"\x04gold\x18\x03 \x01(\x05R\x04gold\x12\x16\n" +
	"\x06silver\x18\x04 \x01(\x05R\x06silver\x12\x16\n" +
	"\x06copper\x18\x05 \x01(\x05R\x06copper\"s\n" +
	"\vLootingItem\x12\x16\n" +
	"\x06lootee\x18\x01 \x01(\x05R\x06lootee\x12\x16\n" +
	"\x06looter\x18\x02 \x01(\x05R\x06looter\x12\x17\n" +
	"\aslot_id\x18\x03 \x01(\x05R\x06slotId\x12\x1b\n" +
	"\tauto_loot\x18\x04 \x01(\x05R\bautoLoot\"u\n" +
	"\x11GuildManageStatus\x12\x18\n" +
	"\aguildid\x18\x01 \x01(\x05R\aguildid\x12\x18\n" +
	"\aoldrank\x18\x02 \x01(\x05R\aoldrank\x12\x18\n" +
	"\anewrank\x18\x03 \x01(\x05R\anewrank\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\"\x9a\x01\n" +
	"\tGuildJoin\x12\x18\n" +
	"\aguildid\x18\x01 \x01(\x05R\aguildid\x12\x14\n" +
	"\x05level\x18\x02 \x01(\x05R\x05level\x12\x1d\n" +
	"\n" +
	"char_class\x18\x03 \x01(\x05R\tcharClass\x12\x12\n" +
	"\x04rank\x18\x04 \x01(\x05R\x04rank\x12\x16\n" +
	"\x06zoneid\x18\x05 \x01(\x05R\x06zoneid\x12\x12\n" +
	"\x04name\x18\x06 \x01(\tR\x04name\"\x85\x01\n" +
	"\x11GuildInviteAccept\x12\x18\n" +
	"\ainviter\x18\x01 \x01(\tR\ainviter\x12\x1c\n" +
	"\tnewmember\x18\x02 \x01(\tR\tnewmember\x12\x1a\n" +
	"\bresponse\x18\x03 \x01(\x05R\bresponse\x12\x1c\n" +
	"\tguildeqid\x18\x04 \x01(\x05R\tguildeqid\"I\n" +
	"\x11GuildManageRemove\x12\x1c\n" +
	"\tguildeqid\x18\x01 \x01(\x05R\tguildeqid\x12\x16\n" +
	"\x06member\x18\x02 \x01(\tR\x06member\"|\n" +
	"\fGuildcommand\x12\x1c\n" +
	"\tothername\x18\x01 \x01(\tR\tothername\x12\x16\n" +
	"\x06myname\x18\x02 \x01(\tR\x06myname\x12\x1c\n" +
	"\tguildeqid\x18\x03 \x01(\x05R\tguildeqid\x12\x18\n" +
	"\aofficer\x18\x04 \x01(\x05R\aofficer\"\x8b\x01\n" +
	"\x0eOnLevelMessage\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12\x12\n" +
	"\x04text\x18\x02 \x01(\tR\x04text\x12\x18\n" +
	"\abuttons\x18\x03 \x01(\x05R\abuttons\x12\x1a\n" +
	"\bduration\x18\x04 \x01(\x05R\bduration\x12\x19\n" +
	"\bpopup_id\x18\x05 \x01(\x05R\apopupId\"\xa2\x01\n" +
	"\rGMZoneRequest\x12\x1a\n" +
	"\bcharname\x18\x01 \x01(\tR\bcharname\x12\x17\n" +
	"\azone_id\x18\x02 \x01(\x05R\x06zoneId\x12\f\n" +
	"\x01x\x18\x03 \x01(\x02R\x01x\x12\f\n" +
	"\x01y\x18\x04 \x01(\x02R\x01y\x12\f\n" +
	"\x01z\x18\x05 \x01(\x02R\x01z\x12\x18\n" +
	"\aheading\x18\x06 \x01(\x02R\aheading\x12\x18\n" +
	"\asuccess\x18\a \x01(\x05R\asuccess\"\x9b\x01\n" +
	"\bGMSummon\x12\x1a\n" +
	"\bcharname\x18\x01 \x01(\tR\bcharname\x12\x16\n" +
	"\x06gmname\x18\x02 \x01(\tR\x06gmname\x12\x18\n" +
	"\asuccess\x18\x03 \x01(\x05R\asuccess\x12\x17\n" +
	"\azone_id\x18\x04 \x01(\x05R\x06zoneId\x12\f\n" +
	"\x01y\x18\x05 \x01(\x05R\x01y\x12\f\n" +
	"\x01x\x18\x06 \x01(\x05R\x01x\x12\f\n" +
	"\x01z\x18\a \x01(\x05R\x01z\"\x99\x01\n" +
	"\x06GMGoto\x12\x1a\n" +
	"\bcharname\x18\x01 \x01(\tR\bcharname\x12\x16\n" +
	"\x06gmname\x18\x02 \x01(\tR\x06gmname\x12\x18\n" +
	"\asuccess\x18\x03 \x01(\x05R\asuccess\x12\x17\n" +
	"\azone_id\x18\x04 \x01(\x05R\x06zoneId\x12\f\n" +
	"\x01y\x18\x05 \x01(\x05R\x01y\x12\f\n" +
	"\x01x\x18\x06 \x01(\x05R\x01x\x12\f\n" +
	"\x01z\x18\a \x01(\x05R\x01z\"T\n" +
	"\n" +
	"GMLastName\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x16\n" +
	"\x06gmname\x18\x02 \x01(\tR\x06gmname\x12\x1a\n" +
	"\blastname\x18\x03 \x01(\tR\blastname\"X\n" +
	"\rCombatAbility\x12\x19\n" +
	"\bm_target\x18\x01 \x01(\x05R\amTarget\x12\x13\n" +
	"\x05m_atk\x18\x02 \x01(\x05R\x04mAtk\x12\x17\n" +
	"\am_skill\x18\x03 \x01(\x05R\x06mSkill\"N\n" +
	"\rInstill_Doubt\x12\x11\n" +
	"\x04i_id\x18\x01 \x01(\x05R\x03iId\x12\x13\n" +
	"\x05i_atk\x18\x02 \x01(\x05R\x04iAtk\x12\x15\n" +
	"\x06i_type\x18\x03 \x01(\x05R\x05iType\"\x94\x01\n" +
	"\bGiveItem\x12\x1b\n" +
	"\tto_entity\x18\x01 \x01(\x05R\btoEntity\x12\"\n" +
	"\rto_equip_slot\x18\x02 \x01(\x05R\vtoEquipSlot\x12\x1f\n" +
	"\vfrom_entity\x18\x03 \x01(\x05R\n" +
	"fromEntity\x12&\n" +
	"\x0ffrom_equip_slot\x18\x04 \x01(\x05R\rfromEquipSlot\"1\n" +
	"\tRandomReq\x12\x10\n" +
	"\x03low\x18\x01 \x01(\x05R\x03low\x12\x12\n" +
	"\x04high\x18\x02 \x01(\x05R\x04high\"_\n" +
	"\vRandomReply\x12\x10\n" +
	"\x03low\x18\x01 \x01(\x05R\x03low\x12\x12\n" +
	"\x04high\x18\x02 \x01(\x05R\x04high\x12\x16\n" +
	"\x06result\x18\x03 \x01(\x05R\x06result\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\"/\n" +
	"\x03LFG\x12\x14\n" +
	"\x05value\x18\x01 \x01(\x05R\x05value\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\"=\n" +
	"\x0eLFG_Appearance\x12\x19\n" +
	"\bspawn_id\x18\x01 \x01(\x05R\aspawnId\x12\x10\n" +
	"\x03lfg\x18\x02 \x01(\x05R\x03lfg\"s\n" +
	"\tTimeOfDay\x12\x12\n" +
	"\x04hour\x18\x01 \x01(\x05R\x04hour\x12\x16\n" +
	"\x06minute\x18\x02 \x01(\x05R\x06minute\x12\x10\n" +
	"\x03day\x18\x03 \x01(\x05R\x03day\x12\x14\n" +
	"\x05month\x18\x04 \x01(\x05R\x05month\x12\x12\n" +
	"\x04year\x18\x05 \x01(\x05R\x04year\"p\n" +
	"\x0eMerchant_Click\x12\x14\n" +
	"\x05npcid\x18\x01 \x01(\x05R\x05npcid\x12\x1a\n" +
	"\bplayerid\x18\x02 \x01(\x05R\bplayerid\x12\x18\n" +
	"\acommand\x18\x03 \x01(\x05R\acommand\x12\x12\n" +
	"\x04rate\x18\x04 \x01(\x02R\x04rate\"\x8f\x01\n" +
	"\rMerchant_Sell\x12\x14\n" +
	"\x05npcid\x18\x01 \x01(\x05R\x05npcid\x12\x1a\n" +
	"\bplayerid\x18\x02 \x01(\x05R\bplayerid\x12\x1a\n" +
	"\bitemslot\x18\x03 \x01(\x05R\bitemslot\x12\x1a\n" +
	"\bquantity\x18\x04 \x01(\x05R\bquantity\x12\x14\n" +
	"\x05price\x18\x05 \x01(\x05R\x05price\"w\n" +
	"\x11Merchant_Purchase\x12\x14\n" +
	"\x05npcid\x18\x01 \x01(\x05R\x05npcid\x12\x1a\n" +
	"\bitemslot\x18\x02 \x01(\x05R\bitemslot\x12\x1a\n" +
	"\bquantity\x18\x03 \x01(\x05R\bquantity\x12\x14\n" +
	"\x05price\x18\x04 \x01(\x05R\x05price\"`\n" +
	"\x10Merchant_DelItem\x12\x14\n" +
	"\x05npcid\x18\x01 \x01(\x05R\x05npcid\x12\x1a\n" +
	"\bplayerid\x18\x02 \x01(\x05R\bplayerid\x12\x1a\n" +
	"\bitemslot\x18\x03 \x01(\x05R\bitemslot\"{\n" +
	"\x12Adventure_Purchase\x12\x1b\n" +
	"\tsome_flag\x18\x01 \x01(\x05R\bsomeFlag\x12\x14\n" +
	"\x05npcid\x18\x02 \x01(\x05R\x05npcid\x12\x16\n" +
	"\x06itemid\x18\x03 \x01(\x05R\x06itemid\x12\x1a\n" +
	"\bvariable\x18\x04 \x01(\x05R\bvariable\"s\n" +
	"\x0eAdventure_Sell\x12\x14\n" +
	"\x05npcid\x18\x01 \x01(\x05R\x05npcid\x12\x12\n" +
	"\x04slot\x18\x02 \x01(\x05R\x04slot\x12\x18\n" +
	"\acharges\x18\x03 \x01(\x05R\acharges\x12\x1d\n" +
	"\n" +
	"sell_price\x18\x04 \x01(\x05R\tsellPrice\"\xd9\x02\n" +
	"\x16AdventurePoints_Update\x122\n" +
	"\x15ldon_available_points\x18\x01 \x01(\x05R\x13ldonAvailablePoints\x12\x1d\n" +
	"\n" +
	"unkown_apu\x18\x02 \x03(\x05R\tunkownApu\x12&\n" +
	"\x0fldon_guk_points\x18\x03 \x01(\x05R\rldonGukPoints\x12.\n" +
	"\x13ldon_mirugal_points\x18\x04 \x01(\x05R\x11ldonMirugalPoints\x122\n" +
	"\x15ldon_mistmoore_points\x18\x05 \x01(\x05R\x13ldonMistmoorePoints\x122\n" +
	"\x15ldon_rujarkian_points\x18\x06 \x01(\x05R\x13ldonRujarkianPoints\x12,\n" +
	"\x12ldon_takish_points\x18\a \x01(\x05R\x10ldonTakishPoints\"D\n" +
	"\x0fAdventureFinish\x12\x19\n" +
	"\bwin_lose\x18\x01 \x01(\x05R\awinLose\x12\x16\n" +
	"\x06points\x18\x02 \x01(\x05R\x06points\"C\n" +
	"\x10AdventureRequest\x12\x12\n" +
	"\x04risk\x18\x01 \x01(\x05R\x04risk\x12\x1b\n" +
	"\tentity_id\x18\x02 \x01(\x05R\bentityId\"\xcc\x01\n" +
	"\x18AdventureRequestResponse\x12\x12\n" +
	"\x04text\x18\x01 \x01(\tR\x04text\x12 \n" +
	"\vtimetoenter\x18\x02 \x01(\x05R\vtimetoenter\x12\x1a\n" +
	"\btimeleft\x18\x03 \x01(\x05R\btimeleft\x12\x12\n" +
	"\x04risk\x18\x04 \x01(\x05R\x04risk\x12\f\n" +
	"\x01x\x18\x05 \x01(\x02R\x01x\x12\f\n" +
	"\x01y\x18\x06 \x01(\x02R\x01y\x12\f\n" +
	"\x01z\x18\a \x01(\x02R\x01z\x12 \n" +
	"\vshowcompass\x18\b \x01(\x05R\vshowcompass\"\xc2\x02\n" +
	"\bIllusion\x12\x18\n" +
	"\aspawnid\x18\x01 \x01(\x05R\aspawnid\x12\x1a\n" +
	"\bcharname\x18\x02 \x01(\tR\bcharname\x12\x12\n" +
	"\x04race\x18\x03 \x01(\x05R\x04race\x12\x16\n" +
	"\x06gender\x18\x04 \x01(\x05R\x06gender\x12\x18\n" +
	"\atexture\x18\x05 \x01(\x05R\atexture\x12 \n" +
	"\vhelmtexture\x18\x06 \x01(\x05R\vhelmtexture\x12\x12\n" +
	"\x04face\x18\a \x01(\x05R\x04face\x12\x1c\n" +
	"\thairstyle\x18\b \x01(\x05R\thairstyle\x12\x1c\n" +
	"\thaircolor\x18\t \x01(\x05R\thaircolor\x12\x14\n" +
	"\x05beard\x18\n" +
	" \x01(\x05R\x05beard\x12\x1e\n" +
	"\n" +
	"beardcolor\x18\v \x01(\x05R\n" +
	"beardcolor\x12\x12\n" +
	"\x04size\x18\f \x01(\x02R\x04size\"\xad\x01\n" +
	"\x0fZonePoint_Entry\x12\x1a\n" +
	"\biterator\x18\x01 \x01(\x05R\biterator\x12\f\n" +
	"\x01y\x18\x02 \x01(\x02R\x01y\x12\f\n" +
	"\x01x\x18\x03 \x01(\x02R\x01x\x12\f\n" +
	"\x01z\x18\x04 \x01(\x02R\x01z\x12\x18\n" +
	"\aheading\x18\x05 \x01(\x02R\aheading\x12\x16\n" +
	"\x06zoneid\x18\x06 \x01(\x05R\x06zoneid\x12\"\n" +
	"\fzoneinstance\x18\a \x01(\x05R\fzoneinstance\"I\n" +
	"\n" +
	"ZonePoints\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x05R\x05count\x12%\n" +
	"\x03zpe\x18\x02 \x03(\v2\x13.eq.ZonePoint_EntryR\x03zpe\">\n" +
	"\vSkillUpdate\x12\x19\n" +
	"\bskill_id\x18\x01 \x01(\x05R\askillId\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value\")\n" +
	"\vZoneUnavail\x12\x1a\n" +
	"\bzonename\x18\x01 \x01(\tR\bzonename\":\n" +
	"\fGroupGeneric\x12\x14\n" +
	"\x05name1\x18\x01 \x01(\tR\x05name1\x12\x14\n" +
	"\x05name2\x18\x02 \x01(\tR\x05name2\"Q\n" +
	"\vGroupCancel\x12\x14\n" +
	"\x05name1\x18\x01 \x01(\tR\x05name1\x12\x14\n" +
	"\x05name2\x18\x02 \x01(\tR\x05name2\x12\x16\n" +
	"\x06toggle\x18\x03 \x01(\x05R\x06toggle\"\x93\x01\n" +
	"\vGroupUpdate\x12\x16\n" +
	"\x06action\x18\x01 \x01(\x05R\x06action\x12\x1a\n" +
	"\byourname\x18\x02 \x01(\tR\byourname\x12.\n" +
	"\n" +
	"membername\x18\x03 \x03(\v2\x0e.eq.StringListR\n" +
	"membername\x12 \n" +
	"\vleadersname\x18\x04 \x01(\tR\vleadersname\"\xca\x01\n" +
	"\fGroupUpdate2\x12\x16\n" +
	"\x06action\x18\x01 \x01(\x05R\x06action\x12\x1a\n" +
	"\byourname\x18\x02 \x01(\tR\byourname\x12.\n" +
	"\n" +
	"membername\x18\x03 \x03(\v2\x0e.eq.StringListR\n" +
	"membername\x12 \n" +
	"\vleadersname\x18\x04 \x01(\tR\vleadersname\x124\n" +
	"\n" +
	"leader_aas\x18\x05 \x01(\v2\x15.eq.GroupLeadershipAAR\tleaderAas\"_\n" +
	"\tGroupJoin\x12\x16\n" +
	"\x06action\x18\x01 \x01(\x05R\x06action\x12\x1a\n" +
	"\byourname\x18\x02 \x01(\tR\byourname\x12\x1e\n" +
	"\n" +
	"membername\x18\x03 \x01(\tR\n" +
	"membername\"\xce\x01\n" +
	"\n" +
	"FaceChange\x12\x1c\n" +
	"\thaircolor\x18\x01 \x01(\x05R\thaircolor\x12\x1e\n" +
	"\n" +
	"beardcolor\x18\x02 \x01(\x05R\n" +
	"beardcolor\x12\x1c\n" +
	"\teyecolor1\x18\x03 \x01(\x05R\teyecolor1\x12\x1c\n" +
	"\teyecolor2\x18\x04 \x01(\x05R\teyecolor2\x12\x1c\n" +
	"\thairstyle\x18\x05 \x01(\x05R\thairstyle\x12\x14\n" +
	"\x05beard\x18\x06 \x01(\x05R\x05beard\x12\x12\n" +
	"\x04face\x18\a \x01(\x05R\x04face\"J\n" +
	"\fTradeRequest\x12\x1a\n" +
	"\tto_mob_id\x18\x01 \x01(\x05R\atoMobId\x12\x1e\n" +
	"\vfrom_mob_id\x18\x02 \x01(\x05R\tfromMobId\"-\n" +
	"\vTradeAccept\x12\x1e\n" +
	"\vfrom_mob_id\x18\x01 \x01(\x05R\tfromMobId\"=\n" +
	"\vCancelTrade\x12\x16\n" +
	"\x06fromid\x18\x01 \x01(\x05R\x06fromid\x12\x16\n" +
	"\x06action\x18\x02 \x01(\x05R\x06action\"\xec\x01\n" +
	"\x0ePetitionUpdate\x12\x1c\n" +
	"\tpetnumber\x18\x01 \x01(\x05R\tpetnumber\x12\x14\n" +
	"\x05color\x18\x02 \x01(\x05R\x05color\x12\x16\n" +
	"\x06status\x18\x03 \x01(\x05R\x06status\x12\x1a\n" +
	"\bsenttime\x18\x04 \x01(\x05R\bsenttime\x12\x1c\n" +
	"\taccountid\x18\x05 \x01(\tR\taccountid\x12\x1c\n" +
	"\tgmsenttoo\x18\x06 \x01(\tR\tgmsenttoo\x12\x1a\n" +
	"\bquetotal\x18\a \x01(\x05R\bquetotal\x12\x1a\n" +
	"\bcharname\x18\b \x01(\tR\bcharname\"\x90\x03\n" +
	"\bPetition\x12\x1c\n" +
	"\tpetnumber\x18\x01 \x01(\x05R\tpetnumber\x12\x18\n" +
	"\aurgency\x18\x02 \x01(\x05R\aurgency\x12\x1c\n" +
	"\taccountid\x18\x03 \x01(\tR\taccountid\x12\x16\n" +
	"\x06lastgm\x18\x04 \x01(\tR\x06lastgm\x12\x12\n" +
	"\x04zone\x18\x05 \x01(\x05R\x04zone\x12\x1a\n" +
	"\bcharname\x18\x06 \x01(\tR\bcharname\x12\x1c\n" +
	"\tcharlevel\x18\a \x01(\x05R\tcharlevel\x12\x1c\n" +
	"\tcharclass\x18\b \x01(\x05R\tcharclass\x12\x1a\n" +
	"\bcharrace\x18\t \x01(\x05R\bcharrace\x12\x1c\n" +
	"\tcheckouts\x18\n" +
	" \x01(\x05R\tcheckouts\x12\x18\n" +
	"\aunavail\x18\v \x01(\x05R\aunavail\x12\x1a\n" +
	"\bsenttime\x18\f \x01(\x05R\bsenttime\x12\"\n" +
	"\fpetitiontext\x18\r \x01(\tR\fpetitiontext\x12\x16\n" +
	"\x06gmtext\x18\x0e \x01(\tR\x06gmtext\"\x99\x01\n" +
	"\aWho_All\x12\x12\n" +
	"\x04whom\x18\x01 \x01(\tR\x04whom\x12\x14\n" +
	"\x05wrace\x18\x02 \x01(\x05R\x05wrace\x12\x16\n" +
	"\x06wclass\x18\x03 \x01(\x05R\x06wclass\x12\x16\n" +
	"\x06lvllow\x18\x04 \x01(\x05R\x06lvllow\x12\x18\n" +
	"\alvlhigh\x18\x05 \x01(\x05R\alvlhigh\x12\x1a\n" +
	"\bgmlookup\x18\x06 \x01(\x05R\bgmlookup\"\"\n" +
	"\x04Stun\x12\x1a\n" +
	"\bduration\x18\x01 \x01(\x05R\bduration\"W\n" +
	"\vAugmentItem\x12%\n" +
	"\x0econtainer_slot\x18\x01 \x01(\x05R\rcontainerSlot\x12!\n" +
	"\faugment_slot\x18\x02 \x01(\x05R\vaugmentSlot\"!\n" +
	"\x05Emote\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"C\n" +
	"\aInspect\x12\x1b\n" +
	"\ttarget_id\x18\x01 \x01(\x05R\btargetId\x12\x1b\n" +
	"\tplayer_id\x18\x02 \x01(\x05R\bplayerId\"\xaa\x01\n" +
	"\x0fInspectResponse\x12\x1b\n" +
	"\ttarget_id\x18\x01 \x01(\x05R\btargetId\x12\x1a\n" +
	"\bplayerid\x18\x02 \x01(\x05R\bplayerid\x12,\n" +
	"\titemnames\x18\x03 \x03(\v2\x0e.eq.StringListR\titemnames\x12\x1c\n" +
	"\titemicons\x18\x04 \x03(\x05R\titemicons\x12\x12\n" +
	"\x04text\x18\x05 \x01(\tR\x04text\"/\n" +
	"\vSetDataRate\x12 \n" +
	"\vnewdatarate\x18\x01 \x01(\x02R\vnewdatarate\"+\n" +
	"\x0fSetServerFilter\x12\x18\n" +
	"\afilters\x18\x01 \x03(\x05R\afilters\"*\n" +
	"\x12SetServerFilterAck\x12\x14\n" +
	"\x05blank\x18\x01 \x03(\x05R\x05blank\"\x84\x04\n" +
	"\fIncreaseStat\x12\x10\n" +
	"\x03str\x18\x01 \x01(\x05R\x03str\x12\x10\n" +
	"\x03sta\x18\x02 \x01(\x05R\x03sta\x12\x10\n" +
	"\x03agi\x18\x03 \x01(\x05R\x03agi\x12\x10\n" +
	"\x03dex\x18\x04 \x01(\x05R\x03dex\x12\x11\n" +
	"\x04int_\x18\x05 \x01(\x05R\x03int\x12\x10\n" +
	"\x03wis\x18\x06 \x01(\x05R\x03wis\x12\x10\n" +
	"\x03cha\x18\a \x01(\x05R\x03cha\x12\x12\n" +
	"\x04fire\x18\b \x01(\x05R\x04fire\x12\x12\n" +
	"\x04cold\x18\t \x01(\x05R\x04cold\x12\x14\n" +
	"\x05magic\x18\n" +
	" \x01(\x05R\x05magic\x12\x16\n" +
	"\x06poison\x18\v \x01(\x05R\x06poison\x12\x18\n" +
	"\adisease\x18\f \x01(\x05R\adisease\x12\x12\n" +
	"\x04str2\x18\r \x01(\x05R\x04str2\x12\x12\n" +
	"\x04sta2\x18\x0e \x01(\x05R\x04sta2\x12\x12\n" +
	"\x04agi2\x18\x0f \x01(\x05R\x04agi2\x12\x12\n" +
	"\x04dex2\x18\x10 \x01(\x05R\x04dex2\x12\x13\n" +
	"\x05int2_\x18\x11 \x01(\x05R\x04int2\x12\x12\n" +
	"\x04wis2\x18\x12 \x01(\x05R\x04wis2\x12\x12\n" +
	"\x04cha2\x18\x13 \x01(\x05R\x04cha2\x12\x14\n" +
	"\x05fire2\x18\x14 \x01(\x05R\x05fire2\x12\x14\n" +
	"\x05cold2\x18\x15 \x01(\x05R\x05cold2\x12\x16\n" +
	"\x06magic2\x18\x16 \x01(\x05R\x06magic2\x12\x18\n" +
	"\apoison2\x18\x17 \x01(\x05R\apoison2\x12\x1a\n" +
	"\bdisease2\x18\x18 \x01(\x05R\bdisease2\"n\n" +
	"\x06GMName\x12\x18\n" +
	"\aoldname\x18\x01 \x01(\tR\aoldname\x12\x16\n" +
	"\x06gmname\x18\x02 \x01(\tR\x06gmname\x12\x18\n" +
	"\anewname\x18\x03 \x01(\tR\anewname\x12\x18\n" +
	"\abadname\x18\x04 \x01(\x05R\abadname\"E\n" +
	"\vGMDelCorpse\x12\x1e\n" +
	"\n" +
	"corpsename\x18\x01 \x01(\tR\n" +
	"corpsename\x12\x16\n" +
	"\x06gmname\x18\x02 \x01(\tR\x06gmname\"4\n" +
	"\x06GMKick\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x16\n" +
	"\x06gmname\x18\x02 \x01(\tR\x06gmname\"4\n" +
	"\x06GMKill\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x16\n" +
	"\x06gmname\x18\x02 \x01(\tR\x06gmname\"!\n" +
	"\vGMEmoteZone\x12\x12\n" +
	"\x04text\x18\x01 \x01(\tR\x04text\"R\n" +
	"\bBookText\x12\x16\n" +
	"\x06window\x18\x01 \x01(\x05R\x06window\x12\x12\n" +
	"\x04type\x18\x02 \x01(\x05R\x04type\x12\x1a\n" +
	"\bbooktext\x18\x03 \x01(\tR\bbooktext\"S\n" +
	"\vBookRequest\x12\x16\n" +
	"\x06window\x18\x01 \x01(\x05R\x06window\x12\x12\n" +
	"\x04type\x18\x02 \x01(\x05R\x04type\x12\x18\n" +
	"\atxtfile\x18\x03 \x01(\tR\atxtfile\"\xaa\x02\n" +
	"\x06Object\x12(\n" +
	"\x10linked_list_addr\x18\x01 \x03(\x05R\x0elinkedListAddr\x12\x17\n" +
	"\adrop_id\x18\x02 \x01(\x05R\x06dropId\x12\x17\n" +
	"\azone_id\x18\x03 \x01(\x05R\x06zoneId\x12#\n" +
	"\rzone_instance\x18\x04 \x01(\x05R\fzoneInstance\x12\x18\n" +
	"\aheading\x18\x05 \x01(\x02R\aheading\x12\f\n" +
	"\x01z\x18\x06 \x01(\x02R\x01z\x12\f\n" +
	"\x01x\x18\a \x01(\x02R\x01x\x12\f\n" +
	"\x01y\x18\b \x01(\x02R\x01y\x12\x1f\n" +
	"\vobject_name\x18\t \x01(\tR\n" +
	"objectName\x12\x1f\n" +
	"\vobject_type\x18\n" +
	" \x01(\x05R\n" +
	"objectType\x12\x19\n" +
	"\bspawn_id\x18\v \x01(\x05R\aspawnId\"C\n" +
	"\vClickObject\x12\x17\n" +
	"\adrop_id\x18\x01 \x01(\x05R\x06dropId\x12\x1b\n" +
	"\tplayer_id\x18\x02 \x01(\x05R\bplayerId\"\xa6\x01\n" +
	"\x11ClickObjectAction\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\x05R\bplayerId\x12\x17\n" +
	"\adrop_id\x18\x02 \x01(\x05R\x06dropId\x12\x12\n" +
	"\x04open\x18\x03 \x01(\x05R\x04open\x12\x12\n" +
	"\x04type\x18\x04 \x01(\x05R\x04type\x12\x12\n" +
	"\x04icon\x18\x05 \x01(\x05R\x04icon\x12\x1f\n" +
	"\vobject_name\x18\x06 \x01(\tR\n" +
	"objectName\"(\n" +
	"\tShielding\x12\x1b\n" +
	"\ttarget_id\x18\x01 \x01(\x05R\btargetId\"\xa3\x01\n" +
	"\x0eClickObjectAck\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\x05R\bplayerId\x12\x17\n" +
	"\adrop_id\x18\x02 \x01(\x05R\x06dropId\x12\x12\n" +
	"\x04open\x18\x03 \x01(\x05R\x04open\x12\x12\n" +
	"\x04type\x18\x04 \x01(\x05R\x04type\x12\x12\n" +
	"\x04icon\x18\x05 \x01(\x05R\x04icon\x12\x1f\n" +
	"\vobject_name\x18\x06 \x01(\tR\n" +
	"objectName\"Z\n" +
	"\x0eCloseContainer\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\x05R\bplayerId\x12\x17\n" +
	"\adrop_id\x18\x02 \x01(\x05R\x06dropId\x12\x12\n" +
	"\x04open\x18\x03 \x01(\x05R\x04open\"\xbe\x02\n" +
	"\x04Door\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x13\n" +
	"\x05y_pos\x18\x02 \x01(\x02R\x04yPos\x12\x13\n" +
	"\x05x_pos\x18\x03 \x01(\x02R\x04xPos\x12\x13\n" +
	"\x05z_pos\x18\x04 \x01(\x02R\x04zPos\x12\x18\n" +
	"\aheading\x18\x05 \x01(\x02R\aheading\x12\x18\n" +
	"\aincline\x18\x06 \x01(\x05R\aincline\x12\x12\n" +
	"\x04size\x18\a \x01(\x05R\x04size\x12\x17\n" +
	"\adoor_id\x18\b \x01(\x05R\x06doorId\x12\x1a\n" +
	"\bopentype\x18\t \x01(\x05R\bopentype\x12$\n" +
	"\x0estate_at_spawn\x18\n" +
	" \x01(\x05R\fstateAtSpawn\x12!\n" +
	"\finvert_state\x18\v \x01(\x05R\vinvertState\x12\x1d\n" +
	"\n" +
	"door_param\x18\f \x01(\x05R\tdoorParam\"B\n" +
	"\n" +
	"DoorSpawns\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x05R\x05count\x12\x1e\n" +
	"\x05doors\x18\x02 \x03(\v2\b.eq.DoorR\x05doors\"\x7f\n" +
	"\tClickDoor\x12\x16\n" +
	"\x06doorid\x18\x01 \x01(\x05R\x06doorid\x12$\n" +
	"\rpicklockskill\x18\x02 \x01(\x05R\rpicklockskill\x12\x17\n" +
	"\aitem_id\x18\x03 \x01(\x05R\x06itemId\x12\x1b\n" +
	"\tplayer_id\x18\x04 \x01(\x05R\bplayerId\":\n" +
	"\bMoveDoor\x12\x16\n" +
	"\x06doorid\x18\x01 \x01(\x05R\x06doorid\x12\x16\n" +
	"\x06action\x18\x02 \x01(\x05R\x06action\"I\n" +
	"\vControlBoat\x12\x17\n" +
	"\aboat_id\x18\x01 \x01(\x05R\x06boatId\x12!\n" +
	"\ftake_control\x18\x02 \x01(\bR\vtakeControl\"7\n" +
	"\tBecomeNPC\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x1a\n" +
	"\bmaxlevel\x18\x02 \x01(\x05R\bmaxlevel\"L\n" +
	"\n" +
	"Underworld\x12\x14\n" +
	"\x05speed\x18\x01 \x01(\x02R\x05speed\x12\f\n" +
	"\x01y\x18\x02 \x01(\x02R\x01y\x12\f\n" +
	"\x01x\x18\x03 \x01(\x02R\x01x\x12\f\n" +
	"\x01z\x18\x04 \x01(\x02R\x01z\"\x80\x02\n" +
	"\tResurrect\x12\x17\n" +
	"\azone_id\x18\x01 \x01(\x05R\x06zoneId\x12\x1f\n" +
	"\vinstance_id\x18\x02 \x01(\x05R\n" +
	"instanceId\x12\f\n" +
	"\x01y\x18\x03 \x01(\x02R\x01y\x12\f\n" +
	"\x01x\x18\x04 \x01(\x02R\x01x\x12\f\n" +
	"\x01z\x18\x05 \x01(\x02R\x01z\x12\x1b\n" +
	"\tyour_name\x18\x06 \x01(\tR\byourName\x12\x1f\n" +
	"\vrezzer_name\x18\a \x01(\tR\n" +
	"rezzerName\x12\x18\n" +
	"\aspellid\x18\b \x01(\x05R\aspellid\x12\x1f\n" +
	"\vcorpse_name\x18\t \x01(\tR\n" +
	"corpseName\x12\x16\n" +
	"\x06action\x18\n" +
	" \x01(\x05R\x06action\" \n" +
	"\n" +
	"SetRunMode\x12\x12\n" +
	"\x04mode\x18\x01 \x01(\x05R\x04mode\"j\n" +
	"\n" +
	"EnvDamage2\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x16\n" +
	"\x06damage\x18\x02 \x01(\x05R\x06damage\x12\x18\n" +
	"\admgtype\x18\x03 \x01(\x05R\admgtype\x12\x1a\n" +
	"\bconstant\x18\x04 \x01(\x05R\bconstant\"+\n" +
	"\x11BazaarWindowStart\x12\x16\n" +
	"\x06action\x18\x01 \x01(\x05R\x06action\"t\n" +
	"\rBazaarWelcome\x123\n" +
	"\tbeginning\x18\x01 \x01(\v2\x15.eq.BazaarWindowStartR\tbeginning\x12\x18\n" +
	"\atraders\x18\x02 \x01(\x05R\atraders\x12\x14\n" +
	"\x05items\x18\x03 \x01(\x05R\x05items\"\xd2\x02\n" +
	"\fBazaarSearch\x123\n" +
	"\tbeginning\x18\x01 \x01(\v2\x15.eq.BazaarWindowStartR\tbeginning\x12\x1a\n" +
	"\btraderid\x18\x02 \x01(\x05R\btraderid\x12\x1d\n" +
	"\n" +
	"char_class\x18\x03 \x01(\x05R\tcharClass\x12\x12\n" +
	"\x04race\x18\x04 \x01(\x05R\x04race\x12\x12\n" +
	"\x04stat\x18\x05 \x01(\x05R\x04stat\x12\x12\n" +
	"\x04slot\x18\x06 \x01(\x05R\x04slot\x12\x12\n" +
	"\x04type\x18\a \x01(\x05R\x04type\x12\x12\n" +
	"\x04name\x18\b \x01(\tR\x04name\x12\x1a\n" +
	"\bminprice\x18\t \x01(\x05R\bminprice\x12\x1a\n" +
	"\bmaxprice\x18\n" +
	" \x01(\x05R\bmaxprice\x12\x1a\n" +
	"\bminlevel\x18\v \x01(\x05R\bminlevel\x12\x1a\n" +
	"\bmaxlevel\x18\f \x01(\x05R\bmaxlevel\"<\n" +
	"\rBazaarInspect\x12\x17\n" +
	"\aitem_id\x18\x01 \x01(\x05R\x06itemId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\"B\n" +
	"\x10BazaarReturnDone\x12\x12\n" +
	"\x04type\x18\x01 \x01(\x05R\x04type\x12\x1a\n" +
	"\btraderid\x18\x02 \x01(\x05R\btraderid\"\xf7\x01\n" +
	"\x13BazaarSearchResults\x123\n" +
	"\tbeginning\x18\x01 \x01(\v2\x15.eq.BazaarWindowStartR\tbeginning\x12\x1b\n" +
	"\tseller_id\x18\x02 \x01(\x05R\bsellerId\x12\x1b\n" +
	"\tnum_items\x18\x03 \x01(\x05R\bnumItems\x12#\n" +
	"\rserial_number\x18\x04 \x01(\x05R\fserialNumber\x12\x1b\n" +
	"\titem_name\x18\x05 \x01(\tR\bitemName\x12\x12\n" +
	"\x04cost\x18\x06 \x01(\x05R\x04cost\x12\x1b\n" +
	"\titem_stat\x18\a \x01(\x05R\bitemStat\"\xc7\x01\n" +
	"\x11ServerSideFilters\x120\n" +
	"\x13clientattackfilters\x18\x01 \x01(\x05R\x13clientattackfilters\x12*\n" +
	"\x10npcattackfilters\x18\x02 \x01(\x05R\x10npcattackfilters\x12,\n" +
	"\x11clientcastfilters\x18\x03 \x01(\x05R\x11clientcastfilters\x12&\n" +
	"\x0enpccastfilters\x18\x04 \x01(\x05R\x0enpccastfilters\"c\n" +
	"\x0fItemViewRequest\x12\x17\n" +
	"\aitem_id\x18\x01 \x01(\x05R\x06itemId\x12\x1a\n" +
	"\baugments\x18\x02 \x03(\x05R\baugments\x12\x1b\n" +
	"\tlink_hash\x18\x03 \x01(\x05R\blinkHash\"?\n" +
	"\x11ItemVerifyRequest\x12\x12\n" +
	"\x04slot\x18\x01 \x01(\x05R\x04slot\x12\x16\n" +
	"\x06target\x18\x02 \x01(\x05R\x06target\"\x8c\x01\n" +
	"\n" +
	"PickPocket\x12\x0e\n" +
	"\x02to\x18\x01 \x01(\x05R\x02to\x12\x12\n" +
	"\x04from\x18\x02 \x01(\x05R\x04from\x12\x18\n" +
	"\amyskill\x18\x03 \x01(\x05R\amyskill\x12\x12\n" +
	"\x04type\x18\x04 \x01(\x05R\x04type\x12\x12\n" +
	"\x04coin\x18\x05 \x01(\x05R\x04coin\x12\x18\n" +
	"\alastsix\x18\x06 \x03(\x05R\alastsix\"\x8f\x01\n" +
	"\vsPickPocket\x12\x0e\n" +
	"\x02to\x18\x01 \x01(\x05R\x02to\x12\x12\n" +
	"\x04from\x18\x02 \x01(\x05R\x04from\x12\x18\n" +
	"\amyskill\x18\x03 \x01(\x05R\amyskill\x12\x12\n" +
	"\x04type\x18\x04 \x01(\x05R\x04type\x12\x12\n" +
	"\x04coin\x18\x05 \x01(\x05R\x04coin\x12\x1a\n" +
	"\bitemname\x18\x06 \x01(\tR\bitemname\"3\n" +
	"\tLogServer\x12&\n" +
	"\x0eworldshortname\x18\x01 \x01(\tR\x0eworldshortname\"\x0e\n" +
	"\fApproveWorld\"b\n" +
	"\vClientError\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12%\n" +
	"\x0echaracter_name\x18\x02 \x01(\tR\rcharacterName\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"+\n" +
	"\tMobHealth\x12\x0e\n" +
	"\x02hp\x18\x01 \x01(\x05R\x02hp\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\x05R\x02id\"?\n" +
	"\x05Track\x12\x1a\n" +
	"\bentityid\x18\x01 \x01(\x05R\bentityid\x12\x1a\n" +
	"\bdistance\x18\x02 \x01(\x02R\bdistance\")\n" +
	"\vTrackTarget\x12\x1a\n" +
	"\bentityid\x18\x01 \x01(\x05R\bentityid\"E\n" +
	"\bTracking\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x05R\x05count\x12#\n" +
	"\aentries\x18\x02 \x03(\v2\t.eq.TrackR\aentries\"4\n" +
	"\x0eZoneServerInfo\x12\x0e\n" +
	"\x02ip\x18\x01 \x01(\tR\x02ip\x12\x12\n" +
	"\x04port\x18\x02 \x01(\x05R\x04port\"\xb1\x02\n" +
	"\fWhoAllPlayer\x12\"\n" +
	"\fformatstring\x18\x01 \x01(\x05R\fformatstring\x12\x1c\n" +
	"\tpidstring\x18\x02 \x01(\x05R\tpidstring\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x1e\n" +
	"\n" +
	"rankstring\x18\x04 \x01(\x05R\n" +
	"rankstring\x12\x14\n" +
	"\x05guild\x18\x05 \x01(\tR\x05guild\x12\x1e\n" +
	"\n" +
	"zonestring\x18\x06 \x01(\x05R\n" +
	"zonestring\x12\x12\n" +
	"\x04zone\x18\a \x01(\x05R\x04zone\x12\x1d\n" +
	"\n" +
	"char_class\x18\b \x01(\x05R\tcharClass\x12\x14\n" +
	"\x05level\x18\t \x01(\x05R\x05level\x12\x12\n" +
	"\x04race\x18\n" +
	" \x01(\x05R\x04race\x12\x18\n" +
	"\aaccount\x18\v \x01(\tR\aaccount\"\xd0\x01\n" +
	"\fWhoAllReturn\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12*\n" +
	"\x10playerineqstring\x18\x02 \x01(\x05R\x10playerineqstring\x12\x12\n" +
	"\x04line\x18\x03 \x01(\tR\x04line\x120\n" +
	"\x13playersinzonestring\x18\x04 \x01(\x05R\x13playersinzonestring\x12\x14\n" +
	"\x05count\x18\x05 \x01(\x05R\x05count\x12(\n" +
	"\x06player\x18\x06 \x03(\v2\x10.eq.WhoAllPlayerR\x06player\"P\n" +
	"\x06Trader\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12\x16\n" +
	"\x06itemid\x18\x02 \x03(\x05R\x06itemid\x12\x1a\n" +
	"\bitemcost\x18\x03 \x03(\x05R\bitemcost\"=\n" +
	"\vClickTrader\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12\x1a\n" +
	"\bitemcost\x18\x02 \x03(\x05R\bitemcost\" \n" +
	"\bGetItems\x12\x14\n" +
	"\x05items\x18\x01 \x03(\x05R\x05items\"2\n" +
	"\fBecomeTrader\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x12\n" +
	"\x04code\x18\x02 \x01(\x05R\x04code\"C\n" +
	"\x10Trader_ShowItems\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12\x1b\n" +
	"\ttrader_id\x18\x02 \x01(\x05R\btraderId\"\xcb\x01\n" +
	"\tTraderBuy\x12\x16\n" +
	"\x06action\x18\x01 \x01(\x05R\x06action\x12\x14\n" +
	"\x05price\x18\x02 \x01(\x05R\x05price\x12\x1b\n" +
	"\ttrader_id\x18\x03 \x01(\x05R\btraderId\x12\x1b\n" +
	"\titem_name\x18\x04 \x01(\tR\bitemName\x12\x17\n" +
	"\aitem_id\x18\x05 \x01(\x05R\x06itemId\x12!\n" +
	"\falready_sold\x18\x06 \x01(\x05R\valreadySold\x12\x1a\n" +
	"\bquantity\x18\a \x01(\x05R\bquantity\"|\n" +
	"\x10TraderItemUpdate\x12\x1a\n" +
	"\btraderid\x18\x01 \x01(\x05R\btraderid\x12\x1a\n" +
	"\bfromslot\x18\x02 \x01(\x05R\bfromslot\x12\x16\n" +
	"\x06toslot\x18\x03 \x01(\x05R\x06toslot\x12\x18\n" +
	"\acharges\x18\x04 \x01(\x05R\acharges\"m\n" +
	"\vMoneyUpdate\x12\x1a\n" +
	"\bplatinum\x18\x01 \x01(\x05R\bplatinum\x12\x12\n" +
	"\x04gold\x18\x02 \x01(\x05R\x04gold\x12\x16\n" +
	"\x06silver\x18\x03 \x01(\x05R\x06silver\x12\x16\n" +
	"\x06copper\x18\x04 \x01(\x05R\x06copper\"C\n" +
	"\rTraderDelItem\x12\x16\n" +
	"\x06slotid\x18\x01 \x01(\x05R\x06slotid\x12\x1a\n" +
	"\bquantity\x18\x02 \x01(\x05R\bquantity\"E\n" +
	"\vTraderClick\x12\x1a\n" +
	"\btraderid\x18\x01 \x01(\x05R\btraderid\x12\x1a\n" +
	"\bapproval\x18\x02 \x01(\x05R\bapproval\"]\n" +
	"\x10FormattedMessage\x12\x1b\n" +
	"\tstring_id\x18\x01 \x01(\x05R\bstringId\x12\x12\n" +
	"\x04type\x18\x02 \x01(\x05R\x04type\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"B\n" +
	"\rSimpleMessage\x12\x1b\n" +
	"\tstring_id\x18\x01 \x01(\x05R\bstringId\x12\x14\n" +
	"\x05color\x18\x02 \x01(\x05R\x05color\"\xf6\x02\n" +
	"\x10GuildMemberEntry\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05level\x18\x02 \x01(\x05R\x05level\x12\x16\n" +
	"\x06banker\x18\x03 \x01(\x05R\x06banker\x12\x1d\n" +
	"\n" +
	"char_class\x18\x04 \x01(\x05R\tcharClass\x12\x12\n" +
	"\x04rank\x18\x05 \x01(\x05R\x04rank\x12 \n" +
	"\ftime_last_on\x18\x06 \x01(\x05R\n" +
	"timeLastOn\x12%\n" +
	"\x0etribute_enable\x18\a \x01(\x05R\rtributeEnable\x12#\n" +
	"\rtotal_tribute\x18\b \x01(\x05R\ftotalTribute\x12!\n" +
	"\flast_tribute\x18\t \x01(\x05R\vlastTribute\x12\x1f\n" +
	"\vpublic_note\x18\n" +
	" \x01(\tR\n" +
	"publicNote\x12\"\n" +
	"\fzoneinstance\x18\v \x01(\x05R\fzoneinstance\x12\x17\n" +
	"\azone_id\x18\f \x01(\x05R\x06zoneId\"s\n" +
	"\fGuildMembers\x12\x1f\n" +
	"\vplayer_name\x18\x01 \x01(\tR\n" +
	"playerName\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x05R\x05count\x12,\n" +
	"\x06member\x18\x03 \x03(\v2\x14.eq.GuildMemberEntryR\x06member\"R\n" +
	"\tGuildMOTD\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1d\n" +
	"\n" +
	"setby_name\x18\x02 \x01(\tR\tsetbyName\x12\x12\n" +
	"\x04motd\x18\x03 \x01(\tR\x04motd\"X\n" +
	"\x16GuildUpdate_PublicNote\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x16\n" +
	"\x06target\x18\x02 \x01(\tR\x06target\x12\x12\n" +
	"\x04note\x18\x03 \x01(\tR\x04note\"9\n" +
	"\vGuildDemote\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x16\n" +
	"\x06target\x18\x02 \x01(\tR\x06target\"]\n" +
	"\vGuildRemove\x12\x16\n" +
	"\x06target\x18\x01 \x01(\tR\x06target\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\"\n" +
	"\fleaderstatus\x18\x03 \x01(\x05R\fleaderstatus\"=\n" +
	"\x0fGuildMakeLeader\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x16\n" +
	"\x06target\x18\x02 \x01(\tR\x06target\"\xe1\x01\n" +
	"\bMake_Pet\x12\x14\n" +
	"\x05level\x18\x01 \x01(\x05R\x05level\x12\x1d\n" +
	"\n" +
	"char_class\x18\x02 \x01(\x05R\tcharClass\x12\x12\n" +
	"\x04race\x18\x03 \x01(\x05R\x04race\x12\x18\n" +
	"\atexture\x18\x04 \x01(\x05R\atexture\x12\x18\n" +
	"\apettype\x18\x05 \x01(\x05R\apettype\x12\x12\n" +
	"\x04size\x18\x06 \x01(\x02R\x04size\x12\x12\n" +
	"\x04type\x18\a \x01(\x05R\x04type\x12\x17\n" +
	"\amin_dmg\x18\b \x01(\x05R\x06minDmg\x12\x17\n" +
	"\amax_dmg\x18\t \x01(\x05R\x06maxDmg\"\xfe\x01\n" +
	"\fGround_Spawn\x12\x13\n" +
	"\x05max_x\x18\x01 \x01(\x02R\x04maxX\x12\x13\n" +
	"\x05max_y\x18\x02 \x01(\x02R\x04maxY\x12\x13\n" +
	"\x05min_x\x18\x03 \x01(\x02R\x04minX\x12\x13\n" +
	"\x05min_y\x18\x04 \x01(\x02R\x04minY\x12\x13\n" +
	"\x05max_z\x18\x05 \x01(\x02R\x04maxZ\x12\x18\n" +
	"\aheading\x18\x06 \x01(\x02R\aheading\x12\x12\n" +
	"\x04name\x18\a \x01(\tR\x04name\x12\x12\n" +
	"\x04item\x18\b \x01(\x05R\x04item\x12\x1f\n" +
	"\vmax_allowed\x18\t \x01(\x05R\n" +
	"maxAllowed\x12\"\n" +
	"\frespawntimer\x18\n" +
	" \x01(\x05R\frespawntimer\"7\n" +
	"\rGround_Spawns\x12&\n" +
	"\x05spawn\x18\x01 \x03(\v2\x10.eq.Ground_SpawnR\x05spawn\"S\n" +
	"\vApproveZone\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x16\n" +
	"\x06zoneid\x18\x02 \x01(\x05R\x06zoneid\x12\x18\n" +
	"\aapprove\x18\x03 \x01(\x05R\aapprove\":\n" +
	"\x0eZoneInSendName\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05name2\x18\x02 \x01(\tR\x05name2\"%\n" +
	"\x0fZoneInSendName2\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"s\n" +
	"\fStartTribute\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\x05R\bclientId\x12*\n" +
	"\x11tribute_master_id\x18\x02 \x01(\x05R\x0ftributeMasterId\x12\x1a\n" +
	"\bresponse\x18\x03 \x01(\x05R\bresponse\"`\n" +
	"\fTributeLevel\x12\x14\n" +
	"\x05level\x18\x01 \x01(\x05R\x05level\x12&\n" +
	"\x0ftribute_item_id\x18\x02 \x01(\x05R\rtributeItemId\x12\x12\n" +
	"\x04cost\x18\x03 \x01(\x05R\x04cost\"\x8a\x01\n" +
	"\x0eTributeAbility\x12\x1d\n" +
	"\n" +
	"tribute_id\x18\x01 \x01(\x05R\ttributeId\x12\x1d\n" +
	"\n" +
	"tier_count\x18\x02 \x01(\x05R\ttierCount\x12&\n" +
	"\x05tiers\x18\x03 \x03(\v2\x10.eq.TributeLevelR\x05tiers\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\"^\n" +
	"\x13GuildTributeAbility\x12\x19\n" +
	"\bguild_id\x18\x01 \x01(\x05R\aguildId\x12,\n" +
	"\aability\x18\x02 \x01(\v2\x12.eq.TributeAbilityR\aability\"N\n" +
	"\x10SelectTributeReq\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\x05R\bclientId\x12\x1d\n" +
	"\n" +
	"tribute_id\x18\x02 \x01(\x05R\ttributeId\"d\n" +
	"\x12SelectTributeReply\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\x05R\bclientId\x12\x1d\n" +
	"\n" +
	"tribute_id\x18\x02 \x01(\x05R\ttributeId\x12\x12\n" +
	"\x04desc\x18\x03 \x01(\tR\x04desc\"\x83\x01\n" +
	"\vTributeInfo\x12\x16\n" +
	"\x06active\x18\x01 \x01(\x05R\x06active\x12\x1a\n" +
	"\btributes\x18\x02 \x03(\x05R\btributes\x12\x14\n" +
	"\x05tiers\x18\x03 \x03(\x05R\x05tiers\x12*\n" +
	"\x11tribute_master_id\x18\x04 \x01(\x05R\x0ftributeMasterId\"\x90\x01\n" +
	"\vTributeItem\x12\x12\n" +
	"\x04slot\x18\x01 \x01(\x05R\x04slot\x12\x1a\n" +
	"\bquantity\x18\x02 \x01(\x05R\bquantity\x12*\n" +
	"\x11tribute_master_id\x18\x03 \x01(\x05R\x0ftributeMasterId\x12%\n" +
	"\x0etribute_points\x18\x04 \x01(\x05R\rtributePoints\"i\n" +
	"\fTributePoint\x12%\n" +
	"\x0etribute_points\x18\x01 \x01(\x05R\rtributePoints\x122\n" +
	"\x15career_tribute_points\x18\x02 \x01(\x05R\x13careerTributePoints\"}\n" +
	"\fTributeMoney\x12\x1a\n" +
	"\bplatinum\x18\x01 \x01(\x05R\bplatinum\x12*\n" +
	"\x11tribute_master_id\x18\x02 \x01(\x05R\x0ftributeMasterId\x12%\n" +
	"\x0etribute_points\x18\x03 \x01(\x05R\rtributePoints\"g\n" +
	"\x05Split\x12\x1a\n" +
	"\bplatinum\x18\x01 \x01(\x05R\bplatinum\x12\x12\n" +
	"\x04gold\x18\x02 \x01(\x05R\x04gold\x12\x16\n" +
	"\x06silver\x18\x03 \x01(\x05R\x06silver\x12\x16\n" +
	"\x06copper\x18\x04 \x01(\x05R\x06copper\"`\n" +
	"\n" +
	"NewCombine\x12%\n" +
	"\x0econtainer_slot\x18\x01 \x01(\x05R\rcontainerSlot\x12+\n" +
	"\x11guildtribute_slot\x18\x02 \x01(\x05R\x10guildtributeSlot\"z\n" +
	"\x13TradeskillFavorites\x12\x1f\n" +
	"\vobject_type\x18\x01 \x01(\x05R\n" +
	"objectType\x12\x17\n" +
	"\asome_id\x18\x02 \x01(\x05R\x06someId\x12)\n" +
	"\x10favorite_recipes\x18\x03 \x03(\x05R\x0ffavoriteRecipes\"\x9f\x01\n" +
	"\rRecipesSearch\x12\x1f\n" +
	"\vobject_type\x18\x01 \x01(\x05R\n" +
	"objectType\x12\x17\n" +
	"\asome_id\x18\x02 \x01(\x05R\x06someId\x12\x1e\n" +
	"\n" +
	"mintrivial\x18\x03 \x01(\x05R\n" +
	"mintrivial\x12\x1e\n" +
	"\n" +
	"maxtrivial\x18\x04 \x01(\x05R\n" +
	"maxtrivial\x12\x14\n" +
	"\x05query\x18\x05 \x01(\tR\x05query\"\xc8\x01\n" +
	"\vRecipeReply\x12\x1f\n" +
	"\vobject_type\x18\x01 \x01(\x05R\n" +
	"objectType\x12\x17\n" +
	"\asome_id\x18\x02 \x01(\x05R\x06someId\x12'\n" +
	"\x0fcomponent_count\x18\x03 \x01(\x05R\x0ecomponentCount\x12\x1b\n" +
	"\trecipe_id\x18\x04 \x01(\x05R\brecipeId\x12\x18\n" +
	"\atrivial\x18\x05 \x01(\x05R\atrivial\x12\x1f\n" +
	"\vrecipe_name\x18\x06 \x01(\tR\n" +
	"recipeName\"\x89\x01\n" +
	"\x11RecipeAutoCombine\x12\x1f\n" +
	"\vobject_type\x18\x01 \x01(\x05R\n" +
	"objectType\x12\x17\n" +
	"\asome_id\x18\x02 \x01(\x05R\x06someId\x12\x1b\n" +
	"\trecipe_id\x18\x03 \x01(\x05R\brecipeId\x12\x1d\n" +
	"\n" +
	"reply_code\x18\x04 \x01(\x05R\treplyCode\"\x9e\x03\n" +
	"\x0fLevelAppearance\x12\x19\n" +
	"\bspawn_id\x18\x01 \x01(\x05R\aspawnId\x12\x14\n" +
	"\x05parm1\x18\x02 \x01(\x05R\x05parm1\x12\x18\n" +
	"\avalue1a\x18\x03 \x01(\x05R\avalue1a\x12\x18\n" +
	"\avalue1b\x18\x04 \x01(\x05R\avalue1b\x12\x14\n" +
	"\x05parm2\x18\x05 \x01(\x05R\x05parm2\x12\x18\n" +
	"\avalue2a\x18\x06 \x01(\x05R\avalue2a\x12\x18\n" +
	"\avalue2b\x18\a \x01(\x05R\avalue2b\x12\x14\n" +
	"\x05parm3\x18\b \x01(\x05R\x05parm3\x12\x18\n" +
	"\avalue3a\x18\t \x01(\x05R\avalue3a\x12\x18\n" +
	"\avalue3b\x18\n" +
	" \x01(\x05R\avalue3b\x12\x14\n" +
	"\x05parm4\x18\v \x01(\x05R\x05parm4\x12\x18\n" +
	"\avalue4a\x18\f \x01(\x05R\avalue4a\x12\x18\n" +
	"\avalue4b\x18\r \x01(\x05R\avalue4b\x12\x14\n" +
	"\x05parm5\x18\x0e \x01(\x05R\x05parm5\x12\x18\n" +
	"\avalue5a\x18\x0f \x01(\x05R\avalue5a\x12\x18\n" +
	"\avalue5b\x18\x10 \x01(\x05R\avalue5b\"F\n" +
	"\fMerchantList\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x12\n" +
	"\x04slot\x18\x02 \x01(\x05R\x04slot\x12\x12\n" +
	"\x04item\x18\x03 \x01(\x05R\x04item\"\x86\x01\n" +
	"\x10TempMerchantList\x12\x14\n" +
	"\x05npcid\x18\x01 \x01(\x05R\x05npcid\x12\x12\n" +
	"\x04slot\x18\x02 \x01(\x05R\x04slot\x12\x12\n" +
	"\x04item\x18\x03 \x01(\x05R\x04item\x12\x18\n" +
	"\acharges\x18\x04 \x01(\x05R\acharges\x12\x1a\n" +
	"\borigslot\x18\x05 \x01(\x05R\borigslot\"<\n" +
	"\x10FindPerson_Point\x12\f\n" +
	"\x01y\x18\x01 \x01(\x02R\x01y\x12\f\n" +
	"\x01x\x18\x02 \x01(\x02R\x01x\x12\f\n" +
	"\x01z\x18\x03 \x01(\x02R\x01z\"I\n" +
	"\x11FindPersonRequest\x12\x15\n" +
	"\x06npc_id\x18\x01 \x01(\x05R\x05npcId\x12\x1d\n" +
	"\n" +
	"client_pos\x18\x02 \x01(\x05R\tclientPos\":\n" +
	"\x10FindPersonResult\x12\x12\n" +
	"\x04dest\x18\x01 \x01(\x05R\x04dest\x12\x12\n" +
	"\x04path\x18\x02 \x03(\x05R\x04path\"g\n" +
	"\tMobRename\x12\x19\n" +
	"\bold_name\x18\x01 \x01(\tR\aoldName\x12$\n" +
	"\x0eold_name_again\x18\x02 \x01(\tR\foldNameAgain\x12\x19\n" +
	"\bnew_name\x18\x03 \x01(\tR\anewName\"%\n" +
	"\aPlayMP3\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\"^\n" +
	"\n" +
	"TitleEntry\x12\x19\n" +
	"\bskill_id\x18\x01 \x01(\x05R\askillId\x12\x1f\n" +
	"\vskill_value\x18\x02 \x01(\x05R\n" +
	"skillValue\x12\x14\n" +
	"\x05title\x18\x03 \x01(\tR\x05title\"F\n" +
	"\x06Titles\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x05R\x05count\x12&\n" +
	"\x06titles\x18\x02 \x03(\v2\x0e.eq.TitleEntryR\x06titles\"B\n" +
	"\x0eTitleListEntry\x12\x16\n" +
	"\x06prefix\x18\x01 \x01(\tR\x06prefix\x12\x18\n" +
	"\apostfix\x18\x02 \x01(\tR\apostfix\"M\n" +
	"\tTitleList\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x05R\x05count\x12*\n" +
	"\x06titles\x18\x02 \x03(\v2\x12.eq.TitleListEntryR\x06titles\"B\n" +
	"\bSetTitle\x12\x1b\n" +
	"\tis_suffix\x18\x01 \x01(\x05R\bisSuffix\x12\x19\n" +
	"\btitle_id\x18\x02 \x01(\x05R\atitleId\"_\n" +
	"\rSetTitleReply\x12\x1b\n" +
	"\tis_suffix\x18\x01 \x01(\x05R\bisSuffix\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x1b\n" +
	"\tentity_id\x18\x03 \x01(\x05R\bentityId\"\xde\x01\n" +
	"\x0fTaskDescription\x12%\n" +
	"\x0eactivity_count\x18\x01 \x01(\x05R\ractivityCount\x12\x16\n" +
	"\x06taskid\x18\x02 \x01(\x05R\x06taskid\x12\x10\n" +
	"\x03unk\x18\x03 \x01(\x05R\x03unk\x12\x0e\n" +
	"\x02id\x18\x04 \x01(\x05R\x02id\x12\x12\n" +
	"\x04name\x18\x05 \x01(\tR\x04name\x12\x12\n" +
	"\x04desc\x18\x06 \x01(\tR\x04desc\x12!\n" +
	"\freward_count\x18\a \x01(\x05R\vrewardCount\x12\x1f\n" +
	"\vreward_link\x18\b \x01(\tR\n" +
	"rewardLink\"s\n" +
	"\x0eTaskMemberList\x12\x1b\n" +
	"\tgopher_id\x18\x01 \x01(\x05R\bgopherId\x12!\n" +
	"\fmember_count\x18\x02 \x01(\x05R\vmemberCount\x12!\n" +
	"\flist_pointer\x18\x03 \x01(\tR\vlistPointer\"\xbe\x02\n" +
	"\fTaskActivity\x12%\n" +
	"\x0eactivity_count\x18\x01 \x01(\x05R\ractivityCount\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\x05R\x02id\x12\x16\n" +
	"\x06taskid\x18\x03 \x01(\x05R\x06taskid\x12\x1f\n" +
	"\vactivity_id\x18\x04 \x01(\x05R\n" +
	"activityId\x12#\n" +
	"\ractivity_type\x18\x05 \x01(\x05R\factivityType\x12\x19\n" +
	"\bmob_name\x18\x06 \x01(\tR\amobName\x12\x1b\n" +
	"\titem_name\x18\a \x01(\tR\bitemName\x12\x1d\n" +
	"\n" +
	"goal_count\x18\b \x01(\x05R\tgoalCount\x12#\n" +
	"\ractivity_name\x18\t \x01(\tR\factivityName\x12\x1d\n" +
	"\n" +
	"done_count\x18\n" +
	" \x01(\x05R\tdoneCount\"f\n" +
	"\x10TaskHistoryEntry\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\x05R\x06taskId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12%\n" +
	"\x0ecompleted_time\x18\x03 \x01(\x05R\rcompletedTime\"S\n" +
	"\vTaskHistory\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x05R\x05count\x12.\n" +
	"\aentries\x18\x02 \x03(\v2\x14.eq.TaskHistoryEntryR\aentries\"N\n" +
	"\rAcceptNewTask\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\x05R\x06taskId\x12$\n" +
	"\x0etask_master_id\x18\x02 \x01(\x05R\ftaskMasterId\"\f\n" +
	"\n" +
	"CancelTask\"\xd9\x02\n" +
	"\rAvaliableTask\x12\x1d\n" +
	"\n" +
	"task_index\x18\x01 \x01(\x05R\ttaskIndex\x12$\n" +
	"\x0etask_master_id\x18\x02 \x01(\x05R\ftaskMasterId\x12\x17\n" +
	"\atask_id\x18\x03 \x01(\x05R\x06taskId\x12%\n" +
	"\x0eactivity_count\x18\x04 \x01(\x05R\ractivityCount\x12\x12\n" +
	"\x04desc\x18\x05 \x01(\tR\x04desc\x12'\n" +
	"\x0freward_platinum\x18\x06 \x01(\x05R\x0erewardPlatinum\x12\x1f\n" +
	"\vreward_gold\x18\a \x01(\x05R\n" +
	"rewardGold\x12#\n" +
	"\rreward_silver\x18\b \x01(\x05R\frewardSilver\x12#\n" +
	"\rreward_copper\x18\t \x01(\x05R\frewardCopper\x12\x1b\n" +
	"\tsome_name\x18\n" +
	" \x01(\tR\bsomeName\"\xf2\x01\n" +
	"\fBankerChange\x12\x1a\n" +
	"\bplatinum\x18\x01 \x01(\x05R\bplatinum\x12\x12\n" +
	"\x04gold\x18\x02 \x01(\x05R\x04gold\x12\x16\n" +
	"\x06silver\x18\x03 \x01(\x05R\x06silver\x12\x16\n" +
	"\x06copper\x18\x04 \x01(\x05R\x06copper\x12#\n" +
	"\rplatinum_bank\x18\x05 \x01(\x05R\fplatinumBank\x12\x1b\n" +
	"\tgold_bank\x18\x06 \x01(\x05R\bgoldBank\x12\x1f\n" +
	"\vsilver_bank\x18\a \x01(\x05R\n" +
	"silverBank\x12\x1f\n" +
	"\vcopper_bank\x18\b \x01(\x05R\n" +
	"copperBank\"\xe5\x01\n" +
	"\x13LeadershipExpUpdate\x120\n" +
	"\x14group_leadership_exp\x18\x01 \x01(\x01R\x12groupLeadershipExp\x126\n" +
	"\x17group_leadership_points\x18\x02 \x01(\x05R\x15groupLeadershipPoints\x12.\n" +
	"\x13raid_leadership_exp\x18\x03 \x01(\x01R\x11raidLeadershipExp\x124\n" +
	"\x16raid_leadership_points\x18\x04 \x01(\x05R\x14raidLeadershipPoints\"n\n" +
	"\x12UpdateLeadershipAA\x12\x1d\n" +
	"\n" +
	"ability_id\x18\x01 \x01(\x05R\tabilityId\x12\x19\n" +
	"\bnew_rank\x18\x02 \x01(\x05R\anewRank\x12\x1e\n" +
	"\n" +
	"pointsleft\x18\x03 \x01(\x05R\n" +
	"pointsleft\"\xdf\x01\n" +
	"\rLeadExpUpdate\x120\n" +
	"\x14group_leadership_exp\x18\x01 \x01(\x05R\x12groupLeadershipExp\x126\n" +
	"\x17group_leadership_points\x18\x02 \x01(\x05R\x15groupLeadershipPoints\x12.\n" +
	"\x13raid_leadership_exp\x18\x03 \x01(\x05R\x11raidLeadershipExp\x124\n" +
	"\x16raid_leadership_points\x18\x04 \x01(\x05R\x14raidLeadershipPoints\"\x85\x01\n" +
	"\vRaidGeneral\x12\x16\n" +
	"\x06action\x18\x01 \x01(\x05R\x06action\x12\x1f\n" +
	"\vplayer_name\x18\x02 \x01(\tR\n" +
	"playerName\x12\x1f\n" +
	"\vleader_name\x18\x03 \x01(\tR\n" +
	"leaderName\x12\x1c\n" +
	"\tparameter\x18\x04 \x01(\x05R\tparameter\"\x98\x01\n" +
	"\rRaidAddMember\x12*\n" +
	"\braid_gen\x18\x01 \x01(\v2\x0f.eq.RaidGeneralR\araidGen\x12\x1d\n" +
	"\n" +
	"char_class\x18\x02 \x01(\x05R\tcharClass\x12\x14\n" +
	"\x05level\x18\x03 \x01(\x05R\x05level\x12&\n" +
	"\x0fis_group_leader\x18\x04 \x01(\x05R\risGroupLeader\"I\n" +
	"\bRaidNote\x12)\n" +
	"\ageneral\x18\x01 \x01(\v2\x0f.eq.RaidGeneralR\ageneral\x12\x12\n" +
	"\x04note\x18\x02 \x01(\tR\x04note\"I\n" +
	"\bRaidMOTD\x12)\n" +
	"\ageneral\x18\x01 \x01(\v2\x0f.eq.RaidGeneralR\ageneral\x12\x12\n" +
	"\x04motd\x18\x02 \x01(\tR\x04motd\"\xc7\x01\n" +
	"\x14RaidLeadershipUpdate\x12\x16\n" +
	"\x06action\x18\x01 \x01(\x05R\x06action\x12\x1f\n" +
	"\vplayer_name\x18\x02 \x01(\tR\n" +
	"playerName\x12\x1f\n" +
	"\vleader_name\x18\x03 \x01(\tR\n" +
	"leaderName\x12+\n" +
	"\x05group\x18\x04 \x01(\v2\x15.eq.GroupLeadershipAAR\x05group\x12(\n" +
	"\x04raid\x18\x05 \x01(\v2\x14.eq.RaidLeadershipAAR\x04raid\"b\n" +
	"\n" +
	"RaidCreate\x12\x16\n" +
	"\x06action\x18\x01 \x01(\x05R\x06action\x12\x1f\n" +
	"\vleader_name\x18\x02 \x01(\tR\n" +
	"leaderName\x12\x1b\n" +
	"\tleader_id\x18\x03 \x01(\x05R\bleaderId\"\xf4\x01\n" +
	"\x0eRaidMemberInfo\x12!\n" +
	"\fgroup_number\x18\x01 \x01(\x05R\vgroupNumber\x12\x1f\n" +
	"\vmember_name\x18\x02 \x01(\tR\n" +
	"memberName\x12\x1d\n" +
	"\n" +
	"char_class\x18\x03 \x01(\x05R\tcharClass\x12\x14\n" +
	"\x05level\x18\x04 \x01(\x05R\x05level\x12$\n" +
	"\x0eis_raid_leader\x18\x05 \x01(\x05R\fisRaidLeader\x12&\n" +
	"\x0fis_group_leader\x18\x06 \x01(\x05R\risGroupLeader\x12\x1b\n" +
	"\tmain_tank\x18\a \x01(\x05R\bmainTank\"\x93\x01\n" +
	"\vRaidDetails\x12\x16\n" +
	"\x06action\x18\x01 \x01(\x05R\x06action\x12\x1f\n" +
	"\vleader_name\x18\x02 \x01(\tR\n" +
	"leaderName\x12.\n" +
	"\tabilities\x18\x03 \x01(\v2\x10.eq.LeadershipAAR\tabilities\x12\x1b\n" +
	"\tleader_id\x18\x04 \x01(\x05R\bleaderId\"\xb3\x01\n" +
	"\vRaidMembers\x12)\n" +
	"\adetails\x18\x01 \x01(\v2\x0f.eq.RaidDetailsR\adetails\x12!\n" +
	"\fmember_count\x18\x02 \x01(\x05R\vmemberCount\x12,\n" +
	"\amembers\x18\x03 \x03(\v2\x12.eq.RaidMemberInfoR\amembers\x12(\n" +
	"\x05empty\x18\x04 \x01(\v2\x12.eq.RaidMemberInfoR\x05empty\"l\n" +
	"\vDynamicWall\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\f\n" +
	"\x01y\x18\x02 \x01(\x02R\x01y\x12\f\n" +
	"\x01x\x18\x03 \x01(\x02R\x01x\x12\f\n" +
	"\x01z\x18\x04 \x01(\x02R\x01z\x12\x1f\n" +
	"\vone_hundred\x18\x05 \x01(\x05R\n" +
	"oneHundred\"U\n" +
	"\x0fBandolierCreate\x12\x16\n" +
	"\x06action\x18\x01 \x01(\x05R\x06action\x12\x16\n" +
	"\x06number\x18\x02 \x01(\x05R\x06number\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\"A\n" +
	"\x0fBandolierDelete\x12\x16\n" +
	"\x06action\x18\x01 \x01(\x05R\x06action\x12\x16\n" +
	"\x06number\x18\x02 \x01(\x05R\x06number\">\n" +
	"\fBandolierSet\x12\x16\n" +
	"\x06action\x18\x01 \x01(\x05R\x06action\x12\x16\n" +
	"\x06number\x18\x02 \x01(\x05R\x06number\"\xb1\x02\n" +
	"\x05Arrow\x12\x12\n" +
	"\x04type\x18\x01 \x01(\x05R\x04type\x12\x13\n" +
	"\x05src_y\x18\x02 \x01(\x02R\x04srcY\x12\x13\n" +
	"\x05src_x\x18\x03 \x01(\x02R\x04srcX\x12\x13\n" +
	"\x05src_z\x18\x04 \x01(\x02R\x04srcZ\x12\x1a\n" +
	"\bvelocity\x18\x05 \x01(\x02R\bvelocity\x12!\n" +
	"\flaunch_angle\x18\x06 \x01(\x02R\vlaunchAngle\x12\x12\n" +
	"\x04tilt\x18\a \x01(\x02R\x04tilt\x12\x10\n" +
	"\x03arc\x18\b \x01(\x02R\x03arc\x12\x1b\n" +
	"\tsource_id\x18\t \x01(\x05R\bsourceId\x12\x1b\n" +
	"\ttarget_id\x18\n" +
	" \x01(\x05R\btargetId\x12\x17\n" +
	"\aitem_id\x18\v \x01(\x05R\x06itemId\x12\x1d\n" +
	"\n" +
	"model_name\x18\f \x01(\tR\tmodelName\"\x1d\n" +
	"\aConsent\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"0\n" +
	"\x11AdventureMerchant\x12\x1b\n" +
	"\tentity_id\x18\x01 \x01(\x05R\bentityId\"\x06\n" +
	"\x04Save\"\"\n" +
	"\bGMtoggle\x12\x16\n" +
	"\x06toggle\x18\x01 \x01(\x05R\x06toggle\"S\n" +
	"\vGroupInvite\x12!\n" +
	"\finvitee_name\x18\x01 \x01(\tR\vinviteeName\x12!\n" +
	"\finviter_name\x18\x02 \x01(\tR\vinviterName\"5\n" +
	"\vColoredText\x12\x14\n" +
	"\x05color\x18\x01 \x01(\x05R\x05color\x12\x10\n" +
	"\x03msg\x18\x02 \x01(\tR\x03msg\"I\n" +
	"\x05UseAA\x12\x14\n" +
	"\x05begin\x18\x01 \x01(\x05R\x05begin\x12\x18\n" +
	"\aability\x18\x02 \x01(\x05R\aability\x12\x10\n" +
	"\x03end\x18\x03 \x01(\x05R\x03end\"{\n" +
	"\n" +
	"AA_Ability\x12\x19\n" +
	"\bskill_id\x18\x01 \x01(\x05R\askillId\x12\x1d\n" +
	"\n" +
	"base_value\x18\x02 \x01(\x05R\tbaseValue\x12\x1f\n" +
	"\vlimit_value\x18\x03 \x01(\x05R\n" +
	"limitValue\x12\x12\n" +
	"\x04slot\x18\x04 \x01(\x05R\x04slot\"\xfd\x04\n" +
	"\x06SendAA\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x1d\n" +
	"\n" +
	"hotkey_sid\x18\x02 \x01(\x05R\thotkeySid\x12\x1f\n" +
	"\vhotkey_sid2\x18\x03 \x01(\x05R\n" +
	"hotkeySid2\x12\x1b\n" +
	"\ttitle_sid\x18\x04 \x01(\x05R\btitleSid\x12\x19\n" +
	"\bdesc_sid\x18\x05 \x01(\x05R\adescSid\x12\x1d\n" +
	"\n" +
	"class_type\x18\x06 \x01(\x05R\tclassType\x12\x12\n" +
	"\x04cost\x18\a \x01(\x05R\x04cost\x12\x10\n" +
	"\x03seq\x18\b \x01(\x05R\x03seq\x12#\n" +
	"\rcurrent_level\x18\t \x01(\x05R\fcurrentLevel\x12!\n" +
	"\fprereq_skill\x18\n" +
	" \x01(\x05R\vprereqSkill\x12)\n" +
	"\x10prereq_minpoints\x18\v \x01(\x05R\x0fprereqMinpoints\x12\x12\n" +
	"\x04type\x18\f \x01(\x05R\x04type\x12\x18\n" +
	"\aspellid\x18\r \x01(\x05R\aspellid\x12\x1d\n" +
	"\n" +
	"spell_type\x18\x0e \x01(\x05R\tspellType\x12#\n" +
	"\rspell_refresh\x18\x0f \x01(\x05R\fspellRefresh\x12\x18\n" +
	"\aclasses\x18\x10 \x01(\x05R\aclasses\x12\x1b\n" +
	"\tmax_level\x18\x11 \x01(\x05R\bmaxLevel\x12\x17\n" +
	"\alast_id\x18\x12 \x01(\x05R\x06lastId\x12\x17\n" +
	"\anext_id\x18\x13 \x01(\x05R\x06nextId\x12\x14\n" +
	"\x05cost2\x18\x14 \x01(\x05R\x05cost2\x12\x14\n" +
	"\x05count\x18\x15 \x01(\x05R\x05count\x12,\n" +
	"\tabilities\x18\x16 \x03(\v2\x0e.eq.AA_AbilityR\tabilities\";\n" +
	"\aAA_List\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x05R\x05count\x12\x1a\n" +
	"\x02aa\x18\x02 \x03(\v2\n" +
	".eq.SendAAR\x02aa\"w\n" +
	"\tAA_Action\x12\x16\n" +
	"\x06action\x18\x01 \x01(\x05R\x06action\x12\x18\n" +
	"\aability\x18\x02 \x01(\x05R\aability\x12\x1b\n" +
	"\ttarget_id\x18\x03 \x01(\x05R\btargetId\x12\x1b\n" +
	"\texp_value\x18\x04 \x01(\x05R\bexpValue\"[\n" +
	"\vAAExpUpdate\x12)\n" +
	"\x10aapoints_unspent\x18\x01 \x01(\x05R\x0faapointsUnspent\x12!\n" +
	"\faaxp_percent\x18\x02 \x01(\x05R\vaaxpPercent\"g\n" +
	"\vAltAdvStats\x12\x1e\n" +
	"\n" +
	"experience\x18\x01 \x01(\x05R\n" +
	"experience\x12\x18\n" +
	"\aunspent\x18\x02 \x01(\x05R\aunspent\x12\x1e\n" +
	"\n" +
	"percentage\x18\x03 \x01(\x05R\n" +
	"percentage\"1\n" +
	"\bPlayerAA\x12%\n" +
	"\aaa_list\x18\x01 \x03(\v2\f.eq.AA_ArrayR\x06aaList\"0\n" +
	"\aAATable\x12%\n" +
	"\aaa_list\x18\x01 \x03(\v2\f.eq.AA_ArrayR\x06aaList\"C\n" +
	"\aWeather\x12\x10\n" +
	"\x03val\x18\x01 \x01(\x05R\x03val\x12\x12\n" +
	"\x04type\x18\x02 \x01(\x05R\x04type\x12\x12\n" +
	"\x04mode\x18\x03 \x01(\x05R\x04mode\"$\n" +
	"\fLoadSpellSet\x12\x14\n" +
	"\x05spell\x18\x01 \x03(\x05R\x05spell\"N\n" +
	"\vApplyPoison\x12%\n" +
	"\x0einventory_slot\x18\x01 \x01(\x05R\rinventorySlot\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\x05R\asuccess\"\x89\x01\n" +
	"\x11GuildMemberUpdate\x12\x19\n" +
	"\bguild_id\x18\x01 \x01(\x05R\aguildId\x12\x1f\n" +
	"\vmember_name\x18\x02 \x01(\tR\n" +
	"memberName\x12\x17\n" +
	"\azone_id\x18\x03 \x01(\x05R\x06zoneId\x12\x1f\n" +
	"\vinstance_id\x18\x04 \x01(\x05R\n" +
	"instanceId\"I\n" +
	"\x11VeteranRewardItem\x12\x17\n" +
	"\aitem_id\x18\x01 \x01(\x05R\x06itemId\x12\x1b\n" +
	"\titem_name\x18\x02 \x01(\tR\bitemName\"U\n" +
	"\rVeteranReward\x12\x19\n" +
	"\bclaim_id\x18\x01 \x01(\x05R\aclaimId\x12)\n" +
	"\x04item\x18\x02 \x01(\v2\x15.eq.VeteranRewardItemR\x04item\"\x92\x02\n" +
	"\x10ExpeditionInvite\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\x05R\bclientId\x12!\n" +
	"\finviter_name\x18\x02 \x01(\tR\vinviterName\x12'\n" +
	"\x0fexpedition_name\x18\x03 \x01(\tR\x0eexpeditionName\x12\x1a\n" +
	"\bswapping\x18\x04 \x01(\x05R\bswapping\x12\x1b\n" +
	"\tswap_name\x18\x05 \x01(\tR\bswapName\x12\x18\n" +
	"\apadding\x18\x06 \x03(\x05R\apadding\x12\x1c\n" +
	"\n" +
	"dz_zone_id\x18\a \x01(\x05R\bdzZoneId\x12$\n" +
	"\x0edz_instance_id\x18\b \x01(\x05R\fdzInstanceId\"\xb3\x01\n" +
	"\x18ExpeditionInviteResponse\x12\x1c\n" +
	"\n" +
	"dz_zone_id\x18\x01 \x01(\x05R\bdzZoneId\x12$\n" +
	"\x0edz_instance_id\x18\x02 \x01(\x05R\fdzInstanceId\x12\x1a\n" +
	"\baccepted\x18\x03 \x01(\x05R\baccepted\x12\x1a\n" +
	"\bswapping\x18\x04 \x01(\x05R\bswapping\x12\x1b\n" +
	"\tswap_name\x18\x05 \x01(\tR\bswapName\"\xa5\x01\n" +
	"\x0fDynamicZoneInfo\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\x05R\bclientId\x12\x1a\n" +
	"\bassigned\x18\x02 \x01(\x05R\bassigned\x12\x1f\n" +
	"\vmax_players\x18\x03 \x01(\x05R\n" +
	"maxPlayers\x12\x17\n" +
	"\adz_name\x18\x04 \x01(\tR\x06dzName\x12\x1f\n" +
	"\vleader_name\x18\x05 \x01(\tR\n" +
	"leaderName\"Q\n" +
	"\x16DynamicZoneMemberEntry\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12#\n" +
	"\ronline_status\x18\x02 \x01(\x05R\fonlineStatus\"\x80\x01\n" +
	"\x15DynamicZoneMemberList\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\x05R\bclientId\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x05R\x05count\x124\n" +
	"\amembers\x18\x03 \x03(\v2\x1a.eq.DynamicZoneMemberEntryR\amembers\"g\n" +
	"\x19DynamicZoneMemberListName\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\x05R\bclientId\x12\x19\n" +
	"\badd_name\x18\x02 \x01(\x05R\aaddName\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\"\xb1\x01\n" +
	"\x1bExpeditionLockoutTimerEntry\x12'\n" +
	"\x0fexpedition_name\x18\x01 \x01(\tR\x0eexpeditionName\x12+\n" +
	"\x11seconds_remaining\x18\x02 \x01(\x05R\x10secondsRemaining\x12\x1d\n" +
	"\n" +
	"event_type\x18\x03 \x01(\x05R\teventType\x12\x1d\n" +
	"\n" +
	"event_name\x18\x04 \x01(\tR\teventName\"\x85\x01\n" +
	"\x17ExpeditionLockoutTimers\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\x05R\bclientId\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x05R\x05count\x127\n" +
	"\x06timers\x18\x03 \x03(\v2\x1f.eq.ExpeditionLockoutTimerEntryR\x06timers\"U\n" +
	"\x15DynamicZoneLeaderName\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\x05R\bclientId\x12\x1f\n" +
	"\vleader_name\x18\x02 \x01(\tR\n" +
	"leaderName\"'\n" +
	"\x11ExpeditionCommand\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"g\n" +
	"\x15ExpeditionCommandSwap\x12&\n" +
	"\x0fadd_player_name\x18\x01 \x01(\tR\raddPlayerName\x12&\n" +
	"\x0frem_player_name\x18\x02 \x01(\tR\rremPlayerName\"c\n" +
	"\x17ExpeditionExpireWarning\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\x05R\bclientId\x12+\n" +
	"\x11minutes_remaining\x18\x02 \x01(\x05R\x10minutesRemaining\"\xc2\x01\n" +
	"\x17DynamicZoneCompassEntry\x12\x1c\n" +
	"\n" +
	"dz_zone_id\x18\x01 \x01(\x05R\bdzZoneId\x12$\n" +
	"\x0edz_instance_id\x18\x02 \x01(\x05R\fdzInstanceId\x12\x17\n" +
	"\adz_type\x18\x03 \x01(\x05R\x06dzType\x12 \n" +
	"\fdz_switch_id\x18\x04 \x01(\x05R\n" +
	"dzSwitchId\x12\f\n" +
	"\x01y\x18\x05 \x01(\x02R\x01y\x12\f\n" +
	"\x01x\x18\x06 \x01(\x02R\x01x\x12\f\n" +
	"\x01z\x18\a \x01(\x02R\x01z\"~\n" +
	"\x12DynamicZoneCompass\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\x05R\bclientId\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x05R\x05count\x125\n" +
	"\aentries\x18\x03 \x03(\v2\x1b.eq.DynamicZoneCompassEntryR\aentries\"\xbc\x01\n" +
	"\x1aDynamicZoneChooseZoneEntry\x12\x1c\n" +
	"\n" +
	"dz_zone_id\x18\x01 \x01(\x05R\bdzZoneId\x12$\n" +
	"\x0edz_instance_id\x18\x02 \x01(\x05R\fdzInstanceId\x12\x17\n" +
	"\adz_type\x18\x03 \x01(\x05R\x06dzType\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x1f\n" +
	"\vleader_name\x18\x05 \x01(\tR\n" +
	"leaderName\"\x84\x01\n" +
	"\x15DynamicZoneChooseZone\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\x05R\bclientId\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x05R\x05count\x128\n" +
	"\achoices\x18\x03 \x03(\v2\x1e.eq.DynamicZoneChooseZoneEntryR\achoices\"y\n" +
	"\x1aDynamicZoneChooseZoneReply\x12\x1c\n" +
	"\n" +
	"dz_zone_id\x18\x01 \x01(\x05R\bdzZoneId\x12$\n" +
	"\x0edz_instance_id\x18\x02 \x01(\x05R\fdzInstanceId\x12\x17\n" +
	"\adz_type\x18\x03 \x01(\x05R\x06dzType\"\xb8\x01\n" +
	"\x14LFGuild_SearchPlayer\x12\x18\n" +
	"\acommand\x18\x01 \x01(\x05R\acommand\x12\x1d\n" +
	"\n" +
	"from_level\x18\x02 \x01(\x05R\tfromLevel\x12\x19\n" +
	"\bto_level\x18\x03 \x01(\x05R\atoLevel\x12\x15\n" +
	"\x06min_aa\x18\x04 \x01(\x05R\x05minAa\x12\x1b\n" +
	"\ttime_zone\x18\x05 \x01(\x05R\btimeZone\x12\x18\n" +
	"\aclasses\x18\x06 \x01(\x05R\aclasses\"\x9e\x01\n" +
	"\x13LFGuild_SearchGuild\x12\x18\n" +
	"\acommand\x18\x01 \x01(\x05R\acommand\x12\x14\n" +
	"\x05level\x18\x02 \x01(\x05R\x05level\x12\x1b\n" +
	"\taa_points\x18\x03 \x01(\x05R\baaPoints\x12\x1b\n" +
	"\ttime_zone\x18\x04 \x01(\x05R\btimeZone\x12\x1d\n" +
	"\n" +
	"char_class\x18\x05 \x01(\x05R\tcharClass\"\x99\x01\n" +
	"\x14LFGuild_Playertoggle\x12\x18\n" +
	"\acommand\x18\x01 \x01(\x05R\acommand\x12\x18\n" +
	"\acomment\x18\x02 \x01(\tR\acomment\x12\x1b\n" +
	"\ttime_zone\x18\x03 \x01(\x05R\btimeZone\x12\x16\n" +
	"\x06toggle\x18\x04 \x01(\x05R\x06toggle\x12\x18\n" +
	"\aexpires\x18\x05 \x01(\x05R\aexpires\"\x9b\x02\n" +
	"\x13LFGuild_Guildtoggle\x12\x18\n" +
	"\acommand\x18\x01 \x01(\x05R\acommand\x12\x18\n" +
	"\acomment\x18\x02 \x01(\tR\acomment\x12\x1d\n" +
	"\n" +
	"from_level\x18\x03 \x01(\x05R\tfromLevel\x12\x19\n" +
	"\bto_level\x18\x04 \x01(\x05R\atoLevel\x12\x18\n" +
	"\aclasses\x18\x05 \x01(\x05R\aclasses\x12\x19\n" +
	"\baa_count\x18\x06 \x01(\x05R\aaaCount\x12\x1b\n" +
	"\ttime_zone\x18\a \x01(\x05R\btimeZone\x12\x16\n" +
	"\x06toggle\x18\b \x01(\x05R\x06toggle\x12\x18\n" +
	"\aexpires\x18\t \x01(\x05R\aexpires\x12\x12\n" +
	"\x04name\x18\n" +
	" \x01(\tR\x04name\"\xcf\x02\n" +
	"\x10SayLinkBodyFrame\x12\x1b\n" +
	"\taction_id\x18\x01 \x01(\tR\bactionId\x12\x17\n" +
	"\aitem_id\x18\x02 \x01(\tR\x06itemId\x12\x1a\n" +
	"\baugment1\x18\x03 \x01(\tR\baugment1\x12\x1a\n" +
	"\baugment2\x18\x04 \x01(\tR\baugment2\x12\x1a\n" +
	"\baugment3\x18\x05 \x01(\tR\baugment3\x12\x1a\n" +
	"\baugment4\x18\x06 \x01(\tR\baugment4\x12\x1a\n" +
	"\baugment5\x18\a \x01(\tR\baugment5\x12\x1f\n" +
	"\vis_evolving\x18\b \x01(\tR\n" +
	"isEvolving\x12!\n" +
	"\fevolve_group\x18\t \x01(\tR\vevolveGroup\x12!\n" +
	"\fevolve_level\x18\n" +
	" \x01(\tR\vevolveLevel\x12\x12\n" +
	"\x04hash\x18\v \x01(\tR\x04hash\"B\n" +
	"\bWebLogin\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x02 \x01(\tR\bpassword\"3\n" +
	"\x15WebLoginServerRequest\x12\x1a\n" +
	"\bsequence\x18\x01 \x01(\x05R\bsequence\"\xc6\x01\n" +
	"\rWebLoginReply\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12 \n" +
	"\ferror_str_id\x18\x02 \x01(\x05R\n" +
	"errorStrId\x12'\n" +
	"\x0ffailed_attempts\x18\x03 \x01(\x05R\x0efailedAttempts\x12\x12\n" +
	"\x04lsid\x18\x04 \x01(\x05R\x04lsid\x12\x18\n" +
	"\asuccess\x18\x05 \x01(\bR\asuccess\x12*\n" +
	"\x11show_player_count\x18\x06 \x01(\bR\x0fshowPlayerCount\"\x9f\x02\n" +
	"\x13WebLoginWorldServer\x12\x16\n" +
	"\x06buffer\x18\x01 \x01(\tR\x06buffer\x12\x0e\n" +
	"\x02ip\x18\x02 \x01(\tR\x02ip\x12\x1b\n" +
	"\tlong_name\x18\x03 \x01(\tR\blongName\x12!\n" +
	"\fcountry_code\x18\x04 \x01(\tR\vcountryCode\x12#\n" +
	"\rlanguage_code\x18\x05 \x01(\tR\flanguageCode\x12\x1f\n" +
	"\vserver_type\x18\x06 \x01(\x05R\n" +
	"serverType\x12\x1b\n" +
	"\tserver_id\x18\a \x01(\x05R\bserverId\x12\x16\n" +
	"\x06status\x18\b \x01(\x05R\x06status\x12%\n" +
	"\x0eplayers_online\x18\t \x01(\x05R\rplayersOnline\"n\n" +
	"\x16WebLoginServerResponse\x12!\n" +
	"\fserver_count\x18\x01 \x01(\x05R\vserverCount\x121\n" +
	"\aservers\x18\x02 \x03(\v2\x17.eq.WebLoginWorldServerR\aservers\"6\n" +
	"\x17WebPlayEverquestRequest\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\x05R\bserverId\"s\n" +
	"\x18WebPlayEverquestResponse\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\x05R\bserverId\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12 \n" +
	"\ferror_str_id\x18\x03 \x01(\x05R\n" +
	"errorStrId\"k\n" +
	"\n" +
	"WebSession\x12\x1f\n" +
	"\vremote_addr\x18\x01 \x01(\tR\n" +
	"remoteAddr\x12\x1b\n" +
	"\tremote_ip\x18\x02 \x01(\x05R\bremoteIp\x12\x1f\n" +
	"\vremote_port\x18\x03 \x01(\x05R\n" +
	"remotePort\"\x06\n" +
	"\x04Zero\"\x1b\n" +
	"\x03Int\x12\x14\n" +
	"\x05value\x18\x01 \x01(\x05R\x05value\"\x1c\n" +
	"\x04Bool\x12\x14\n" +
	"\x05value\x18\x01 \x01(\bR\x05value\"\x1e\n" +
	"\x06String\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value*\xf2\x01\n" +
	"\x0eItemPacketType\x12\x16\n" +
	"\x12ItemPacketViewLink\x10\x00\x12\x17\n" +
	"\x13ItemPacketTradeView\x10e\x12\x12\n" +
	"\x0eItemPacketLoot\x10f\x12\x13\n" +
	"\x0fItemPacketTrade\x10g\x12\x1b\n" +
	"\x17ItemPacketCharInventory\x10i\x12\x18\n" +
	"\x14ItemPacketSummonItem\x10j\x12\x19\n" +
	"\x15ItemPacketTributeItem\x10l\x12\x16\n" +
	"\x12ItemPacketMerchant\x10d\x12\x1c\n" +
	"\x18ItemPacketWorldContainer\x10\x06*ԛ\x01\n" +
	"\aOpCodes\x12\x0e\n" +
	"\n" +
	"OP_Unknown\x10\x00\x12%\n" +
	"\vOP_LoginWeb\x10\xb0\x02\x1a\x13\xa2\x99\x02\x0feq.LoginMessage\x12(\n" +
	"\x10OP_LoginAccepted\x10\xb1\x02\x1a\x11\xa2\x99\x02\req.LoginReply\x122\n" +
	"\x17OP_PlayEverquestRequest\x10\x81\x03\x1a\x14\xa2\x99\x02\x10eq.PlayEverquest\x12;\n" +
	"\x18OP_PlayEverquestResponse\x10\x82\x03\x1a\x1c\xa2\x99\x02\x18eq.PlayEverquestResponse\x12.\n" +
	"\x14OP_ServerListRequest\x10\xca\x03\x1a\x13\xa2\x99\x02\x0feq.LoginRequest\x126\n" +
	"\x15OP_ServerListResponse\x10\xcb\x03\x1a\x1a\xa2\x99\x02\x16eq.LoginServerResponse\x12&\n" +
	"\x0eOP_ApproveName\x10(\x1a\x12\xa2\x99\x02\x0eeq.NameApprove\x12)\n" +
	"\x12OP_CharacterCreate\x10M\x1a\x11\xa2\x99\x02\req.CharCreate\x12%\n" +
	"\x12OP_DeleteCharacter\x10w\x1a\r\xa2\x99\x02\teq.String\x12&\n" +
	"\x15OP_ApproveName_Server\x10\xb0'\x1a\n" +
	"\xa2\x99\x02\x06eq.Int\x12%\n" +
	"\rOP_EnterWorld\x10\xa0\x01\x1a\x11\xa2\x99\x02\req.EnterWorld\x12!\n" +
	"\x10OP_ExpansionInfo\x10\xa2\x01\x1a\n" +
	"\xa2\x99\x02\x06eq.Int\x12%\n" +
	"\rOP_GuildsList\x10\xf5\x01\x1a\x11\xa2\x99\x02\req.GuildsList\x12\"\n" +
	"\x11OP_PostEnterWorld\x10\x87\x03\x1a\n" +
	"\xa2\x99\x02\x06eq.Int\x12,\n" +
	"\x0fOP_SendCharInfo\x10\xbc\x03\x1a\x16\xa2\x99\x02\x12eq.CharacterSelect\x12'\n" +
	"\x10OP_SendLoginInfo\x10\xc0\x03\x1a\x10\xa2\x99\x02\feq.LoginInfo\x12%\n" +
	"\x14OP_SendMaxCharacters\x10\xc1\x03\x1a\n" +
	"\xa2\x99\x02\x06eq.Int\x12#\n" +
	"\x11OP_SendMembership\x10\xc2\x03\x1a\v\xa2\x99\x02\aeq.Zero\x12*\n" +
	"\x18OP_SendMembershipDetails\x10\xc3\x03\x1a\v\xa2\x99\x02\aeq.Zero\x12-\n" +
	"\x11OP_ZoneServerInfo\x10\xc9\x04\x1a\x15\xa2\x99\x02\x11eq.ZoneServerInfo\x12;\n" +
	"\x18OP_WebInitiateConnection\x10\xcf\x04\x1a\x1c\xa2\x99\x02\x18eq.WebInitiateConnection\x12)\n" +
	"\fOP_ZoneEntry\x10\xc5\x04\x1a\x16\xa2\x99\x02\x12eq.ClientZoneEntry\x12/\n" +
	"\x12OP_SetServerFilter\x10\xd4\x03\x1a\x16\xa2\x99\x02\x12eq.SetServerFilter\x12 \n" +
	"\x0eOP_SendAATable\x10\xbb\x03\x1a\v\xa2\x99\x02\aeq.Zero\x12!\n" +
	"\x0fOP_SendTributes\x10\xc6\x03\x1a\v\xa2\x99\x02\aeq.Zero\x12&\n" +
	"\x14OP_SendGuildTributes\x10\xbf\x03\x1a\v\xa2\x99\x02\aeq.Zero\x12 \n" +
	"\x0eOP_SendAAStats\x10\xba\x03\x1a\v\xa2\x99\x02\aeq.Zero\x12#\n" +
	"\x11OP_ReqClientSpawn\x10\xa7\x03\x1a\v\xa2\x99\x02\aeq.Zero\x12\x1f\n" +
	"\rOP_ReqNewZone\x10\xa8\x03\x1a\v\xa2\x99\x02\aeq.Zero\x12\"\n" +
	"\x10OP_SendExpZonein\x10\xbd\x03\x1a\v\xa2\x99\x02\aeq.Zero\x12\x1f\n" +
	"\x0eOP_ClientReady\x10\\\x1a\v\xa2\x99\x02\aeq.Zero\x12&\n" +
	"\x0eOP_ClientError\x10[\x1a\x12\xa2\x99\x02\x0eeq.ClientError\x12&\n" +
	"\x0eOP_ApproveZone\x10*\x1a\x12\xa2\x99\x02\x0eeq.ApproveZone\x12\x17\n" +
	"\x06OP_TGB\x10\x8c\x04\x1a\n" +
	"\xa2\x99\x02\x06eq.Int\x12\x1c\n" +
	"\fOP_AckPacket\x10\a\x1a\n" +
	"\xa2\x99\x02\x06eq.Int\x126\n" +
	"\x0fOP_ClientUpdate\x10^\x1a!\xa2\x99\x02\x1deq.PlayerPositionUpdateServer\x12\x1d\n" +
	"\rOP_AutoAttack\x10/\x1a\n" +
	"\xa2\x99\x02\x06eq.Int\x12\x1e\n" +
	"\x0eOP_AutoAttack2\x100\x1a\n" +
	"\xa2\x99\x02\x06eq.Int\x12\x1e\n" +
	"\n" +
	"OP_Consent\x10f\x1a\x0e\xa2\x99\x02\n" +
	"eq.Consent\x12\"\n" +
	"\x0eOP_ConsentDeny\x10g\x1a\x0e\xa2\x99\x02\n" +
	"eq.Consent\x12(\n" +
	"\x0eOP_TargetMouse\x10\x81\x04\x1a\x13\xa2\x99\x02\x0feq.ClientTarget\x12*\n" +
	"\x10OP_TargetCommand\x10\xff\x03\x1a\x13\xa2\x99\x02\x0feq.ClientTarget\x12#\n" +
	"\fOP_Shielding\x10\xe5\x03\x1a\x10\xa2\x99\x02\feq.Shielding\x12\x19\n" +
	"\aOP_Jump\x10\x92\x02\x1a\v\xa2\x99\x02\aeq.Zero\x12,\n" +
	"\x17OP_AdventureInfoRequest\x10\x0f\x1a\x0f\xa2\x99\x02\veq.EntityId\x120\n" +
	"\x13OP_AdventureRequest\x10\x17\x1a\x17\xa2\x99\x02\x13eq.AdventureRequest\x12 \n" +
	"\rOP_LDoNButton\x10\x96\x02\x1a\f\xa2\x99\x02\beq.Bool\t\x12#\n" +
	"\x11OP_LeaveAdventure\x10\x9e\x02\x1a\v\xa2\x99\x02\aeq.Zero\x12\x1e\n" +
	"\n" +
	"OP_Consume\x10k\x1a\x0e\xa2\x99\x02\n" +
	"eq.Consume\x129\n" +
	"\x1bOP_AdventureMerchantRequest\x10\x13\x1a\x18\xa2\x99\x02\x14eq.AdventureMerchant\x12;\n" +
	"\x1cOP_AdventureMerchantPurchase\x10\x12\x1a\x19\xa2\x99\x02\x15eq.Adventure_Purchase\x12&\n" +
	"\x11OP_ConsiderCorpse\x10j\x1a\x0f\xa2\x99\x02\veq.Consider\x12 \n" +
	"\vOP_Consider\x10i\x1a\x0f\xa2\x99\x02\veq.Consider\x12\x1b\n" +
	"\n" +
	"OP_Begging\x10:\x1a\v\xa2\x99\x02\aeq.Zero\x12\x1d\n" +
	"\vOP_TestBuff\x10\x8b\x04\x1a\v\xa2\x99\x02\aeq.Zero\x12\x1f\n" +
	"\n" +
	"OP_Surname\x10\xfc\x03\x1a\x0e\xa2\x99\x02\n" +
	"eq.Surname\x12 \n" +
	"\x0eOP_YellForHelp\x10\xc2\x04\x1a\v\xa2\x99\x02\aeq.Zero\x12 \n" +
	"\tOP_Assist\x10+\x1a\x11\xa2\x99\x02\req.EntityId\t\t\x12$\n" +
	"\rOP_GMTraining\x10\xc9\x01\x1a\x10\xa2\x99\x02\feq.GMTrainee\x12(\n" +
	"\x10OP_GMEndTraining\x10\xbc\x01\x1a\x11\xa2\x99\x02\req.GMTrainEnd\x12*\n" +
	"\x0fOP_GMTrainSkill\x10\xca\x01\x1a\x14\xa2\x99\x02\x10eq.GMSkillChange\x12 \n" +
	"\x0eOP_RequestDuel\x10\xaa\x03\x1a\v\xa2\x99\x02\aeq.Duel\x12(\n" +
	"\x0eOP_DuelDecline\x10\x84\x01\x1a\x13\xa2\x99\x02\x0feq.DuelResponse\x12\x1f\n" +
	"\rOP_DuelAccept\x10\x85\x01\x1a\v\xa2\x99\x02\aeq.Duel\x12/\n" +
	"\x12OP_SpawnAppearance\x10\xf4\x03\x1a\x16\xa2\x99\x02\x12eq.SpawnAppearance\x12*\n" +
	"\x10OP_BazaarInspect\x106\x1a\x14\xa2\x99\x02\x10eq.BazaarInspect\x12\x1a\n" +
	"\bOP_Death\x10u\x1a\f\xa2\x99\x02\beq.Death\x12!\n" +
	"\vOP_MoveCoin\x10\xda\x02\x1a\x0f\xa2\x99\x02\veq.MoveCoin\x12-\n" +
	"\x10OP_ItemLinkClick\x10\x88\x02\x1a\x16\xa2\x99\x02\x12eq.ItemViewRequest\x12!\n" +
	"\vOP_MoveItem\x10\xdc\x02\x1a\x0f\xa2\x99\x02\veq.MoveItem\x12\x18\n" +
	"\aOP_Camp\x10E\x1a\v\xa2\x99\x02\aeq.Zero\x12\x1b\n" +
	"\tOP_Logout\x10\xb6\x02\x1a\v\xa2\x99\x02\aeq.Zero\x12!\n" +
	"\x0fOP_SenseHeading\x10\xc8\x03\x1a\v\xa2\x99\x02\aeq.Zero\x12\x1f\n" +
	"\rOP_FeignDeath\x10\xa6\x01\x1a\v\xa2\x99\x02\aeq.Zero\x12\x1a\n" +
	"\bOP_Sneak\x10\xef\x03\x1a\v\xa2\x99\x02\aeq.Zero\x12\x19\n" +
	"\aOP_Hide\x10\xfb\x01\x1a\v\xa2\x99\x02\aeq.Zero\x12,\n" +
	"\x11OP_ChannelMessage\x10L\x1a\x15\xa2\x99\x02\x11eq.ChannelMessage\x12%\n" +
	"\rOP_WearChange\x10\xb0\x04\x1a\x11\xa2\x99\x02\req.WearChange\x12$\n" +
	"\x0eOP_DeleteSpawn\x10{\x1a\x10\xa2\x99\x02\feq.EntityId\t\x12$\n" +
	"\x10OP_SaveOnZoneReq\x10\xb8\x03\x1a\r\xa2\x99\x02\teq.Save\t\t\x12\x19\n" +
	"\aOP_Save\x10\xb7\x03\x1a\v\xa2\x99\x02\aeq.Save\x12%\n" +
	"\x10OP_WhoAllRequest\x10\xb3\x04\x1a\x0e\xa2\x99\x02\n" +
	"eq.Who_All\x12+\n" +
	"\x10OP_GMZoneRequest\x10\xcc\x01\x1a\x14\xa2\x99\x02\x10eq.GMZoneRequest\x12\"\n" +
	"\x11OP_GMZoneRequest2\x10\xcd\x01\x1a\n" +
	"\xa2\x99\x02\x06eq.Int\x12(\n" +
	"\x11OP_EndLootRequest\x10\x9d\x01\x1a\x10\xa2\x99\x02\feq.EntityId\t\x12%\n" +
	"\x0eOP_LootRequest\x10\xbb\x02\x1a\x10\xa2\x99\x02\feq.EntityId\t\x12\x1d\n" +
	"\x06OP_Dye\x10\x87\x01\x1a\x10\xa2\x99\x02\feq.DyeStruct\x12!\n" +
	"\x10OP_ConfirmDelete\x10e\x1a\v\xa2\x99\x02\aeq.Zero\x12$\n" +
	"\vOP_LootItem\x10\xba\x02\x1a\x12\xa2\x99\x02\x0eeq.LootingItem\x12 \n" +
	"\x0eOP_GuildDelete\x10\xe4\x01\x1a\v\xa2\x99\x02\aeq.Zero\x126\n" +
	"\x12OP_GuildPublicNote\x10\xf3\x01\x1a\x1d\xa2\x99\x02\x19eq.GuildUpdate_PublicNote\x12\"\n" +
	"\x10OP_GetGuildsList\x10\xb6\x01\x1a\v\xa2\x99\x02\aeq.Zero\x12&\n" +
	"\x0fOP_SetGuildMOTD\x10\xd1\x03\x1a\x10\xa2\x99\x02\feq.GuildMOTD\x12%\n" +
	"\rOP_SetRunMode\x10\xd3\x03\x1a\x11\xa2\x99\x02\req.SetRunMode\x12\x1f\n" +
	"\rOP_GuildPeace\x10\xf1\x01\x1a\v\xa2\x99\x02\aeq.Zero\x12\x1d\n" +
	"\vOP_GuildWar\x10\xf9\x01\x1a\v\xa2\x99\x02\aeq.Zero\x12+\n" +
	"\x0eOP_GuildLeader\x10\xe8\x01\x1a\x16\xa2\x99\x02\x12eq.GuildMakeLeader\x12-\n" +
	"\x0eOP_GuildDemote\x10\xe5\x01\x1a\x18\xa2\x99\x02\x14eq.GuildDemoteStruct\x12(\n" +
	"\x0eOP_GuildInvite\x10\xe6\x01\x1a\x13\xa2\x99\x02\x0feq.GuildCommand\x12(\n" +
	"\x0eOP_GuildRemove\x10\xf4\x01\x1a\x13\xa2\x99\x02\x0feq.GuildCommand\x123\n" +
	"\x14OP_GuildInviteAccept\x10\xe7\x01\x1a\x18\xa2\x99\x02\x14eq.GuildInviteAccept\x12&\n" +
	"\rOP_ManaChange\x10\xbc\x02\x1a\x12\xa2\x99\x02\x0eeq.ManaChange\t\x12+\n" +
	"\x10OP_MemorizeSpell\x10\xc1\x02\x1a\x14\xa2\x99\x02\x10eq.MemorizeSpell\x12#\n" +
	"\fOP_SwapSpell\x10\xfd\x03\x1a\x10\xa2\x99\x02\feq.SwapSpell\x12\"\n" +
	"\fOP_CastSpell\x10J\x1a\x10\xa2\x99\x02\feq.CastSpell\x12$\n" +
	"\rOP_DeleteItem\x10y\x1a\x11\xa2\x99\x02\req.DeleteItem\x12*\n" +
	"\x10OP_CombatAbility\x10b\x1a\x14\xa2\x99\x02\x10eq.CombatAbility\x12\"\n" +
	"\bOP_Taunt\x10\x8a\x04\x1a\x13\xa2\x99\x02\x0feq.ClientTarget\x12!\n" +
	"\x0fOP_InstillDoubt\x10\x86\x02\x1a\v\xa2\x99\x02\aeq.Zero\x12$\n" +
	"\rOP_RezzAnswer\x10\xb1\x03\x1a\x10\xa2\x99\x02\feq.Resurrect\x12!\n" +
	"\vOP_GMSummon\x10\xc7\x01\x1a\x0f\xa2\x99\x02\veq.GMSummon\x12#\n" +
	"\fOP_TradeBusy\x10\x92\x04\x1a\x10\xa2\x99\x02\feq.TradeBusy\x12)\n" +
	"\x0fOP_TradeRequest\x10\x98\x04\x1a\x13\xa2\x99\x02\x0feq.TradeRequest\x12-\n" +
	"\x12OP_TradeRequestAck\x10\x99\x04\x1a\x14\xa2\x99\x02\x10eq.TradeRequest\t\x12&\n" +
	"\x0eOP_CancelTrade\x10H\x1a\x12\xa2\x99\x02\x0eeq.CancelTrade\x12,\n" +
	"\x13OP_TradeAcceptClick\x10\x91\x04\x1a\x12\xa2\x99\x02\x0eeq.TradeAccept\x12#\n" +
	"\fOP_BoardBoat\x10>\x1a\x11\xa2\x99\x02\req.EntityId\t\t\x12\x1e\n" +
	"\fOP_LeaveBoat\x10\x9f\x02\x1a\v\xa2\x99\x02\aeq.Zero\x12#\n" +
	"\fOP_RandomReq\x10\x99\x03\x1a\x10\xa2\x99\x02\feq.RandomReq\x12#\n" +
	"\aOP_Buff\x10@\x1a\x16\xa2\x99\x02\x12eq.SpellBuffPacket\x12(\n" +
	"\vOP_GMHideMe\x10\xc0\x01\x1a\x16\xa2\x99\x02\x12eq.SpawnAppearance\x12#\n" +
	"\x0fOP_GMNameChange\x10\xc4\x01\x1a\r\xa2\x99\x02\teq.GMName\x12\x1d\n" +
	"\tOP_GMKill\x10\xc2\x01\x1a\r\xa2\x99\x02\teq.GMKill\x12%\n" +
	"\rOP_GMLastName\x10\xc3\x01\x1a\x11\xa2\x99\x02\req.GMLastName\x12!\n" +
	"\vOP_GMToggle\x10\xc8\x01\x1a\x0f\xa2\x99\x02\veq.GMToggle\x12\x1e\n" +
	"\rOP_LFGCommand\x10\xa3\x02\x1a\n" +
	"\xa2\x99\x02\x06eq.LFG\x12\x1f\n" +
	"\tOP_GMGoto\x10\xbf\x01\x1a\x0f\xa2\x99\x02\veq.GMSummon\x12&\n" +
	"\rOP_TraderShop\x10\x9b\x04\x1a\x12\xa2\x99\x02\x0eeq.TraderClick\x12*\n" +
	"\x0eOP_ShopRequest\x10\xec\x03\x1a\x15\xa2\x99\x02\x11eq.Merchant_Click\x12\"\n" +
	"\tOP_Bazaar\x105\x1a\x13\xa2\x99\x02\x0feq.BazaarSearch\x12+\n" +
	"\x10OP_ShopPlayerBuy\x10\xea\x03\x1a\x14\xa2\x99\x02\x10eq.Merchant_Sell\x120\n" +
	"\x11OP_ShopPlayerSell\x10\xeb\x03\x1a\x18\xa2\x99\x02\x14eq.Merchant_Purchase\x12\x1c\n" +
	"\n" +
	"OP_ShopEnd\x10\xe7\x03\x1a\v\xa2\x99\x02\aeq.Zero\x12/\n" +
	"\x11OP_CloseContainer\x10_\x1a\x18\xa2\x99\x02\x14eq.ClickObjectAction\x122\n" +
	"\x14OP_ClickObjectAction\x10Z\x1a\x18\xa2\x99\x02\x14eq.ClickObjectAction\x12&\n" +
	"\x0eOP_ClickObject\x10Y\x1a\x12\xa2\x99\x02\x0eeq.ClickObject\x123\n" +
	"\x12OP_RecipesFavorite\x10\x9e\x03\x1a\x1a\xa2\x99\x02\x16eq.TradeskillFavorites\x12+\n" +
	"\x10OP_RecipesSearch\x10\x9f\x03\x1a\x14\xa2\x99\x02\x10eq.RecipesSearch\x12!\n" +
	"\x10OP_RecipeDetails\x10\x9c\x03\x1a\n" +
	"\xa2\x99\x02\x06eq.Int\x123\n" +
	"\x14OP_RecipeAutoCombine\x10\x9b\x03\x1a\x18\xa2\x99\x02\x14eq.RecipeAutoCombine\x12,\n" +
	"\x14OP_TradeSkillCombine\x10\x9c\x04\x1a\x11\xa2\x99\x02\req.NewCombine\x12'\n" +
	"\vOP_ItemName\x10\x8b\x02\x1a\x15\xa2\x99\x02\x11eq.ItemNamePacket\x12&\n" +
	"\x0eOP_AugmentItem\x10.\x1a\x12\xa2\x99\x02\x0eeq.AugmentItem\x12\"\n" +
	"\fOP_ClickDoor\x10X\x1a\x10\xa2\x99\x02\feq.ClickDoor\x12%\n" +
	"\rOP_FaceChange\x10\xa4\x01\x1a\x11\xa2\x99\x02\req.FaceChange\x12'\n" +
	"\x0eOP_GroupInvite\x10\xd7\x01\x1a\x12\xa2\x99\x02\x0eeq.GroupInvite\x12)\n" +
	"\x0fOP_GroupInvite2\x10\xd8\x01\x1a\x13\xa2\x99\x02\x0feq.GroupInvite\t\x12)\n" +
	"\x0eOP_GroupFollow\x10\xd5\x01\x1a\x14\xa2\x99\x02\x10eq.GroupGeneric\t\x12*\n" +
	"\x0fOP_GroupFollow2\x10\xd6\x01\x1a\x14\xa2\x99\x02\x10eq.GroupGeneric\t\x12%\n" +
	"\x13OP_GroupAcknowledge\x10\xcf\x01\x1a\v\xa2\x99\x02\aeq.Zero\x12/\n" +
	"\x14OP_GroupCancelInvite\x10\xd0\x01\x1a\x14\xa2\x99\x02\x10eq.GroupGeneric\t\x12)\n" +
	"\x0fOP_GroupDisband\x10\xd2\x01\x1a\x13\xa2\x99\x02\x0feq.GroupGeneric\x12 \n" +
	"\x0eOP_GroupDelete\x10\xd1\x01\x1a\v\xa2\x99\x02\aeq.Zero\x12'\n" +
	"\x0eOP_GMEmoteZone\x10\xbb\x01\x1a\x12\xa2\x99\x02\x0eeq.GMEmoteZone\x12&\n" +
	"\x11OP_InspectRequest\x10\x85\x02\x1a\x0e\xa2\x99\x02\n" +
	"eq.Inspect\x12&\n" +
	"\x10OP_InspectAnswer\x10\x82\x02\x1a\x0f\xa2\x99\x02\veq.Inspect\t\x12&\n" +
	"\x0eOP_DeleteSpell\x10|\x1a\x12\xa2\x99\x02\x0eeq.DeleteSpell\x12'\n" +
	"\x0eOP_PetitionBug\x10\xf0\x02\x1a\x12\xa2\x99\x02\x0eeq.PetitionBug\x12\x1c\n" +
	"\x06OP_Bug\x10C\x1a\x10\xa2\x99\x02\feq.BugStruct\x12\x1f\n" +
	"\vOP_Petition\x10\xef\x02\x1a\r\xa2\x99\x02\teq.String\x12(\n" +
	"\x12OP_PetitionCheckIn\x10\xf1\x02\x1a\x0f\xa2\x99\x02\veq.Petition\x12.\n" +
	"\x12OP_PetitionResolve\x10\xf7\x02\x1a\x15\xa2\x99\x02\x11eq.PetitionUpdate\x12-\n" +
	"\x11OP_PetitionDelete\x10\xf4\x02\x1a\x15\xa2\x99\x02\x11eq.PetitionUpdate\x12&\n" +
	"\x15OP_PetitionUnCheckout\x10\xfb\x02\x1a\n" +
	"\xa2\x99\x02\x06eq.Int\x12 \n" +
	"\x0eOP_PetitionQue\x10\xf5\x02\x1a\v\xa2\x99\x02\aeq.Zero\x12&\n" +
	"\x12OP_PDeletePetition\x10\xea\x02\x1a\r\xa2\x99\x02\teq.String\x12$\n" +
	"\x13OP_PetitionCheckout\x10\xf2\x02\x1a\n" +
	"\xa2\x99\x02\x06eq.Int\x12$\n" +
	"\x12OP_PetitionRefresh\x10\xf6\x02\x1a\v\xa2\x99\x02\aeq.Zero\x12&\n" +
	"\x0eOP_PetCommands\x10\xec\x02\x1a\x11\xa2\x99\x02\req.PetCommand\x12$\n" +
	"\vOP_ReadBook\x10\x9a\x03\x1a\x12\xa2\x99\x02\x0eeq.BookRequest\x12\x1b\n" +
	"\bOP_Emote\x10\x9c\x01\x1a\f\xa2\x99\x02\beq.Emote\x12'\n" +
	"\x0eOP_GMDelCorpse\x10\xba\x01\x1a\x12\xa2\x99\x02\x0eeq.GMDelCorpse\x12\x1d\n" +
	"\tOP_GMKick\x10\xc1\x01\x1a\r\xa2\x99\x02\teq.GMKick\x12\x1e\n" +
	"\fOP_GMServers\x10\xc6\x01\x1a\v\xa2\x99\x02\aeq.Zero\x12!\n" +
	"\vOP_Illusion\x10\xfe\x01\x1a\x0f\xa2\x99\x02\veq.Illusion\x12%\n" +
	"\x0eOP_GMBecomeNPC\x10\xb9\x01\x1a\x10\xa2\x99\x02\feq.BecomeNPC\x12\x1c\n" +
	"\n" +
	"OP_Fishing\x10\xad\x01\x1a\v\xa2\x99\x02\aeq.Zero\x12\x1b\n" +
	"\tOP_Forage\x10\xb0\x01\x1a\v\xa2\x99\x02\aeq.Zero\x12\x19\n" +
	"\aOP_Mend\x10\xc2\x02\x1a\v\xa2\x99\x02\aeq.Zero\x12$\n" +
	"\fOP_EnvDamage\x10\xa1\x01\x1a\x11\xa2\x99\x02\req.EnvDamage2\x12\"\n" +
	"\tOP_Damage\x10t\x1a\x13\xa2\x99\x02\x0feq.CombatDamage\x12!\n" +
	"\vOP_AAAction\x10\x04\x1a\x10\xa2\x99\x02\feq.AA_Action\x12#\n" +
	"\fOP_TraderBuy\x10\x96\x04\x1a\x10\xa2\x99\x02\feq.TraderBuy\x12'\n" +
	"\tOP_Trader\x10\x95\x04\x1a\x17\xa2\x99\x02\x13eq.Trader_ShowItems\x12\x1f\n" +
	"\tOP_GMFind\x10\xbe\x01\x1a\x0f\xa2\x99\x02\veq.GMSummon\x12%\n" +
	"\rOP_PickPocket\x10\xfd\x02\x1a\x11\xa2\x99\x02\req.PickPocket\x12#\n" +
	"\rOP_Bind_Wound\x10<\x1a\x10\xa2\x99\x02\feq.BindWound\x12'\n" +
	"\x0eOP_TrackTarget\x10\x8f\x04\x1a\x12\xa2\x99\x02\x0eeq.TrackTarget\x12\x1a\n" +
	"\bOP_Track\x10\x8e\x04\x1a\v\xa2\x99\x02\aeq.Zero\x12!\n" +
	"\x0fOP_TrackUnknown\x10\x90\x04\x1a\v\xa2\x99\x02\aeq.Zero\x12\x1d\n" +
	"\vOP_ReloadUI\x10\xa1\x03\x1a\v\xa2\x99\x02\aeq.Zero\x12\x1b\n" +
	"\bOP_Split\x10\xf9\x03\x1a\f\xa2\x99\x02\beq.Split\x12\x1f\n" +
	"\rOP_SenseTraps\x10\xc9\x03\x1a\v\xa2\x99\x02\aeq.Zero\x12\x1f\n" +
	"\x0eOP_DisarmTraps\x10\x7f\x1a\v\xa2\x99\x02\aeq.Zero\x12.\n" +
	"\x14OP_OpenTributeMaster\x10\xe9\x02\x1a\x13\xa2\x99\x02\x0feq.StartTribute\x123\n" +
	"\x19OP_OpenGuildTributeMaster\x10\xe7\x02\x1a\x13\xa2\x99\x02\x0feq.StartTribute\x12'\n" +
	"\x0eOP_TributeItem\x10\x9f\x04\x1a\x12\xa2\x99\x02\x0eeq.TributeItem\x12)\n" +
	"\x0fOP_TributeMoney\x10\xa0\x04\x1a\x13\xa2\x99\x02\x0feq.TributeMoney\x12.\n" +
	"\x10OP_SelectTribute\x10\xb9\x03\x1a\x17\xa2\x99\x02\x13eq.SelectTributeReq\x12)\n" +
	"\x10OP_TributeUpdate\x10\xa5\x04\x1a\x12\xa2\x99\x02\x0eeq.TributeInfo\x12$\n" +
	"\x10OP_TributeToggle\x10\xa4\x04\x1a\r\xa2\x99\x02\teq.uint32\x12!\n" +
	"\rOP_TributeNPC\x10\xa1\x04\x1a\r\xa2\x99\x02\teq.uint32\x12\x1d\n" +
	"\fOP_CrashDump\x10o\x1a\v\xa2\x99\x02\aeq.Zero\x12&\n" +
	"\x0eOP_ControlBoat\x10l\x1a\x12\xa2\x99\x02\x0eeq.ControlBoat\x12\x1d\n" +
	"\vOP_DumpName\x10\x86\x01\x1a\v\xa2\x99\x02\aeq.Zero\x12$\n" +
	"\x12OP_SafeFallSuccess\x10\xb5\x03\x1a\v\xa2\x99\x02\aeq.Zero\x12\x1e\n" +
	"\fOP_Heartbeat\x10\xfa\x01\x1a\v\xa2\x99\x02\aeq.Zero\x12\x1e\n" +
	"\fOP_SafePoint\x10\xb6\x03\x1a\v\xa2\x99\x02\aeq.Zero\x123\n" +
	"\x14OP_FindPersonRequest\x10\xa9\x01\x1a\x18\xa2\x99\x02\x14eq.FindPersonRequest\x12'\n" +
	"\x16OP_LeadershipExpToggle\x10\x9c\x02\x1a\n" +
	"\xa2\x99\x02\x06eq.Int\x12(\n" +
	"\x17OP_PurchaseLeadershipAA\x10\x8a\x03\x1a\n" +
	"\xa2\x99\x02\x06eq.Int\x12(\n" +
	"\x0fOP_BankerChange\x103\x1a\x13\xa2\x99\x02\x0feq.BankerChange\x12!\n" +
	"\vOP_SetTitle\x10\xd6\x03\x1a\x0f\xa2\x99\x02\veq.SetTitle\x12\"\n" +
	"\x10OP_RequestTitles\x10\xac\x03\x1a\v\xa2\x99\x02\aeq.Zero\x123\n" +
	"\x14OP_ItemVerifyRequest\x10\x90\x02\x1a\x18\xa2\x99\x02\x14eq.ItemVerifyRequest\x12\x1f\n" +
	"\x0eOP_ClearObject\x10V\x1a\v\xa2\x99\x02\aeq.Zero\x12 \n" +
	"\x0eOP_FinishTrade\x10\xaa\x01\x1a\v\xa2\x99\x02\aeq.Zero\x12*\n" +
	"\x18OP_GMEndTrainingResponse\x10\xbd\x01\x1a\v\xa2\x99\x02\aeq.Zero\x12!\n" +
	"\x0fOP_LootComplete\x10\xb9\x02\x1a\v\xa2\x99\x02\aeq.Zero\x12%\n" +
	"\x13OP_WorldObjectsSent\x10\xbb\x04\x1a\v\xa2\x99\x02\aeq.Zero\x12!\n" +
	"\x0fOP_FinishWindow\x10\xab\x01\x1a\v\xa2\x99\x02\aeq.Zero\x12\"\n" +
	"\x10OP_FinishWindow2\x10\xac\x01\x1a\v\xa2\x99\x02\aeq.Zero\x12%\n" +
	"\rOP_ItemPacket\x10\x8c\x02\x1a\x11\xa2\x99\x02\req.ItemPacket\x12&\n" +
	"\x0eOP_ColoredText\x10a\x1a\x12\xa2\x99\x02\x0eeq.ColoredText\x12/\n" +
	"\x12OP_ItemRecastDelay\x10\x8e\x02\x1a\x16\xa2\x99\x02\x12eq.ItemRecastDelay\x121\n" +
	"\x13OP_FormattedMessage\x10\xb2\x01\x1a\x17\xa2\x99\x02\x13eq.FormattedMessage\x12&\n" +
	"\x12OP_GuildMemberList\x10\xee\x01\x1a\r\xa2\x99\x02\teq.uint32\x12+\n" +
	"\x10OP_InterruptCast\x10\x87\x02\x1a\x14\xa2\x99\x02\x10eq.InterruptCast\x12+\n" +
	"\x13OP_ItemLinkResponse\x10\x89\x02\x1a\x11\xa2\x99\x02\req.ItemPacket\x12+\n" +
	"\rOP_ZoneSpawns\x10\xcb\x04\x1a\x17\xa2\x99\x02\teq.Spawns\xaa\x99\x02\x06spawns\x12)\n" +
	"\x11OP_CompletedTasks\x10d\x1a\x12\xa2\x99\x02\x0eeq.TaskHistory\x12'\n" +
	"\x10OP_CharInventory\x10O\x1a\x11\xa2\x99\x02\req.ItemPacket\x12\"\n" +
	"\x0fOP_CustomTitles\x10s\x1a\r\xa2\x99\x02\teq.Titles\x12\x1e\n" +
	"\fOP_SpawnDoor\x10\xf5\x03\x1a\v\xa2\x99\x02\aeq.Door\x12)\n" +
	"\x11OP_SendZonepoints\x10\xc7\x03\x1a\x11\xa2\x99\x02\req.ZonePoints\x12*\n" +
	"\x0eOP_TributeInfo\x10\x9e\x04\x1a\x15\xa2\x99\x02\x11eq.TributeAbility\x124\n" +
	"\x13OP_GuildTributeInfo\x10\xf7\x01\x1a\x1a\xa2\x99\x02\x16eq.GuildTributeAbility\x12'\n" +
	"\x10OP_SendTitleList\x10\xc5\x03\x1a\x10\xa2\x99\x02\feq.TitleList\x12&\n" +
	"\x0eOP_AAExpUpdate\x10\x05\x1a\x12\xa2\x99\x02\x0eeq.AAExpUpdate\x12\x1c\n" +
	"\tOP_Action\x10\b\x1a\r\xa2\x99\x02\teq.Action\x125\n" +
	"\x10OP_AdventureData\x10\v\x1a\x1f\xa2\x99\x02\x1beq.AdventureRequestResponse\x12.\n" +
	"\x12OP_AdventureFinish\x10\r\x1a\x16\xa2\x99\x02\x12eq.AdventureFinish\x12;\n" +
	"\x18OP_AdventurePointsUpdate\x10\x16\x1a\x1d\xa2\x99\x02\x19eq.AdventurePoints_Update\x12\"\n" +
	"\fOP_Animation\x10%\x1a\x10\xa2\x99\x02\feq.Animation\x126\n" +
	"\x16OP_AnnoyingZoneUnknown\x10&\x1a\x1a\xa2\x99\x02\x16eq.AnnoyingZoneUnknown\x12(\n" +
	"\x0fOP_BecomeTrader\x109\x1a\x13\xa2\x99\x02\x0feq.BecomeTrader\x12\"\n" +
	"\fOP_BeginCast\x10;\x1a\x10\xa2\x99\x02\feq.BeginCast\x12\x1a\n" +
	"\bOP_Charm\x10P\x1a\f\xa2\x99\x02\beq.Charm\x12\"\n" +
	"\x0fOP_CameraEffect\x10D\x1a\r\xa2\x99\x02\teq.Camera\x12.\n" +
	"\x12OP_ConsentResponse\x10h\x1a\x16\xa2\x99\x02\x12eq.ConsentResponse\x12/\n" +
	"\x12OP_EnduranceUpdate\x10\x9e\x01\x1a\x16\xa2\x99\x02\x12eq.EnduranceUpdate\x12#\n" +
	"\fOP_ExpUpdate\x10\xa3\x01\x1a\x10\xa2\x99\x02\feq.ExpUpdate\x12\"\n" +
	"\x0eOP_GroundSpawn\x10\xce\x01\x1a\r\xa2\x99\x02\teq.Object\x12&\n" +
	"\x0eOP_GroupUpdate\x10\xde\x01\x1a\x11\xa2\x99\x02\req.GroupJoin\t\x12#\n" +
	"\fOP_GuildMOTD\x10\xf0\x01\x1a\x10\xa2\x99\x02\feq.GuildMOTD\x12(\n" +
	"\x11OP_GuildManageAdd\x10\xe9\x01\x1a\x10\xa2\x99\x02\feq.GuildJoin\x123\n" +
	"\x14OP_GuildManageRemove\x10\xeb\x01\x1a\x18\xa2\x99\x02\x14eq.GuildManageRemove\x123\n" +
	"\x14OP_GuildManageStatus\x10\xec\x01\x1a\x18\xa2\x99\x02\x14eq.GuildManageStatus\x123\n" +
	"\x14OP_GuildMemberUpdate\x10\xef\x01\x1a\x18\xa2\x99\x02\x14eq.GuildMemberUpdate\x12&\n" +
	"\vOP_HPUpdate\x10\xfd\x01\x1a\x14\xa2\x99\x02\x10eq.SpawnHPUpdate\x12*\n" +
	"\x10OP_IncreaseStats\x10\xff\x01\x1a\x13\xa2\x99\x02\x0feq.IncreaseStat\x12/\n" +
	"\x12OP_ItemVerifyReply\x10\x8f\x02\x1a\x16\xa2\x99\x02\x12eq.ItemVerifyReply\x12,\n" +
	"\x10OP_LFGAppearance\x10\xa2\x02\x1a\x15\xa2\x99\x02\x11eq.LFG_Appearance\x127\n" +
	"\x16OP_LeadershipExpUpdate\x10\x9d\x02\x1a\x1a\xa2\x99\x02\x16eq.LeadershipExpUpdate\x12/\n" +
	"\x12OP_LevelAppearance\x10\xa0\x02\x1a\x16\xa2\x99\x02\x12eq.LevelAppearance\x12'\n" +
	"\x0eOP_LevelUpdate\x10\xa1\x02\x1a\x12\xa2\x99\x02\x0eeq.LevelUpdate\x12%\n" +
	"\rOP_ManaUpdate\x10\xbd\x02\x1a\x11\xa2\x99\x02\req.ManaUpdate\x125\n" +
	"\x15OP_MobEnduranceUpdate\x10\xd2\x02\x1a\x19\xa2\x99\x02\x15eq.MobEnduranceUpdate\x12#\n" +
	"\fOP_MobHealth\x10\xd3\x02\x1a\x10\xa2\x99\x02\feq.MobHealth\x12+\n" +
	"\x10OP_MobManaUpdate\x10\xd4\x02\x1a\x14\xa2\x99\x02\x10eq.MobManaUpdate\x12#\n" +
	"\fOP_MobRename\x10\xd5\x02\x1a\x10\xa2\x99\x02\feq.MobRename\x121\n" +
	"\x10OP_MoneyOnCorpse\x10\xd7\x02\x1a\x1a\xa2\x99\x02\x16eq.moneyOnCorpseStruct\x12'\n" +
	"\x0eOP_MoneyUpdate\x10\xd8\x02\x1a\x12\xa2\x99\x02\x0eeq.MoneyUpdate\x12!\n" +
	"\vOP_MoveDoor\x10\xdb\x02\x1a\x0f\xa2\x99\x02\veq.MoveDoor\x12)\n" +
	"\vOP_NewSpawn\x10\xe1\x02\x1a\x17\xa2\x99\x02\teq.Spawns\xaa\x99\x02\x06spawns\x12\x1f\n" +
	"\n" +
	"OP_NewZone\x10\xe3\x02\x1a\x0e\xa2\x99\x02\n" +
	"eq.NewZone\x12-\n" +
	"\x11OP_PetitionUpdate\x10\xfc\x02\x1a\x15\xa2\x99\x02\x11eq.PetitionUpdate\x12+\n" +
	"\x10OP_PlayerProfile\x10\xfe\x02\x1a\x14\xa2\x99\x02\x10eq.PlayerProfile\x12)\n" +
	"\rOP_RaidUpdate\x10\x96\x03\x1a\x15\xa2\x99\x02\x11eq.ZoneInSendName\x12'\n" +
	"\x0eOP_RandomReply\x10\x98\x03\x1a\x12\xa2\x99\x02\x0eeq.RandomReply\x12'\n" +
	"\x0eOP_RecipeReply\x10\x9d\x03\x1a\x12\xa2\x99\x02\x0eeq.RecipeReply\x12?\n" +
	"\x1aOP_RequestClientZoneChange\x10\xa9\x03\x1a\x1e\xa2\x99\x02\x1aeq.RequestClientZoneChange\x12!\n" +
	"\fOP_RespondAA\x10\xae\x03\x1a\x0e\xa2\x99\x02\n" +
	"eq.AATable\x12%\n" +
	"\x0eOP_RezzRequest\x10\xb3\x03\x1a\x10\xa2\x99\x02\feq.Resurrect\x12+\n" +
	"\x10OP_SetTitleReply\x10\xd7\x03\x1a\x14\xa2\x99\x02\x10eq.SetTitleReply\x12,\n" +
	"\x0eOP_ShopDelItem\x10\xe6\x03\x1a\x17\xa2\x99\x02\x13eq.Merchant_DelItem\x12+\n" +
	"\x10OP_SimpleMessage\x10\xed\x03\x1a\x14\xa2\x99\x02\x10eq.SimpleMessage\x12'\n" +
	"\x0eOP_SkillUpdate\x10\xee\x03\x1a\x12\xa2\x99\x02\x0eeq.SkillUpdate\x12)\n" +
	"\x16OP_SomeItemPacketMaybe\x10\xf2\x03\x1a\f\xa2\x99\x02\beq.Arrow\x12'\n" +
	"\x0eOP_SpellEffect\x10\xf8\x03\x1a\x12\xa2\x99\x02\x0eeq.SpellEffect\x12\x1f\n" +
	"\n" +
	"OP_Stamina\x10\xfa\x03\x1a\x0e\xa2\x99\x02\n" +
	"eq.Stamina\x12\x19\n" +
	"\aOP_Stun\x10\xfb\x03\x1a\v\xa2\x99\x02\aeq.Stun\x12)\n" +
	"\x0fOP_TargetReject\x10\x82\x04\x1a\x13\xa2\x99\x02\x0feq.TargetReject\x12#\n" +
	"\fOP_TimeOfDay\x10\x8d\x04\x1a\x10\xa2\x99\x02\feq.TimeOfDay\x12$\n" +
	"\rOP_TradeCoins\x10\x93\x04\x1a\x10\xa2\x99\x02\feq.TradeCoin\x121\n" +
	"\x13OP_TradeMoneyUpdate\x10\x94\x04\x1a\x17\xa2\x99\x02\x13eq.TradeMoneyUpdate\x12+\n" +
	"\x10OP_TraderDelItem\x10\x97\x04\x1a\x14\xa2\x99\x02\x10eq.TraderDelItem\x121\n" +
	"\x13OP_TraderItemUpdate\x10\x9a\x04\x1a\x17\xa2\x99\x02\x13eq.TraderItemUpdate\x12!\n" +
	"\x0fOP_TributeTimer\x10\xa3\x04\x1a\v\xa2\x99\x02\aeq.Bool\x125\n" +
	"\x15OP_UpdateLeadershipAA\x10\xa9\x04\x1a\x19\xa2\x99\x02\x15eq.UpdateLeadershipAA\x12\x1f\n" +
	"\n" +
	"OP_Weather\x10\xb1\x04\x1a\x0e\xa2\x99\x02\n" +
	"eq.Weather\x12%\n" +
	"\rOP_ZoneChange\x10\xc3\x04\x1a\x11\xa2\x99\x02\req.ZoneChange\x12+\n" +
	"\x10OP_ZoneInUnknown\x10\xc7\x04\x1a\x14\xa2\x99\x02\x10eq.ZoneInUnknown\x12*\n" +
	"\x10OP_AcceptNewTask\x10\x06\x1a\x14\xa2\x99\x02\x10eq.AcceptNewTask\x12*\n" +
	"\x10OP_AdventureInfo\x10\x0e\x1a\x14\xa2\x99\x02\x10eq.AdventureInfo\x12&\n" +
	"\x0eOP_ApplyPoison\x10'\x1a\x12\xa2\x99\x02\x0eeq.ApplyPoison\x12(\n" +
	"\x0fOP_ApproveWorld\x10)\x1a\x13\xa2\x99\x02\x0feq.ApproveWorld\x12&\n" +
	"\fOP_Bandolier\x102\x1a\x14\xa2\x99\x02\x10eq.BandolierItem\x12(\n" +
	"\x0fOP_BazaarSearch\x107\x1a\x13\xa2\x99\x02\x0feq.BazaarSearch\x12(\n" +
	"\x0fOP_BecomeCorpse\x108\x1a\x13\xa2\x99\x02\x0feq.BecomeCorpse\x12$\n" +
	"\rOP_CancelTask\x10G\x1a\x11\xa2\x99\x02\req.CancelTask\x12!\n" +
	"\n" +
	"OP_Command\x10c\x1a\x11\xa2\x99\x02\req.PetCommand\x12'\n" +
	"\x0eOP_DynamicWall\x10\x88\x01\x1a\x12\xa2\x99\x02\x0eeq.DynamicWall\x12,\n" +
	"\n" +
	"OP_LFGuild\x10\xa7\x02\x1a\x1b\xa2\x99\x02\x17eq.LFGuild_SearchPlayer\x12)\n" +
	"\x0fOP_LoadSpellSet\x10\xac\x02\x1a\x13\xa2\x99\x02\x0feq.LoadSpellSet\x12#\n" +
	"\fOP_LogServer\x10\xb8\x02\x1a\x10\xa2\x99\x02\feq.LogServer\x12\x1e\n" +
	"\aOP_MOTD\x10\xd9\x02\x1a\x10\xa2\x99\x02\feq.GuildMOTD\x12-\n" +
	"\x11OP_OnLevelMessage\x10\xe4\x02\x1a\x15\xa2\x99\x02\x11eq.OnLevelMessage\x12\x1f\n" +
	"\n" +
	"OP_PlayMP3\x10\x83\x03\x1a\x0e\xa2\x99\x02\n" +
	"eq.PlayMP3\x12)\n" +
	"\rOP_PotionBelt\x10\x88\x03\x1a\x15\xa2\x99\x02\x11eq.PotionBeltItem\x12&\n" +
	"\vOP_PVPStats\x10\x8f\x03\x1a\x14\xa2\x99\x02\x10eq.PVPStatsEntry\x12 \n" +
	"\tOP_Report\x10\xa6\x03\x1a\x10\xa2\x99\x02\feq.BugReport\x12'\n" +
	"\x0eOP_SpecialMesg\x10\xf7\x03\x1a\x12\xa2\x99\x02\x0eeq.SpecialMesg\x12)\n" +
	"\x0fOP_TaskActivity\x10\x83\x04\x1a\x13\xa2\x99\x02\x0feq.TaskActivity\x12/\n" +
	"\x12OP_TaskDescription\x10\x85\x04\x1a\x16\xa2\x99\x02\x12eq.TaskDescription\x12'\n" +
	"\x0eOP_ZoneUnavail\x10\xcc\x04\x1a\x12\xa2\x99\x02\x0eeq.ZoneUnavail\x126\n" +
	"\x12Nested_WorldServer\x10\xe8\a\x1a\x1d\xa2\x99\x02\x0eeq.WorldServer\xaa\x99\x02\aservers\x12K\n" +
	"\x1bNested_CharacterSelectEntry\x10\xe9\a\x1a)\xa2\x99\x02\x17eq.CharacterSelectEntry\xaa\x99\x02\n" +
	"characters\x12<\n" +
	"\x16Nested_CharSelectEquip\x10\xea\a\x1a\x1f\xa2\x99\x02\x12eq.CharSelectEquip\xaa\x99\x02\x05equip\x12\x1d\n" +
	"\vNested_Tint\x10\xeb\a\x1a\v\xa2\x99\x02\aeq.Tint\x12)\n" +
	"\x11Nested_StringList\x10\xec\a\x1a\x11\xa2\x99\x02\req.StringList\x12\x15\n" +
	"\x11OP_ExploreUnknown\x10\x01\x12\r\n" +
	"\tOP_0x0193\x10\x02\x12\r\n" +
	"\tOP_0x0347\x10\x03\x12\x0e\n" +
	"\n" +
	"OP_Action2\x10\t\x12\x16\n" +
	"\x12OP_AddNimbusEffect\x10\n" +
	"\x12\x17\n" +
	"\x13OP_AdventureDetails\x10\f\x12 \n" +
	"\x1cOP_AdventureLeaderboardReply\x10\x10\x12\"\n" +
	"\x1eOP_AdventureLeaderboardRequest\x10\x11\x12 \n" +
	"\x1cOP_AdventureMerchantResponse\x10\x14\x12\x1c\n" +
	"\x18OP_AdventureMerchantSell\x10\x15\x12\x1a\n" +
	"\x16OP_AdventureStatsReply\x10\x18\x12\x1c\n" +
	"\x18OP_AdventureStatsRequest\x10\x19\x12\x16\n" +
	"\x12OP_AdventureUpdate\x10\x1a\x12\x1b\n" +
	"\x17OP_AggroMeterLockTarget\x10\x1b\x12\x1b\n" +
	"\x17OP_AggroMeterTargetInfo\x10\x1c\x12\x17\n" +
	"\x13OP_AggroMeterUpdate\x10\x1d\x12\x12\n" +
	"\x0eOP_AltCurrency\x10\x1e\x12\x1f\n" +
	"\x1bOP_AltCurrencyMerchantReply\x10\x1f\x12!\n" +
	"\x1dOP_AltCurrencyMerchantRequest\x10 \x12\x1a\n" +
	"\x16OP_AltCurrencyPurchase\x10!\x12\x19\n" +
	"\x15OP_AltCurrencyReclaim\x10\"\x12\x16\n" +
	"\x12OP_AltCurrencySell\x10#\x12\x1f\n" +
	"\x1bOP_AltCurrencySellSelection\x10$\x12\x12\n" +
	"\x0eOP_AssistGroup\x10,\x12\x12\n" +
	"\x0eOP_AugmentInfo\x10-\x12\x0f\n" +
	"\vOP_AutoFire\x101\x12\r\n" +
	"\tOP_Barter\x104\x12\x13\n" +
	"\x0fOP_BlockedBuffs\x10=\x12\x11\n" +
	"\rOP_BookButton\x10?\x12\x11\n" +
	"\rOP_BuffCreate\x10A\x12\x18\n" +
	"\x14OP_BuffRemoveRequest\x10B\x12\x16\n" +
	"\x12OP_CancelSneakHide\x10F\x12\x11\n" +
	"\rOP_CashReward\x10I\x12\x11\n" +
	"\rOP_ChangeSize\x10K\x12\x1d\n" +
	"\x19OP_CharacterCreateRequest\x10N\x12\x12\n" +
	"\x0eOP_ChatMessage\x10Q\x12\x0e\n" +
	"\n" +
	"OP_ClearAA\x10R\x12\x18\n" +
	"\x14OP_ClearBlockedBuffs\x10S\x12\x1f\n" +
	"\x1bOP_ClearLeadershipAbilities\x10T\x12\x14\n" +
	"\x10OP_ClearNPCMarks\x10U\x12\x13\n" +
	"\x0fOP_ClearSurname\x10W\x12\x16\n" +
	"\x12OP_ClientTimeStamp\x10]\x12\x19\n" +
	"\x15OP_CloseTributeMaster\x10`\x12\x11\n" +
	"\rOP_CorpseDrag\x10m\x12\x11\n" +
	"\rOP_CorpseDrop\x10n\x12\x19\n" +
	"\x15OP_CrystalCountUpdate\x10p\x12\x14\n" +
	"\x10OP_CrystalCreate\x10q\x12\x15\n" +
	"\x11OP_CrystalReclaim\x10r\x12\x16\n" +
	"\x12OP_DelegateAbility\x10v\x12\x13\n" +
	"\x0fOP_DeleteCharge\x10x\x12\x15\n" +
	"\x11OP_DeletePetition\x10z\x12\x13\n" +
	"\x0fOP_DenyResponse\x10}\x12\r\n" +
	"\tOP_Disarm\x10~\x12\x17\n" +
	"\x12OP_DisciplineTimer\x10\x80\x01\x12\x18\n" +
	"\x13OP_DisciplineUpdate\x10\x81\x01\x12 \n" +
	"\x1bOP_DiscordMerchantInventory\x10\x82\x01\x12 \n" +
	"\x1bOP_DoGroupLeadershipAbility\x10\x83\x01\x12\x13\n" +
	"\x0eOP_DzAddPlayer\x10\x89\x01\x12\x14\n" +
	"\x0fOP_DzChooseZone\x10\x8a\x01\x12\x19\n" +
	"\x14OP_DzChooseZoneReply\x10\x8b\x01\x12\x11\n" +
	"\fOP_DzCompass\x10\x8c\x01\x12\x1f\n" +
	"\x1aOP_DzExpeditionEndsWarning\x10\x8d\x01\x12\x18\n" +
	"\x13OP_DzExpeditionInfo\x10\x8e\x01\x12\x1a\n" +
	"\x15OP_DzExpeditionInvite\x10\x8f\x01\x12\"\n" +
	"\x1dOP_DzExpeditionInviteResponse\x10\x90\x01\x12!\n" +
	"\x1cOP_DzExpeditionLockoutTimers\x10\x91\x01\x12\x14\n" +
	"\x0fOP_DzListTimers\x10\x92\x01\x12\x14\n" +
	"\x0fOP_DzMakeLeader\x10\x93\x01\x12\x14\n" +
	"\x0fOP_DzMemberList\x10\x94\x01\x12\x18\n" +
	"\x13OP_DzMemberListName\x10\x95\x01\x12\x1a\n" +
	"\x15OP_DzMemberListStatus\x10\x96\x01\x12\x14\n" +
	"\x0fOP_DzPlayerList\x10\x97\x01\x12\x0e\n" +
	"\tOP_DzQuit\x10\x98\x01\x12\x16\n" +
	"\x11OP_DzRemovePlayer\x10\x99\x01\x12\x17\n" +
	"\x12OP_DzSetLeaderName\x10\x9a\x01\x12\x14\n" +
	"\x0fOP_DzSwapPlayer\x10\x9b\x01\x12\x11\n" +
	"\fOP_EnterChat\x10\x9f\x01\x12\x10\n" +
	"\vOP_Feedback\x10\xa5\x01\x12\x18\n" +
	"\x13OP_FellowshipUpdate\x10\xa7\x01\x12\x17\n" +
	"\x12OP_FindPersonReply\x10\xa8\x01\x12\r\n" +
	"\bOP_Fling\x10\xae\x01\x12\x16\n" +
	"\x11OP_FloatListThing\x10\xaf\x01\x12\x17\n" +
	"\x12OP_ForceFindPerson\x10\xb1\x01\x12\x12\n" +
	"\rOP_FriendsWho\x10\xb3\x01\x12\x14\n" +
	"\x0fOP_GetGuildMOTD\x10\xb4\x01\x12\x19\n" +
	"\x14OP_GetGuildMOTDReply\x10\xb5\x01\x12\x11\n" +
	"\fOP_GiveMoney\x10\xb7\x01\x12\x12\n" +
	"\rOP_GMApproval\x10\xb8\x01\x12\x1b\n" +
	"\x16OP_GMTrainSkillConfirm\x10\xcb\x01\x12\x19\n" +
	"\x14OP_GroupDisbandOther\x10\xd3\x01\x12\x17\n" +
	"\x12OP_GroupDisbandYou\x10\xd4\x01\x12\x19\n" +
	"\x14OP_GroupLeaderChange\x10\xd9\x01\x12\x1f\n" +
	"\x1aOP_GroupLeadershipAAUpdate\x10\xda\x01\x12\x17\n" +
	"\x12OP_GroupMakeLeader\x10\xdb\x01\x12\x13\n" +
	"\x0eOP_GroupMentor\x10\xdc\x01\x12\x12\n" +
	"\rOP_GroupRoles\x10\xdd\x01\x12\x14\n" +
	"\x0fOP_GroupUpdateB\x10\xdf\x01\x12\x1b\n" +
	"\x16OP_GroupUpdateLeaderAA\x10\xe0\x01\x12\x11\n" +
	"\fOP_GuildBank\x10\xe1\x01\x12\x19\n" +
	"\x14OP_GuildBankItemList\x10\xe2\x01\x12\x13\n" +
	"\x0eOP_GuildCreate\x10\xe3\x01\x12\x19\n" +
	"\x14OP_GuildManageBanker\x10\xea\x01\x12\x1e\n" +
	"\x19OP_GuildMemberLevelUpdate\x10\xed\x01\x12\x14\n" +
	"\x0fOP_GuildPromote\x10\xf2\x01\x12\x13\n" +
	"\x0eOP_GuildStatus\x10\xf6\x01\x12 \n" +
	"\x1bOP_GuildUpdateURLAndChannel\x10\xf8\x01\x12\x12\n" +
	"\rOP_HideCorpse\x10\xfc\x01\x12\x17\n" +
	"\x12OP_InitialHPUpdate\x10\x80\x02\x12\x18\n" +
	"\x13OP_InitialMobHealth\x10\x81\x02\x12\x14\n" +
	"\x0fOP_InspectBuffs\x10\x83\x02\x12\x1c\n" +
	"\x17OP_InspectMessageUpdate\x10\x84\x02\x12\x14\n" +
	"\x0fOP_ItemLinkText\x10\x8a\x02\x12\x13\n" +
	"\x0eOP_ItemPreview\x10\x8d\x02\x12\x17\n" +
	"\x12OP_ItemViewUnknown\x10\x91\x02\x12\x0f\n" +
	"\n" +
	"OP_KeyRing\x10\x93\x02\x12\x13\n" +
	"\x0eOP_KickPlayers\x10\x94\x02\x12\x15\n" +
	"\x10OP_KnowledgeBase\x10\x95\x02\x12\x17\n" +
	"\x12OP_LDoNDisarmTraps\x10\x97\x02\x12\x13\n" +
	"\x0eOP_LDoNInspect\x10\x98\x02\x12\x10\n" +
	"\vOP_LDoNOpen\x10\x99\x02\x12\x14\n" +
	"\x0fOP_LDoNPickLock\x10\x9a\x02\x12\x16\n" +
	"\x11OP_LDoNSenseTraps\x10\x9b\x02\x12\x1c\n" +
	"\x17OP_LFGGetMatchesRequest\x10\xa4\x02\x12\x1d\n" +
	"\x18OP_LFGGetMatchesResponse\x10\xa5\x02\x12\x13\n" +
	"\x0eOP_LFGResponse\x10\xa6\x02\x12\x12\n" +
	"\rOP_LFPCommand\x10\xa8\x02\x12\x1c\n" +
	"\x17OP_LFPGetMatchesRequest\x10\xa9\x02\x12\x1d\n" +
	"\x18OP_LFPGetMatchesResponse\x10\xaa\x02\x12\x13\n" +
	"\x0eOP_LinkedReuse\x10\xab\x02\x12\x0f\n" +
	"\n" +
	"OP_LocInfo\x10\xad\x02\x12\x18\n" +
	"\x13OP_LockoutTimerInfo\x10\xae\x02\x12\r\n" +
	"\bOP_Login\x10\xaf\x02\x12\x15\n" +
	"\x10OP_LoginComplete\x10\xb2\x02\x12 \n" +
	"\x1bOP_LoginExpansionPacketData\x10\xb3\x02\x12\x15\n" +
	"\x10OP_LoginUnknown1\x10\xb4\x02\x12\x15\n" +
	"\x10OP_LoginUnknown2\x10\xb5\x02\x12\x13\n" +
	"\x0eOP_LogoutReply\x10\xb7\x02\x12\x0f\n" +
	"\n" +
	"OP_MarkNPC\x10\xbe\x02\x12\x13\n" +
	"\x0eOP_MarkRaidNPC\x10\xbf\x02\x12\x0f\n" +
	"\n" +
	"OP_Marquee\x10\xc0\x02\x12\x14\n" +
	"\x0fOP_MendHPUpdate\x10\xc3\x02\x12\x17\n" +
	"\x12OP_MercenaryAssign\x10\xc4\x02\x12\x18\n" +
	"\x13OP_MercenaryCommand\x10\xc5\x02\x12\x1c\n" +
	"\x17OP_MercenaryDataRequest\x10\xc6\x02\x12\x1d\n" +
	"\x18OP_MercenaryDataResponse\x10\xc7\x02\x12\x1b\n" +
	"\x16OP_MercenaryDataUpdate\x10\xc8\x02\x12\"\n" +
	"\x1dOP_MercenaryDataUpdateRequest\x10\xc9\x02\x12\x18\n" +
	"\x13OP_MercenaryDismiss\x10\xca\x02\x12\x15\n" +
	"\x10OP_MercenaryHire\x10\xcb\x02\x12\x1f\n" +
	"\x1aOP_MercenarySuspendRequest\x10\xcc\x02\x12 \n" +
	"\x1bOP_MercenarySuspendResponse\x10\xcd\x02\x12\x16\n" +
	"\x11OP_MercenaryTimer\x10\xce\x02\x12\x1d\n" +
	"\x18OP_MercenaryTimerRequest\x10\xcf\x02\x12\x19\n" +
	"\x14OP_MercenaryUnknown1\x10\xd0\x02\x12\"\n" +
	"\x1dOP_MercenaryUnsuspendResponse\x10\xd1\x02\x12\x11\n" +
	"\fOP_MobUpdate\x10\xd6\x02\x12\x19\n" +
	"\x14OP_MoveMultipleItems\x10\xdd\x02\x12\x18\n" +
	"\x13OP_MoveLogDisregard\x10\xde\x02\x12\x16\n" +
	"\x11OP_MoveLogRequest\x10\xdf\x02\x12\x14\n" +
	"\x0fOP_MultiLineMsg\x10\xe0\x02\x12\x1a\n" +
	"\x15OP_NewTitlesAvailable\x10\xe2\x02\x12\x15\n" +
	"\x10OP_OpenContainer\x10\xe5\x02\x12\x1b\n" +
	"\x16OP_OpenDiscordMerchant\x10\xe6\x02\x12\x15\n" +
	"\x10OP_OpenInventory\x10\xe8\x02\x12\x15\n" +
	"\x10OP_PetBuffWindow\x10\xeb\x02\x12\x17\n" +
	"\x12OP_PetCommandState\x10\xed\x02\x12\x0f\n" +
	"\n" +
	"OP_PetHoTT\x10\xee\x02\x12\x19\n" +
	"\x14OP_PetitionCheckout2\x10\xf3\x02\x12\x16\n" +
	"\x11OP_PetitionSearch\x10\xf8\x02\x12\x1d\n" +
	"\x18OP_PetitionSearchResults\x10\xf9\x02\x12\x1a\n" +
	"\x15OP_PetitionSearchText\x10\xfa\x02\x12\x16\n" +
	"\x11OP_PlayerStateAdd\x10\xff\x02\x12\x19\n" +
	"\x14OP_PlayerStateRemove\x10\x80\x03\x12\f\n" +
	"\aOP_Poll\x10\x84\x03\x12\x14\n" +
	"\x0fOP_PollResponse\x10\x85\x03\x12\x15\n" +
	"\x10OP_PopupResponse\x10\x86\x03\x12\x16\n" +
	"\x11OP_PreLogoutReply\x10\x89\x03\x12\"\n" +
	"\x1dOP_PVPLeaderBoardDetailsReply\x10\x8b\x03\x12$\n" +
	"\x1fOP_PVPLeaderBoardDetailsRequest\x10\x8c\x03\x12\x1b\n" +
	"\x16OP_PVPLeaderBoardReply\x10\x8d\x03\x12\x1d\n" +
	"\x18OP_PVPLeaderBoardRequest\x10\x8e\x03\x12\x1a\n" +
	"\x15OP_QueryResponseThing\x10\x90\x03\x12\x1c\n" +
	"\x17OP_QueryUCSServerStatus\x10\x91\x03\x12\x1b\n" +
	"\x16OP_RaidDelegateAbility\x10\x92\x03\x12\x19\n" +
	"\x14OP_RaidClearNPCMarks\x10\x93\x03\x12\x12\n" +
	"\rOP_RaidInvite\x10\x94\x03\x12\x10\n" +
	"\vOP_RaidJoin\x10\x95\x03\x12\x1b\n" +
	"\x16OP_RandomNameGenerator\x10\x97\x03\x12\x17\n" +
	"\x12OP_ReclaimCrystals\x10\xa0\x03\x12\x16\n" +
	"\x11OP_RemoveAllDoors\x10\xa2\x03\x12\x1a\n" +
	"\x15OP_RemoveBlockedBuffs\x10\xa3\x03\x12\x1a\n" +
	"\x15OP_RemoveNimbusEffect\x10\xa4\x03\x12\x12\n" +
	"\rOP_RemoveTrap\x10\xa5\x03\x12\x1c\n" +
	"\x17OP_RequestKnowledgeBase\x10\xab\x03\x12\x15\n" +
	"\x10OP_RespawnWindow\x10\xad\x03\x12\x11\n" +
	"\fOP_RestState\x10\xaf\x03\x12\x0e\n" +
	"\tOP_Rewind\x10\xb0\x03\x12\x14\n" +
	"\x0fOP_RezzComplete\x10\xb2\x03\x12\x11\n" +
	"\fOP_Sacrifice\x10\xb4\x03\x12\x18\n" +
	"\x13OP_SendFindableNPCs\x10\xbe\x03\x12\x17\n" +
	"\x12OP_SendSystemStats\x10\xc4\x03\x12\x14\n" +
	"\x0fOP_SessionReady\x10\xcc\x03\x12\x15\n" +
	"\x10OP_SetChatServer\x10\xcd\x03\x12\x16\n" +
	"\x11OP_SetChatServer2\x10\xce\x03\x12\x0f\n" +
	"\n" +
	"OP_SetFace\x10\xcf\x03\x12\x16\n" +
	"\x11OP_SetGroupTarget\x10\xd0\x03\x12\x14\n" +
	"\x0fOP_SetGuildRank\x10\xd2\x03\x12\x14\n" +
	"\x0fOP_SetStartCity\x10\xd5\x03\x12\x1c\n" +
	"\x17OP_SharedTaskMemberList\x10\xd8\x03\x12\x1b\n" +
	"\x16OP_SharedTaskAddPlayer\x10\xd9\x03\x12\x1e\n" +
	"\x19OP_SharedTaskRemovePlayer\x10\xda\x03\x12\x1c\n" +
	"\x17OP_SharedTaskMakeLeader\x10\xdb\x03\x12\x1e\n" +
	"\x19OP_SharedTaskMemberInvite\x10\xdc\x03\x12\x18\n" +
	"\x13OP_SharedTaskInvite\x10\xdd\x03\x12 \n" +
	"\x1bOP_SharedTaskInviteResponse\x10\xde\x03\x12\x1b\n" +
	"\x16OP_SharedTaskAcceptNew\x10\xdf\x03\x12\x1e\n" +
	"\x19OP_SharedTaskMemberChange\x10\xe0\x03\x12\x1c\n" +
	"\x17OP_SharedTaskPlayerList\x10\xe1\x03\x12\x1e\n" +
	"\x19OP_SharedTaskSelectWindow\x10\xe2\x03\x12\x16\n" +
	"\x11OP_SharedTaskQuit\x10\xe3\x03\x12\x12\n" +
	"\rOP_TaskTimers\x10\xe4\x03\x12\x16\n" +
	"\x11OP_ShopEndConfirm\x10\xe8\x03\x12\x10\n" +
	"\vOP_ShopItem\x10\xe9\x03\x12\x19\n" +
	"\x14OP_Some3ByteHPUpdate\x10\xf0\x03\x12\x19\n" +
	"\x14OP_Some6ByteHPUpdate\x10\xf1\x03\x12\r\n" +
	"\bOP_Sound\x10\xf3\x03\x12\x1b\n" +
	"\x16OP_SpawnPositionUpdate\x10\xf6\x03\x12\x13\n" +
	"\x0eOP_TargetBuffs\x10\xfe\x03\x12\x12\n" +
	"\rOP_TargetHoTT\x10\x80\x04\x12\x1c\n" +
	"\x17OP_TaskActivityComplete\x10\x84\x04\x12\x18\n" +
	"\x13OP_TaskHistoryReply\x10\x86\x04\x12\x1a\n" +
	"\x15OP_TaskHistoryRequest\x10\x87\x04\x12\x18\n" +
	"\x13OP_TaskRequestTimer\x10\x88\x04\x12\x18\n" +
	"\x13OP_TaskSelectWindow\x10\x89\x04\x12\x13\n" +
	"\x0eOP_Translocate\x10\x9d\x04\x12\x1a\n" +
	"\x15OP_TributePointUpdate\x10\xa2\x04\x12\x14\n" +
	"\x0fOP_Untargetable\x10\xa6\x04\x12\x10\n" +
	"\vOP_UpdateAA\x10\xa7\x04\x12\x12\n" +
	"\rOP_UpdateAura\x10\xa8\x04\x12\x15\n" +
	"\x10OP_VetClaimReply\x10\xaa\x04\x12\x17\n" +
	"\x12OP_VetClaimRequest\x10\xab\x04\x12\x1b\n" +
	"\x16OP_VetRewardsAvaliable\x10\xac\x04\x12\x14\n" +
	"\x0fOP_VoiceMacroIn\x10\xad\x04\x12\x15\n" +
	"\x10OP_VoiceMacroOut\x10\xae\x04\x12\x14\n" +
	"\x0fOP_WeaponEquip1\x10\xaf\x04\x12\x0f\n" +
	"\n" +
	"OP_Weblink\x10\xb2\x04\x12\x16\n" +
	"\x11OP_WhoAllResponse\x10\xb4\x04\x12\x19\n" +
	"\x14OP_World_Client_CRC1\x10\xb5\x04\x12\x19\n" +
	"\x14OP_World_Client_CRC2\x10\xb6\x04\x12\x19\n" +
	"\x14OP_World_Client_CRC3\x10\xb7\x04\x12\x18\n" +
	"\x13OP_WorldClientReady\x10\xb8\x04\x12\x15\n" +
	"\x10OP_WorldComplete\x10\xb9\x04\x12\x13\n" +
	"\x0eOP_WorldLogout\x10\xba\x04\x12\x17\n" +
	"\x12OP_WorldUnknown001\x10\xbc\x04\x12\x1c\n" +
	"\x17OP_XTargetAutoAddHaters\x10\xbd\x04\x12\x13\n" +
	"\x0eOP_XTargetOpen\x10\xbe\x04\x12\x1b\n" +
	"\x16OP_XTargetOpenResponse\x10\xbf\x04\x12\x16\n" +
	"\x11OP_XTargetRequest\x10\xc0\x04\x12\x17\n" +
	"\x12OP_XTargetResponse\x10\xc1\x04\x12\x14\n" +
	"\x0fOP_ZoneComplete\x10\xc4\x04\x12\x15\n" +
	"\x10OP_ZoneGuildList\x10\xc6\x04\x12\x18\n" +
	"\x13OP_ZonePlayerToBind\x10\xc8\x04\x12\x17\n" +
	"\x12OP_ZoneServerReady\x10\xca\x04\x12\x0f\n" +
	"\n" +
	"OP_ResetAA\x10\xcd\x04\x12\x12\n" +
	"\rOP_UnderWorld\x10\xce\x04:G\n" +
	"\vmessageType\x12!.google.protobuf.EnumValueOptions\x18\x94# \x01(\tR\vmessageType\x88\x01\x01:K\n" +
	"\rrepeatedField\x12!.google.protobuf.EnumValueOptions\x18\x95# \x01(\tR\rrepeatedField\x88\x01\x01B\bZ\x06./mainb\x06proto3"

var (
	file_EQMessage_proto_rawDescOnce sync.Once
	file_EQMessage_proto_rawDescData []byte
)

func file_EQMessage_proto_rawDescGZIP() []byte {
	file_EQMessage_proto_rawDescOnce.Do(func() {
		file_EQMessage_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_EQMessage_proto_rawDesc), len(file_EQMessage_proto_rawDesc)))
	})
	return file_EQMessage_proto_rawDescData
}

var file_EQMessage_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_EQMessage_proto_msgTypes = make([]protoimpl.MessageInfo, 335)
var file_EQMessage_proto_goTypes = []any{
	(ItemPacketType)(0),                   // 0: eq.ItemPacketType
	(OpCodes)(0),                          // 1: eq.OpCodes
	(*LoginMessage)(nil),                  // 2: eq.LoginMessage
	(*LoginReply)(nil),                    // 3: eq.LoginReply
	(*LoginRequest)(nil),                  // 4: eq.LoginRequest
	(*WorldServer)(nil),                   // 5: eq.WorldServer
	(*LoginServerResponse)(nil),           // 6: eq.LoginServerResponse
	(*PlayEverquest)(nil),                 // 7: eq.PlayEverquest
	(*PlayEverquestResponse)(nil),         // 8: eq.PlayEverquestResponse
	(*WebInitiateConnection)(nil),         // 9: eq.WebInitiateConnection
	(*LoginInfo)(nil),                     // 10: eq.LoginInfo
	(*Tint)(nil),                          // 11: eq.Tint
	(*CharSelectEquip)(nil),               // 12: eq.CharSelectEquip
	(*CharacterSelectEntry)(nil),          // 13: eq.CharacterSelectEntry
	(*CharacterSelect)(nil),               // 14: eq.CharacterSelect
	(*EnterWorld)(nil),                    // 15: eq.EnterWorld
	(*InventorySlot)(nil),                 // 16: eq.InventorySlot
	(*TypelessInventorySlot)(nil),         // 17: eq.TypelessInventorySlot
	(*NameApproval)(nil),                  // 18: eq.NameApproval
	(*EntityId)(nil),                      // 19: eq.EntityId
	(*Duel)(nil),                          // 20: eq.Duel
	(*DuelResponse)(nil),                  // 21: eq.DuelResponse
	(*AdventureInfo)(nil),                 // 22: eq.AdventureInfo
	(*TextureProfile)(nil),                // 23: eq.TextureProfile
	(*TintProfile)(nil),                   // 24: eq.TintProfile
	(*Spawns)(nil),                        // 25: eq.Spawns
	(*Spawn)(nil),                         // 26: eq.Spawn
	(*NewSpawn)(nil),                      // 27: eq.NewSpawn
	(*ClientZoneEntry)(nil),               // 28: eq.ClientZoneEntry
	(*ServerZoneEntry)(nil),               // 29: eq.ServerZoneEntry
	(*NewZone)(nil),                       // 30: eq.NewZone
	(*MemorizeSpell)(nil),                 // 31: eq.MemorizeSpell
	(*Charm)(nil),                         // 32: eq.Charm
	(*InterruptCast)(nil),                 // 33: eq.InterruptCast
	(*DeleteSpell)(nil),                   // 34: eq.DeleteSpell
	(*ManaChange)(nil),                    // 35: eq.ManaChange
	(*SwapSpell)(nil),                     // 36: eq.SwapSpell
	(*BeginCast)(nil),                     // 37: eq.BeginCast
	(*CastSpell)(nil),                     // 38: eq.CastSpell
	(*SpawnAppearance)(nil),               // 39: eq.SpawnAppearance
	(*SpellBuff)(nil),                     // 40: eq.SpellBuff
	(*SpellBuffPacket)(nil),               // 41: eq.SpellBuffPacket
	(*ItemNamePacket)(nil),                // 42: eq.ItemNamePacket
	(*ItemProperties)(nil),                // 43: eq.ItemProperties
	(*GMTrainee)(nil),                     // 44: eq.GMTrainee
	(*GMTrainEnd)(nil),                    // 45: eq.GMTrainEnd
	(*GMSkillChange)(nil),                 // 46: eq.GMSkillChange
	(*ConsentResponse)(nil),               // 47: eq.ConsentResponse
	(*NameGeneration)(nil),                // 48: eq.NameGeneration
	(*NameApprove)(nil),                   // 49: eq.NameApprove
	(*CharCreate)(nil),                    // 50: eq.CharCreate
	(*AA_Array)(nil),                      // 51: eq.AA_Array
	(*Disciplines)(nil),                   // 52: eq.Disciplines
	(*Tribute)(nil),                       // 53: eq.Tribute
	(*BandolierItem)(nil),                 // 54: eq.BandolierItem
	(*Bandolier)(nil),                     // 55: eq.Bandolier
	(*PotionBeltItem)(nil),                // 56: eq.PotionBeltItem
	(*PotionBelt)(nil),                    // 57: eq.PotionBelt
	(*StringList)(nil),                    // 58: eq.StringList
	(*GroupLeadershipAA)(nil),             // 59: eq.GroupLeadershipAA
	(*RaidLeadershipAA)(nil),              // 60: eq.RaidLeadershipAA
	(*LeadershipAA)(nil),                  // 61: eq.LeadershipAA
	(*Bind)(nil),                          // 62: eq.Bind
	(*PVPStatsEntry)(nil),                 // 63: eq.PVPStatsEntry
	(*PlayerProfile)(nil),                 // 64: eq.PlayerProfile
	(*ClientTarget)(nil),                  // 65: eq.ClientTarget
	(*TargetReject)(nil),                  // 66: eq.TargetReject
	(*PetCommand)(nil),                    // 67: eq.PetCommand
	(*DeleteSpawn)(nil),                   // 68: eq.DeleteSpawn
	(*ChannelMessage)(nil),                // 69: eq.ChannelMessage
	(*SpecialMesg)(nil),                   // 70: eq.SpecialMesg
	(*WearChange)(nil),                    // 71: eq.WearChange
	(*BindWound)(nil),                     // 72: eq.BindWound
	(*ZoneChange)(nil),                    // 73: eq.ZoneChange
	(*RequestClientZoneChange)(nil),       // 74: eq.RequestClientZoneChange
	(*Animation)(nil),                     // 75: eq.Animation
	(*Action)(nil),                        // 76: eq.Action
	(*CombatDamage)(nil),                  // 77: eq.CombatDamage
	(*Consider)(nil),                      // 78: eq.Consider
	(*Death)(nil),                         // 79: eq.Death
	(*BecomeCorpse)(nil),                  // 80: eq.BecomeCorpse
	(*PlayerPositionUpdateServer)(nil),    // 81: eq.PlayerPositionUpdateServer
	(*PlayerPositionUpdateClient)(nil),    // 82: eq.PlayerPositionUpdateClient
	(*SpawnHPUpdate)(nil),                 // 83: eq.SpawnHPUpdate
	(*SpawnHPUpdate2)(nil),                // 84: eq.SpawnHPUpdate2
	(*Stamina)(nil),                       // 85: eq.Stamina
	(*LevelUpdate)(nil),                   // 86: eq.LevelUpdate
	(*ExpUpdate)(nil),                     // 87: eq.ExpUpdate
	(*ItemPacket)(nil),                    // 88: eq.ItemPacket
	(*BulkItemPacket)(nil),                // 89: eq.BulkItemPacket
	(*Consume)(nil),                       // 90: eq.Consume
	(*DeleteItem)(nil),                    // 91: eq.DeleteItem
	(*MoveItem)(nil),                      // 92: eq.MoveItem
	(*MultiMoveItemSub)(nil),              // 93: eq.MultiMoveItemSub
	(*MultiMoveItem)(nil),                 // 94: eq.MultiMoveItem
	(*MoveCoin)(nil),                      // 95: eq.MoveCoin
	(*TradeBusy)(nil),                     // 96: eq.TradeBusy
	(*TradeCoin)(nil),                     // 97: eq.TradeCoin
	(*TradeMoneyUpdate)(nil),              // 98: eq.TradeMoneyUpdate
	(*Surname)(nil),                       // 99: eq.Surname
	(*GuildsList)(nil),                    // 100: eq.GuildsList
	(*MoneyOnCorpse)(nil),                 // 101: eq.MoneyOnCorpse
	(*LootingItem)(nil),                   // 102: eq.LootingItem
	(*GuildManageStatus)(nil),             // 103: eq.GuildManageStatus
	(*GuildJoin)(nil),                     // 104: eq.GuildJoin
	(*GuildInviteAccept)(nil),             // 105: eq.GuildInviteAccept
	(*GuildManageRemove)(nil),             // 106: eq.GuildManageRemove
	(*Guildcommand)(nil),                  // 107: eq.Guildcommand
	(*OnLevelMessage)(nil),                // 108: eq.OnLevelMessage
	(*GMZoneRequest)(nil),                 // 109: eq.GMZoneRequest
	(*GMSummon)(nil),                      // 110: eq.GMSummon
	(*GMGoto)(nil),                        // 111: eq.GMGoto
	(*GMLastName)(nil),                    // 112: eq.GMLastName
	(*CombatAbility)(nil),                 // 113: eq.CombatAbility
	(*Instill_Doubt)(nil),                 // 114: eq.Instill_Doubt
	(*GiveItem)(nil),                      // 115: eq.GiveItem
	(*RandomReq)(nil),                     // 116: eq.RandomReq
	(*RandomReply)(nil),                   // 117: eq.RandomReply
	(*LFG)(nil),                           // 118: eq.LFG
	(*LFG_Appearance)(nil),                // 119: eq.LFG_Appearance
	(*TimeOfDay)(nil),                     // 120: eq.TimeOfDay
	(*Merchant_Click)(nil),                // 121: eq.Merchant_Click
	(*Merchant_Sell)(nil),                 // 122: eq.Merchant_Sell
	(*Merchant_Purchase)(nil),             // 123: eq.Merchant_Purchase
	(*Merchant_DelItem)(nil),              // 124: eq.Merchant_DelItem
	(*Adventure_Purchase)(nil),            // 125: eq.Adventure_Purchase
	(*Adventure_Sell)(nil),                // 126: eq.Adventure_Sell
	(*AdventurePoints_Update)(nil),        // 127: eq.AdventurePoints_Update
	(*AdventureFinish)(nil),               // 128: eq.AdventureFinish
	(*AdventureRequest)(nil),              // 129: eq.AdventureRequest
	(*AdventureRequestResponse)(nil),      // 130: eq.AdventureRequestResponse
	(*Illusion)(nil),                      // 131: eq.Illusion
	(*ZonePoint_Entry)(nil),               // 132: eq.ZonePoint_Entry
	(*ZonePoints)(nil),                    // 133: eq.ZonePoints
	(*SkillUpdate)(nil),                   // 134: eq.SkillUpdate
	(*ZoneUnavail)(nil),                   // 135: eq.ZoneUnavail
	(*GroupGeneric)(nil),                  // 136: eq.GroupGeneric
	(*GroupCancel)(nil),                   // 137: eq.GroupCancel
	(*GroupUpdate)(nil),                   // 138: eq.GroupUpdate
	(*GroupUpdate2)(nil),                  // 139: eq.GroupUpdate2
	(*GroupJoin)(nil),                     // 140: eq.GroupJoin
	(*FaceChange)(nil),                    // 141: eq.FaceChange
	(*TradeRequest)(nil),                  // 142: eq.TradeRequest
	(*TradeAccept)(nil),                   // 143: eq.TradeAccept
	(*CancelTrade)(nil),                   // 144: eq.CancelTrade
	(*PetitionUpdate)(nil),                // 145: eq.PetitionUpdate
	(*Petition)(nil),                      // 146: eq.Petition
	(*Who_All)(nil),                       // 147: eq.Who_All
	(*Stun)(nil),                          // 148: eq.Stun
	(*AugmentItem)(nil),                   // 149: eq.AugmentItem
	(*Emote)(nil),                         // 150: eq.Emote
	(*Inspect)(nil),                       // 151: eq.Inspect
	(*InspectResponse)(nil),               // 152: eq.InspectResponse
	(*SetDataRate)(nil),                   // 153: eq.SetDataRate
	(*SetServerFilter)(nil),               // 154: eq.SetServerFilter
	(*SetServerFilterAck)(nil),            // 155: eq.SetServerFilterAck
	(*IncreaseStat)(nil),                  // 156: eq.IncreaseStat
	(*GMName)(nil),                        // 157: eq.GMName
	(*GMDelCorpse)(nil),                   // 158: eq.GMDelCorpse
	(*GMKick)(nil),                        // 159: eq.GMKick
	(*GMKill)(nil),                        // 160: eq.GMKill
	(*GMEmoteZone)(nil),                   // 161: eq.GMEmoteZone
	(*BookText)(nil),                      // 162: eq.BookText
	(*BookRequest)(nil),                   // 163: eq.BookRequest
	(*Object)(nil),                        // 164: eq.Object
	(*ClickObject)(nil),                   // 165: eq.ClickObject
	(*ClickObjectAction)(nil),             // 166: eq.ClickObjectAction
	(*Shielding)(nil),                     // 167: eq.Shielding
	(*ClickObjectAck)(nil),                // 168: eq.ClickObjectAck
	(*CloseContainer)(nil),                // 169: eq.CloseContainer
	(*Door)(nil),                          // 170: eq.Door
	(*DoorSpawns)(nil),                    // 171: eq.DoorSpawns
	(*ClickDoor)(nil),                     // 172: eq.ClickDoor
	(*MoveDoor)(nil),                      // 173: eq.MoveDoor
	(*ControlBoat)(nil),                   // 174: eq.ControlBoat
	(*BecomeNPC)(nil),                     // 175: eq.BecomeNPC
	(*Underworld)(nil),                    // 176: eq.Underworld
	(*Resurrect)(nil),                     // 177: eq.Resurrect
	(*SetRunMode)(nil),                    // 178: eq.SetRunMode
	(*EnvDamage2)(nil),                    // 179: eq.EnvDamage2
	(*BazaarWindowStart)(nil),             // 180: eq.BazaarWindowStart
	(*BazaarWelcome)(nil),                 // 181: eq.BazaarWelcome
	(*BazaarSearch)(nil),                  // 182: eq.BazaarSearch
	(*BazaarInspect)(nil),                 // 183: eq.BazaarInspect
	(*BazaarReturnDone)(nil),              // 184: eq.BazaarReturnDone
	(*BazaarSearchResults)(nil),           // 185: eq.BazaarSearchResults
	(*ServerSideFilters)(nil),             // 186: eq.ServerSideFilters
	(*ItemViewRequest)(nil),               // 187: eq.ItemViewRequest
	(*ItemVerifyRequest)(nil),             // 188: eq.ItemVerifyRequest
	(*PickPocket)(nil),                    // 189: eq.PickPocket
	(*SPickPocket)(nil),                   // 190: eq.sPickPocket
	(*LogServer)(nil),                     // 191: eq.LogServer
	(*ApproveWorld)(nil),                  // 192: eq.ApproveWorld
	(*ClientError)(nil),                   // 193: eq.ClientError
	(*MobHealth)(nil),                     // 194: eq.MobHealth
	(*Track)(nil),                         // 195: eq.Track
	(*TrackTarget)(nil),                   // 196: eq.TrackTarget
	(*Tracking)(nil),                      // 197: eq.Tracking
	(*ZoneServerInfo)(nil),                // 198: eq.ZoneServerInfo
	(*WhoAllPlayer)(nil),                  // 199: eq.WhoAllPlayer
	(*WhoAllReturn)(nil),                  // 200: eq.WhoAllReturn
	(*Trader)(nil),                        // 201: eq.Trader
	(*ClickTrader)(nil),                   // 202: eq.ClickTrader
	(*GetItems)(nil),                      // 203: eq.GetItems
	(*BecomeTrader)(nil),                  // 204: eq.BecomeTrader
	(*Trader_ShowItems)(nil),              // 205: eq.Trader_ShowItems
	(*TraderBuy)(nil),                     // 206: eq.TraderBuy
	(*TraderItemUpdate)(nil),              // 207: eq.TraderItemUpdate
	(*MoneyUpdate)(nil),                   // 208: eq.MoneyUpdate
	(*TraderDelItem)(nil),                 // 209: eq.TraderDelItem
	(*TraderClick)(nil),                   // 210: eq.TraderClick
	(*FormattedMessage)(nil),              // 211: eq.FormattedMessage
	(*SimpleMessage)(nil),                 // 212: eq.SimpleMessage
	(*GuildMemberEntry)(nil),              // 213: eq.GuildMemberEntry
	(*GuildMembers)(nil),                  // 214: eq.GuildMembers
	(*GuildMOTD)(nil),                     // 215: eq.GuildMOTD
	(*GuildUpdate_PublicNote)(nil),        // 216: eq.GuildUpdate_PublicNote
	(*GuildDemote)(nil),                   // 217: eq.GuildDemote
	(*GuildRemove)(nil),                   // 218: eq.GuildRemove
	(*GuildMakeLeader)(nil),               // 219: eq.GuildMakeLeader
	(*Make_Pet)(nil),                      // 220: eq.Make_Pet
	(*Ground_Spawn)(nil),                  // 221: eq.Ground_Spawn
	(*Ground_Spawns)(nil),                 // 222: eq.Ground_Spawns
	(*ApproveZone)(nil),                   // 223: eq.ApproveZone
	(*ZoneInSendName)(nil),                // 224: eq.ZoneInSendName
	(*ZoneInSendName2)(nil),               // 225: eq.ZoneInSendName2
	(*StartTribute)(nil),                  // 226: eq.StartTribute
	(*TributeLevel)(nil),                  // 227: eq.TributeLevel
	(*TributeAbility)(nil),                // 228: eq.TributeAbility
	(*GuildTributeAbility)(nil),           // 229: eq.GuildTributeAbility
	(*SelectTributeReq)(nil),              // 230: eq.SelectTributeReq
	(*SelectTributeReply)(nil),            // 231: eq.SelectTributeReply
	(*TributeInfo)(nil),                   // 232: eq.TributeInfo
	(*TributeItem)(nil),                   // 233: eq.TributeItem
	(*TributePoint)(nil),                  // 234: eq.TributePoint
	(*TributeMoney)(nil),                  // 235: eq.TributeMoney
	(*Split)(nil),                         // 236: eq.Split
	(*NewCombine)(nil),                    // 237: eq.NewCombine
	(*TradeskillFavorites)(nil),           // 238: eq.TradeskillFavorites
	(*RecipesSearch)(nil),                 // 239: eq.RecipesSearch
	(*RecipeReply)(nil),                   // 240: eq.RecipeReply
	(*RecipeAutoCombine)(nil),             // 241: eq.RecipeAutoCombine
	(*LevelAppearance)(nil),               // 242: eq.LevelAppearance
	(*MerchantList)(nil),                  // 243: eq.MerchantList
	(*TempMerchantList)(nil),              // 244: eq.TempMerchantList
	(*FindPerson_Point)(nil),              // 245: eq.FindPerson_Point
	(*FindPersonRequest)(nil),             // 246: eq.FindPersonRequest
	(*FindPersonResult)(nil),              // 247: eq.FindPersonResult
	(*MobRename)(nil),                     // 248: eq.MobRename
	(*PlayMP3)(nil),                       // 249: eq.PlayMP3
	(*TitleEntry)(nil),                    // 250: eq.TitleEntry
	(*Titles)(nil),                        // 251: eq.Titles
	(*TitleListEntry)(nil),                // 252: eq.TitleListEntry
	(*TitleList)(nil),                     // 253: eq.TitleList
	(*SetTitle)(nil),                      // 254: eq.SetTitle
	(*SetTitleReply)(nil),                 // 255: eq.SetTitleReply
	(*TaskDescription)(nil),               // 256: eq.TaskDescription
	(*TaskMemberList)(nil),                // 257: eq.TaskMemberList
	(*TaskActivity)(nil),                  // 258: eq.TaskActivity
	(*TaskHistoryEntry)(nil),              // 259: eq.TaskHistoryEntry
	(*TaskHistory)(nil),                   // 260: eq.TaskHistory
	(*AcceptNewTask)(nil),                 // 261: eq.AcceptNewTask
	(*CancelTask)(nil),                    // 262: eq.CancelTask
	(*AvaliableTask)(nil),                 // 263: eq.AvaliableTask
	(*BankerChange)(nil),                  // 264: eq.BankerChange
	(*LeadershipExpUpdate)(nil),           // 265: eq.LeadershipExpUpdate
	(*UpdateLeadershipAA)(nil),            // 266: eq.UpdateLeadershipAA
	(*LeadExpUpdate)(nil),                 // 267: eq.LeadExpUpdate
	(*RaidGeneral)(nil),                   // 268: eq.RaidGeneral
	(*RaidAddMember)(nil),                 // 269: eq.RaidAddMember
	(*RaidNote)(nil),                      // 270: eq.RaidNote
	(*RaidMOTD)(nil),                      // 271: eq.RaidMOTD
	(*RaidLeadershipUpdate)(nil),          // 272: eq.RaidLeadershipUpdate
	(*RaidCreate)(nil),                    // 273: eq.RaidCreate
	(*RaidMemberInfo)(nil),                // 274: eq.RaidMemberInfo
	(*RaidDetails)(nil),                   // 275: eq.RaidDetails
	(*RaidMembers)(nil),                   // 276: eq.RaidMembers
	(*DynamicWall)(nil),                   // 277: eq.DynamicWall
	(*BandolierCreate)(nil),               // 278: eq.BandolierCreate
	(*BandolierDelete)(nil),               // 279: eq.BandolierDelete
	(*BandolierSet)(nil),                  // 280: eq.BandolierSet
	(*Arrow)(nil),                         // 281: eq.Arrow
	(*Consent)(nil),                       // 282: eq.Consent
	(*AdventureMerchant)(nil),             // 283: eq.AdventureMerchant
	(*Save)(nil),                          // 284: eq.Save
	(*GMtoggle)(nil),                      // 285: eq.GMtoggle
	(*GroupInvite)(nil),                   // 286: eq.GroupInvite
	(*ColoredText)(nil),                   // 287: eq.ColoredText
	(*UseAA)(nil),                         // 288: eq.UseAA
	(*AA_Ability)(nil),                    // 289: eq.AA_Ability
	(*SendAA)(nil),                        // 290: eq.SendAA
	(*AA_List)(nil),                       // 291: eq.AA_List
	(*AA_Action)(nil),                     // 292: eq.AA_Action
	(*AAExpUpdate)(nil),                   // 293: eq.AAExpUpdate
	(*AltAdvStats)(nil),                   // 294: eq.AltAdvStats
	(*PlayerAA)(nil),                      // 295: eq.PlayerAA
	(*AATable)(nil),                       // 296: eq.AATable
	(*Weather)(nil),                       // 297: eq.Weather
	(*LoadSpellSet)(nil),                  // 298: eq.LoadSpellSet
	(*ApplyPoison)(nil),                   // 299: eq.ApplyPoison
	(*GuildMemberUpdate)(nil),             // 300: eq.GuildMemberUpdate
	(*VeteranRewardItem)(nil),             // 301: eq.VeteranRewardItem
	(*VeteranReward)(nil),                 // 302: eq.VeteranReward
	(*ExpeditionInvite)(nil),              // 303: eq.ExpeditionInvite
	(*ExpeditionInviteResponse)(nil),      // 304: eq.ExpeditionInviteResponse
	(*DynamicZoneInfo)(nil),               // 305: eq.DynamicZoneInfo
	(*DynamicZoneMemberEntry)(nil),        // 306: eq.DynamicZoneMemberEntry
	(*DynamicZoneMemberList)(nil),         // 307: eq.DynamicZoneMemberList
	(*DynamicZoneMemberListName)(nil),     // 308: eq.DynamicZoneMemberListName
	(*ExpeditionLockoutTimerEntry)(nil),   // 309: eq.ExpeditionLockoutTimerEntry
	(*ExpeditionLockoutTimers)(nil),       // 310: eq.ExpeditionLockoutTimers
	(*DynamicZoneLeaderName)(nil),         // 311: eq.DynamicZoneLeaderName
	(*ExpeditionCommand)(nil),             // 312: eq.ExpeditionCommand
	(*ExpeditionCommandSwap)(nil),         // 313: eq.ExpeditionCommandSwap
	(*ExpeditionExpireWarning)(nil),       // 314: eq.ExpeditionExpireWarning
	(*DynamicZoneCompassEntry)(nil),       // 315: eq.DynamicZoneCompassEntry
	(*DynamicZoneCompass)(nil),            // 316: eq.DynamicZoneCompass
	(*DynamicZoneChooseZoneEntry)(nil),    // 317: eq.DynamicZoneChooseZoneEntry
	(*DynamicZoneChooseZone)(nil),         // 318: eq.DynamicZoneChooseZone
	(*DynamicZoneChooseZoneReply)(nil),    // 319: eq.DynamicZoneChooseZoneReply
	(*LFGuild_SearchPlayer)(nil),          // 320: eq.LFGuild_SearchPlayer
	(*LFGuild_SearchGuild)(nil),           // 321: eq.LFGuild_SearchGuild
	(*LFGuild_Playertoggle)(nil),          // 322: eq.LFGuild_Playertoggle
	(*LFGuild_Guildtoggle)(nil),           // 323: eq.LFGuild_Guildtoggle
	(*SayLinkBodyFrame)(nil),              // 324: eq.SayLinkBodyFrame
	(*WebLogin)(nil),                      // 325: eq.WebLogin
	(*WebLoginServerRequest)(nil),         // 326: eq.WebLoginServerRequest
	(*WebLoginReply)(nil),                 // 327: eq.WebLoginReply
	(*WebLoginWorldServer)(nil),           // 328: eq.WebLoginWorldServer
	(*WebLoginServerResponse)(nil),        // 329: eq.WebLoginServerResponse
	(*WebPlayEverquestRequest)(nil),       // 330: eq.WebPlayEverquestRequest
	(*WebPlayEverquestResponse)(nil),      // 331: eq.WebPlayEverquestResponse
	(*WebSession)(nil),                    // 332: eq.WebSession
	(*Zero)(nil),                          // 333: eq.Zero
	(*Int)(nil),                           // 334: eq.Int
	(*Bool)(nil),                          // 335: eq.Bool
	(*String)(nil),                        // 336: eq.String
	(*descriptorpb.EnumValueOptions)(nil), // 337: google.protobuf.EnumValueOptions
}
var file_EQMessage_proto_depIdxs = []int32{
	5,   // 0: eq.LoginServerResponse.servers:type_name -> eq.WorldServer
	11,  // 1: eq.CharSelectEquip.color:type_name -> eq.Tint
	12,  // 2: eq.CharacterSelectEntry.equip:type_name -> eq.CharSelectEquip
	13,  // 3: eq.CharacterSelect.characters:type_name -> eq.CharacterSelectEntry
	26,  // 4: eq.Spawns.spawns:type_name -> eq.Spawn
	23,  // 5: eq.Spawn.equipment:type_name -> eq.TextureProfile
	26,  // 6: eq.NewSpawn.spawn:type_name -> eq.Spawn
	27,  // 7: eq.ServerZoneEntry.player:type_name -> eq.NewSpawn
	40,  // 8: eq.SpellBuffPacket.buff:type_name -> eq.SpellBuff
	54,  // 9: eq.Bandolier.items:type_name -> eq.BandolierItem
	56,  // 10: eq.PotionBelt.items:type_name -> eq.PotionBeltItem
	59,  // 11: eq.LeadershipAA.group:type_name -> eq.GroupLeadershipAA
	60,  // 12: eq.LeadershipAA.raid:type_name -> eq.RaidLeadershipAA
	62,  // 13: eq.PlayerProfile.binds:type_name -> eq.Bind
	23,  // 14: eq.PlayerProfile.item_material:type_name -> eq.TextureProfile
	51,  // 15: eq.PlayerProfile.aa_array:type_name -> eq.AA_Array
	40,  // 16: eq.PlayerProfile.buffs:type_name -> eq.SpellBuff
	52,  // 17: eq.PlayerProfile.disciplines:type_name -> eq.Disciplines
	55,  // 18: eq.PlayerProfile.bandoliers:type_name -> eq.Bandolier
	57,  // 19: eq.PlayerProfile.potionbelt:type_name -> eq.PotionBelt
	58,  // 20: eq.PlayerProfile.group_members:type_name -> eq.StringList
	53,  // 21: eq.PlayerProfile.tributes:type_name -> eq.Tribute
	61,  // 22: eq.PlayerProfile.leader_abilities:type_name -> eq.LeadershipAA
	63,  // 23: eq.PlayerProfile.pvp_last_kill:type_name -> eq.PVPStatsEntry
	63,  // 24: eq.PlayerProfile.pvp_last_death:type_name -> eq.PVPStatsEntry
	63,  // 25: eq.PlayerProfile.pvp_recent_kills:type_name -> eq.PVPStatsEntry
	0,   // 26: eq.ItemPacket.packet_type:type_name -> eq.ItemPacketType
	16,  // 27: eq.MultiMoveItemSub.from_slot:type_name -> eq.InventorySlot
	16,  // 28: eq.MultiMoveItemSub.to_slot:type_name -> eq.InventorySlot
	93,  // 29: eq.MultiMoveItem.moves:type_name -> eq.MultiMoveItemSub
	58,  // 30: eq.GuildsList.guilds:type_name -> eq.StringList
	132, // 31: eq.ZonePoints.zpe:type_name -> eq.ZonePoint_Entry
	58,  // 32: eq.GroupUpdate.membername:type_name -> eq.StringList
	58,  // 33: eq.GroupUpdate2.membername:type_name -> eq.StringList
	59,  // 34: eq.GroupUpdate2.leader_aas:type_name -> eq.GroupLeadershipAA
	58,  // 35: eq.InspectResponse.itemnames:type_name -> eq.StringList
	170, // 36: eq.DoorSpawns.doors:type_name -> eq.Door
	180, // 37: eq.BazaarWelcome.beginning:type_name -> eq.BazaarWindowStart
	180, // 38: eq.BazaarSearch.beginning:type_name -> eq.BazaarWindowStart
	180, // 39: eq.BazaarSearchResults.beginning:type_name -> eq.BazaarWindowStart
	195, // 40: eq.Tracking.entries:type_name -> eq.Track
	199, // 41: eq.WhoAllReturn.player:type_name -> eq.WhoAllPlayer
	213, // 42: eq.GuildMembers.member:type_name -> eq.GuildMemberEntry
	221, // 43: eq.Ground_Spawns.spawn:type_name -> eq.Ground_Spawn
	227, // 44: eq.TributeAbility.tiers:type_name -> eq.TributeLevel
	228, // 45: eq.GuildTributeAbility.ability:type_name -> eq.TributeAbility
	250, // 46: eq.Titles.titles:type_name -> eq.TitleEntry
	252, // 47: eq.TitleList.titles:type_name -> eq.TitleListEntry
	259, // 48: eq.TaskHistory.entries:type_name -> eq.TaskHistoryEntry
	268, // 49: eq.RaidAddMember.raid_gen:type_name -> eq.RaidGeneral
	268, // 50: eq.RaidNote.general:type_name -> eq.RaidGeneral
	268, // 51: eq.RaidMOTD.general:type_name -> eq.RaidGeneral
	59,  // 52: eq.RaidLeadershipUpdate.group:type_name -> eq.GroupLeadershipAA
	60,  // 53: eq.RaidLeadershipUpdate.raid:type_name -> eq.RaidLeadershipAA
	61,  // 54: eq.RaidDetails.abilities:type_name -> eq.LeadershipAA
	275, // 55: eq.RaidMembers.details:type_name -> eq.RaidDetails
	274, // 56: eq.RaidMembers.members:type_name -> eq.RaidMemberInfo
	274, // 57: eq.RaidMembers.empty:type_name -> eq.RaidMemberInfo
	289, // 58: eq.SendAA.abilities:type_name -> eq.AA_Ability
	290, // 59: eq.AA_List.aa:type_name -> eq.SendAA
	51,  // 60: eq.PlayerAA.aa_list:type_name -> eq.AA_Array
	51,  // 61: eq.AATable.aa_list:type_name -> eq.AA_Array
	301, // 62: eq.VeteranReward.item:type_name -> eq.VeteranRewardItem
	306, // 63: eq.DynamicZoneMemberList.members:type_name -> eq.DynamicZoneMemberEntry
	309, // 64: eq.ExpeditionLockoutTimers.timers:type_name -> eq.ExpeditionLockoutTimerEntry
	315, // 65: eq.DynamicZoneCompass.entries:type_name -> eq.DynamicZoneCompassEntry
	317, // 66: eq.DynamicZoneChooseZone.choices:type_name -> eq.DynamicZoneChooseZoneEntry
	328, // 67: eq.WebLoginServerResponse.servers:type_name -> eq.WebLoginWorldServer
	337, // 68: eq.messageType:extendee -> google.protobuf.EnumValueOptions
	337, // 69: eq.repeatedField:extendee -> google.protobuf.EnumValueOptions
	70,  // [70:70] is the sub-list for method output_type
	70,  // [70:70] is the sub-list for method input_type
	70,  // [70:70] is the sub-list for extension type_name
	68,  // [68:70] is the sub-list for extension extendee
	0,   // [0:68] is the sub-list for field type_name
}

func init() { file_EQMessage_proto_init() }
func file_EQMessage_proto_init() {
	if File_EQMessage_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_EQMessage_proto_rawDesc), len(file_EQMessage_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   335,
			NumExtensions: 2,
			NumServices:   0,
		},
		GoTypes:           file_EQMessage_proto_goTypes,
		DependencyIndexes: file_EQMessage_proto_depIdxs,
		EnumInfos:         file_EQMessage_proto_enumTypes,
		MessageInfos:      file_EQMessage_proto_msgTypes,
		ExtensionInfos:    file_EQMessage_proto_extTypes,
	}.Build()
	File_EQMessage_proto = out.File
	file_EQMessage_proto_goTypes = nil
	file_EQMessage_proto_depIdxs = nil
}
